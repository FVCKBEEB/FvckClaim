{
	"id": "2d78466b86f413da5d68df402e8dbfdf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"FvckClaim.sol": {
				"content": "/*\n______  _   _  _____  _   __  _____  _____   ___  ___  ______  ___ _____ ______ \n|  ___|| | | |/  __ \\| | / / /  ___|/  __ \\ / _ \\ |  \\/  ||  \\/  ||  ___|| ___ \\\n| |_   | | | || /  \\/| |/ /  \\ `--. | /  \\// /_\\ \\| .  . || .  . || |__  | |_/ /\n|  _|  | | | || |    |    \\   `--. \\| |    |  _  || |\\/| || |\\/| ||  __| |    / \n| |    \\ \\_/ /| \\__/\\| |\\  \\ /\\__/ /| \\__/\\| | | || |  | || |  | || |___ | |\\ \\ \n\\_|     \\___/  \\____/\\_| \\_/ \\____/  \\____/\\_| |_/\\_|  |_/\\_|  |_/\\____/ \\_| \\_|\n\n💢🤬 The FVCK Ecosystem was created for investors who hate scammers, offering innovative \ntools that allow anonymous reporting with irrefutable proof of fraud in the market. \nFVCK is a memecoin with real utility, bringing a revolution in security and transparency \nto the crypto market. \n\n    🔗 Website: https://fvckbeeb.com\n    🚀 Group: https://t.me/FVCKBEEB_US\n    🦖 DinoBlock0x(DEV): https://t.me/DinoBlock0x \n\n    🫂 Based Team\n    🔒 Safe & Transparent\n    🔥 Deflationary Token \n    🏦 Token Meme Utility\n    🌟 Engaged Community \n    🌍 Decentralized Autonomous Organization (DAO)\n\nPart of our ecosystem:\n    🧷 Space ID. Project wallet addresses identified. \n    ⚖️ Snapshot. DAO management system. \n    🔑 Safe.Global. Multi-signature wallet.\n\n*/\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n// =============== Imports from OpenZeppelin =============== \nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n/**\n * @title FVCKCLAIM\n * @notice Contract to lock BEP20/ERC20 tokens received externally (via transfer),\n *         manage a mapping of wallets authorized to claim specific balances,\n *         and allow withdrawal of these tokens only once.\n */\ncontract FvckClaim is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    // Address of the token to be \"locked\" and distributed\n    IERC20 public immutable token;\n\n    // If the claim is enabled or not (global control)\n    bool public claimEnabled;\n\n    // Mapping: wallet => amount of tokens claimable\n    mapping(address => uint256) claimableBalances;\n\n    // Mapping: wallet => total tokens already claimed\n    mapping(address => uint256) claimedBalances;\n\n    // Mapping: wallet => claim blocked status\n    mapping(address => bool) public claimBlocked;\n\n    // Mapping: wallet => approval status for claim\n    mapping(address => bool) public approvedForClaim;\n\n    // For frontend and statistics\n    uint256 public totalRegisteredAddresses; // Total registered addresses\n    uint256 public totalAddressesClaimed; // Total addresses that claimed\n    uint256 public totalAllocated; // Total sum of allocated tokens\n    mapping(address => bool) private _isRegistered; // Address registration\n\n    // Security restrictions\n    uint256 private constant DECIMALS_MULTIPLIER = 10 ** 18; // Multiplier for 18 decimals\n    uint256 public maxAllocationPerAddress = 500000 * DECIMALS_MULTIPLIER; // Maximum allocation per address\n    uint256 public lastEmergencyWithdraw; // Last emergency withdrawal timestamp\n    uint256 public emergencyWithdrawCooldown = 1 weeks; // Cooldown period for emergency withdrawals\n\n    // Claim approval fee in WEI\n    uint256 public claimApprovalFee;\n\n    // Events for auditing\n    event ClaimMade(address indexed beneficiary, uint256 amount);\n    event ClaimableBatchAdded(address[] accounts, uint256[] amounts);\n    event EmergencyWithdraw(address indexed owner, uint256 amount);\n    event UnallocatedTokensWithdrawn(address indexed owner, uint256 amount);\n    event ClaimEnabled(bool enabled);\n    event TokensAllocated(address indexed account, uint256 amount, uint256 totalAllocated);\n    event NewAddressRegistered(address indexed account);\n    event ClaimBlockedForAddress(address indexed account, bool isBlocked);\n    event TokenDeposited(address indexed owner, uint256 amount);\n    event ClaimApproved(address indexed account);\n    event ClaimApprovalFeeUpdated(uint256 newFee);\n\n    /**\n     * @dev Constructor: sets the token to be used and configures the owner.\n     *\n     * @param _token Address of the ERC20/BEP20 token contract.\n     */\n    constructor(IERC20 _token) Ownable(msg.sender) {\n        require(address(_token) != address(0), \"Invalid token\");\n        token = _token;\n        claimEnabled = false;\n    }\n\n    /**\n     * @notice Allows the owner to set the claim approval fee.\n     * @param _fee Fee amount in WEI.\n     */\n    function setClaimApprovalFee(uint256 _fee) external onlyOwner {\n        claimApprovalFee = _fee;\n        emit ClaimApprovalFeeUpdated(_fee);\n    }\n\n    /**\n     * @notice Allows a user to pay the approval fee and enable claim eligibility.\n     */\n    function approveClaim() external payable {\n        require(msg.value == claimApprovalFee, \"Incorrect fee amount\");\n        approvedForClaim[msg.sender] = true;\n        emit ClaimApproved(msg.sender);\n    }\n\n    /**\n     * @notice Allows the owner to enable or disable the claim functionality globally.\n     */\n    function setClaimEnabled(bool _enabled) external onlyOwner {\n        claimEnabled = _enabled;\n        emit ClaimEnabled(_enabled);\n    }\n\n    /**\n     * @notice Allows the owner to block or unblock the claim functionality for a specific address.\n     * @param _account Address to be blocked/unblocked.\n     * @param _blocked Boolean indicating whether the claim is blocked (true) or unblocked (false).\n     */\n    function setClaimBlockedForAddress(address _account, bool _blocked) external onlyOwner {\n        claimBlocked[_account] = _blocked;\n        emit ClaimBlockedForAddress(_account, _blocked);\n    }\n\n    /**\n     * @notice Allows the owner to deposit tokens into the contract for distribution.\n     * @param _amount Amount of tokens to deposit.\n     */\n    function depositTokens(uint256 _amount) external onlyOwner {\n        require(_amount > 0, \"Deposit amount must be greater than zero\");\n        require(token.balanceOf(msg.sender) >= _amount, \"Insufficient balance\");\n\n        token.safeTransferFrom(msg.sender, address(this), _amount);\n\n        emit TokenDeposited(msg.sender, _amount);\n    }\n\n    /**\n     * @notice Adds (or sums) claimable balances for multiple addresses in a single batch operation.\n     *\n     * @param _accounts List of addresses eligible for claims.\n     * @param _amounts Corresponding token amounts (without decimals) each address can claim.\n     */\n    function addClaimableBatch(\n        address[] calldata _accounts,\n        uint256[] calldata _amounts\n    ) external onlyOwner {\n        require(\n            _accounts.length == _amounts.length,\n            \"Array lengths do not match\"\n        );\n\n        uint256 newTotalToAllocate = 0;\n\n        for (uint256 i = 0; i < _accounts.length; i++) {\n            address account = _accounts[i];\n            uint256 amount = _amounts[i] * DECIMALS_MULTIPLIER;\n\n            require(account.code.length == 0, \"Cannot be a contract\");\n            require(\n                claimableBalances[account] + amount <= maxAllocationPerAddress,\n                \"Allocation exceeds allowed limit\"\n            );\n\n            if (!_isRegistered[account]) {\n                _isRegistered[account] = true;\n                totalRegisteredAddresses++;\n                emit NewAddressRegistered(account);\n            }\n\n            claimableBalances[account] += amount;\n            newTotalToAllocate += amount;\n\n            emit TokensAllocated(account, amount, claimableBalances[account]);\n        }\n\n        require(\n            contractTokenBalance() >= totalAllocated + newTotalToAllocate,\n            \"Insufficient contract balance for allocation\"\n        );\n\n        totalAllocated += newTotalToAllocate;\n\n        emit ClaimableBatchAdded(_accounts, _amounts);\n    }\n\n    /**\n     * @notice Allows a user to claim their allocated tokens. The claim can be made only once.\n     */\n    function claim() external nonReentrant {\n        require(claimEnabled, \"Claim not enabled\");\n        require(!claimBlocked[msg.sender], \"Claim blocked for this address\");\n        require(approvedForClaim[msg.sender], \"Approval fee not paid\");\n        uint256 amount = claimableBalances[msg.sender];\n        require(amount > 0, \"You have no balance to claim\");\n\n        emit ClaimMade(msg.sender, amount);\n\n        claimableBalances[msg.sender] = 0;\n        totalAllocated -= amount;\n        totalAddressesClaimed++;\n        claimedBalances[msg.sender] += amount;\n\n        approvedForClaim[msg.sender] = false; // Reset approval after claim\n\n        token.safeTransfer(msg.sender, amount);\n    }\n\n    /**\n     * @notice Allows the owner to withdraw all collected approval fees.\n     */\n    function withdrawApprovalFees() external onlyOwner {\n        uint256 contractBalance = address(this).balance;\n        require(contractBalance > 0, \"No fees to withdraw\");\n        payable(owner()).transfer(contractBalance);\n    }\n\n    /**\n     * @notice Returns the total token balance of the contract.\n     */\n    function contractTokenBalance() public view returns (uint256) {\n        return token.balanceOf(address(this));\n    }\n\n    /**\n    * @notice Retrieves the total tokens that are unallocated in the contract.\n    */\n    function getUnallocatedTokens() public view returns (uint256) {\n        uint256 contractBalance = contractTokenBalance();\n        return contractBalance > totalAllocated ? contractBalance - totalAllocated : 0;\n    }\n\n    /**\n     * @notice Allows the owner to withdraw all tokens in case of an emergency.\n     */\n    function emergencyWithdraw() external onlyOwner nonReentrant {\n        uint256 contractBalance = token.balanceOf(address(this));\n        require(contractBalance > 0, \"Contract has no balance\");\n        require(\n            block.timestamp >= lastEmergencyWithdraw + emergencyWithdrawCooldown,\n            \"Cooldown in progress\"\n        );\n\n        lastEmergencyWithdraw = block.timestamp;\n        token.safeTransfer(owner(), contractBalance);\n\n        emit EmergencyWithdraw(owner(), contractBalance);\n    }\n\n    /**\n    * @notice Allows the owner to withdraw only the unallocated tokens, respecting a cooldown.\n    */\n    function withdrawUnallocatedTokens() external onlyOwner nonReentrant {\n        uint256 unallocatedTokens = getUnallocatedTokens();\n        require(unallocatedTokens > 0, \"No unallocated tokens to withdraw\");\n        require(\n            block.timestamp >= lastEmergencyWithdraw + emergencyWithdrawCooldown,\n            \"Cooldown in progress\"\n        );\n\n        lastEmergencyWithdraw = block.timestamp;\n        token.safeTransfer(owner(), unallocatedTokens);\n\n        emit UnallocatedTokensWithdrawn(owner(), unallocatedTokens);\n    }\n\n    // ==================== Frontend View Functions ====================\n\n    /**\n     * @notice Retrieves the specific claimable balance for a given address.\n     * @param _account Address to query.\n     */\n    function getClaimableBalance(address _account) external view returns (uint256) {\n        return claimableBalances[_account];\n    }\n\n    /**\n     * @notice Retrieves the total tokens already claimed by a given address.\n     * @param _account Address to query.\n     */\n    function getTotalClaimed(address _account) external view returns (uint256) {\n        return claimedBalances[_account];\n    }\n\n    /**\n     * @notice Checks whether a wallet can currently claim tokens.\n     * @param _account Address to query.\n     */\n    function canClaim(address _account) external view returns (bool) {\n        return (claimEnabled && !claimBlocked[_account] && approvedForClaim[_account] && claimableBalances[_account] > 0);\n    }\n\n    /**\n     * @notice Retrieves statistics for the frontend interface.\n     */\n    function getStats()\n        external\n        view\n        returns (\n            uint256 _totalRegistered,\n            uint256 _totalClaimed,\n            uint256 _totalContractBalance,\n            uint256 _totalAllocated,\n            bool _claimEnabled\n        )\n    {\n        _totalRegistered = totalRegisteredAddresses;\n        _totalClaimed = totalAddressesClaimed;\n        _totalContractBalance = contractTokenBalance();\n        _totalAllocated = totalAllocated;\n        _claimEnabled = claimEnabled;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fac8b281865aa77cf83fc87ffdd1bc406f0dc780f3e734971e9d49d14e3b95264736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201fac8b281865aa77cf83fc87ffdd1bc406f0dc780f3e734971e9d49d14e3b95264736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xAC DUP12 0x28 XOR PUSH6 0xAA77CF83FC87 SELFDESTRUCT 0xDD SHL 0xC4 MOD CREATE 0xDC PUSH25 0xF3E734971E9D49D14E3B95264736F6C634300081400330000 ",
							"sourceMap": "750:8692:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201fac8b281865aa77cf83fc87ffdd1bc406f0dc780f3e734971e9d49d14e3b95264736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xAC DUP12 0x28 XOR PUSH6 0xAA77CF83FC87 SELFDESTRUCT 0xDD SHL 0xC4 MOD CREATE 0xDC PUSH25 0xF3E734971E9D49D14E3B95264736F6C634300081400330000 ",
							"sourceMap": "750:8692:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fac8b281865aa77cf83fc87ffdd1bc406f0dc780f3e734971e9d49d14e3b95264736f6c63430008140033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"FvckClaim.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122026841d123ad91d1ddc995ae1b31ac352685642222577f68b731e71452020d6c164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026841d123ad91d1ddc995ae1b31ac352685642222577f68b731e71452020d6c164736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 DUP5 SAR SLT GASPRICE 0xD9 SAR SAR 0xDC SWAP10 GAS 0xE1 0xB3 BYTE 0xC3 MSTORE PUSH9 0x5642222577F68B731E PUSH18 0x452020D6C164736F6C634300081400330000 ",
							"sourceMap": "233:5799:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026841d123ad91d1ddc995ae1b31ac352685642222577f68b731e71452020d6c164736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 DUP5 SAR SLT GASPRICE 0xD9 SAR SAR 0xDC SWAP10 GAS 0xE1 0xB3 BYTE 0xC3 MSTORE PUSH9 0x5642222577F68B731E PUSH18 0x452020D6C164736F6C634300081400330000 ",
							"sourceMap": "233:5799:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026841d123ad91d1ddc995ae1b31ac352685642222577f68b731e71452020d6c164736f6c63430008140033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"FvckClaim.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bbbf57051b0d559b4c8a0b45e215f039d3cab84e7c3a12741c07bc2c61f35b6b64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bbbf57051b0d559b4c8a0b45e215f039d3cab84e7c3a12741c07bc2c61f35b6b64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xBF JUMPI SDIV SHL 0xD SSTORE SWAP12 0x4C DUP11 SIGNEXTEND GASLIMIT 0xE2 ISZERO CREATE CODECOPY 0xD3 0xCA 0xB8 0x4E PUSH29 0x3A12741C07BC2C61F35B6B64736F6C6343000814003300000000000000 ",
							"sourceMap": "411:484:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bbbf57051b0d559b4c8a0b45e215f039d3cab84e7c3a12741c07bc2c61f35b6b64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xBF JUMPI SDIV SHL 0xD SSTORE SWAP12 0x4C DUP11 SIGNEXTEND GASLIMIT 0xE2 ISZERO CREATE CODECOPY 0xD3 0xCA 0xB8 0x4E PUSH29 0x3A12741C07BC2C61F35B6B64736F6C6343000814003300000000000000 ",
							"sourceMap": "411:484:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bbbf57051b0d559b4c8a0b45e215f039d3cab84e7c3a12741c07bc2c61f35b6b64736f6c63430008140033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"FvckClaim.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"FvckClaim.sol": {
				"FvckClaim": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newFee",
									"type": "uint256"
								}
							],
							"name": "ClaimApprovalFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "ClaimApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isBlocked",
									"type": "bool"
								}
							],
							"name": "ClaimBlockedForAddress",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								}
							],
							"name": "ClaimEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ClaimMade",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "ClaimableBatchAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "NewAddressRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokenDeposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalAllocated",
									"type": "uint256"
								}
							],
							"name": "TokensAllocated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "UnallocatedTokensWithdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "addClaimableBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "approveClaim",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "approvedForClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "canClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimApprovalFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimBlocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractTokenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "depositTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdrawCooldown",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getClaimableBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStats",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_totalRegistered",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_totalClaimed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_totalContractBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_totalAllocated",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_claimEnabled",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getTotalClaimed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getUnallocatedTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastEmergencyWithdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxAllocationPerAddress",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"name": "setClaimApprovalFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_blocked",
									"type": "bool"
								}
							],
							"name": "setClaimBlockedForAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_enabled",
									"type": "bool"
								}
							],
							"name": "setClaimEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAddressesClaimed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocated",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRegisteredAddresses",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawApprovalFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawUnallocatedTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"addClaimableBatch(address[],uint256[])": {
								"params": {
									"_accounts": "List of addresses eligible for claims.",
									"_amounts": "Corresponding token amounts (without decimals) each address can claim."
								}
							},
							"canClaim(address)": {
								"params": {
									"_account": "Address to query."
								}
							},
							"constructor": {
								"details": "Constructor: sets the token to be used and configures the owner.",
								"params": {
									"_token": "Address of the ERC20/BEP20 token contract."
								}
							},
							"depositTokens(uint256)": {
								"params": {
									"_amount": "Amount of tokens to deposit."
								}
							},
							"getClaimableBalance(address)": {
								"params": {
									"_account": "Address to query."
								}
							},
							"getTotalClaimed(address)": {
								"params": {
									"_account": "Address to query."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setClaimApprovalFee(uint256)": {
								"params": {
									"_fee": "Fee amount in WEI."
								}
							},
							"setClaimBlockedForAddress(address,bool)": {
								"params": {
									"_account": "Address to be blocked/unblocked.",
									"_blocked": "Boolean indicating whether the claim is blocked (true) or unblocked (false)."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "FVCKCLAIM",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"FvckClaim.sol\":1830:12270  contract FvckClaim is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"FvckClaim.sol\":2917:2925  10 ** 18 */\n  0x0de0b6b3a7640000\n    /* \"FvckClaim.sol\":3002:3008  500000 */\n  0x07a120\n    /* \"FvckClaim.sol\":3002:3030  500000 * DECIMALS_MULTIPLIER */\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"FvckClaim.sol\":2961:3030  uint256 public maxAllocationPerAddress = 500000 * DECIMALS_MULTIPLIER */\n  0x0b\n  sstore\n    /* \"FvckClaim.sol\":3194:3201  1 weeks */\n  0x093a80\n    /* \"FvckClaim.sol\":3151:3201  uint256 public emergencyWithdrawCooldown = 1 weeks */\n  0x0d\n  sstore\n    /* \"FvckClaim.sol\":4225:4398  constructor(IERC20 _token) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"FvckClaim.sol\":4260:4270  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"FvckClaim.sol\":4317:4318  0 */\n  0x00\n    /* \"FvckClaim.sol\":4290:4319  address(_token) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"FvckClaim.sol\":4298:4304  _token */\n  dup2\n    /* \"FvckClaim.sol\":4290:4319  address(_token) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"FvckClaim.sol\":4282:4337  require(address(_token) != address(0), \"Invalid token\") */\n  tag_17\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_17:\n    /* \"FvckClaim.sol\":4355:4361  _token */\n  dup1\n    /* \"FvckClaim.sol\":4347:4361  token = _token */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"FvckClaim.sol\":4386:4391  false */\n  0x00\n    /* \"FvckClaim.sol\":4371:4383  claimEnabled */\n  0x02\n  0x00\n    /* \"FvckClaim.sol\":4371:4391  claimEnabled = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"FvckClaim.sol\":4225:4398  constructor(IERC20 _token) Ownable(msg.sender) {... */\n  pop\n    /* \"FvckClaim.sol\":1830:12270  contract FvckClaim is Ownable, ReentrancyGuard {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:84   */\ntag_22:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":73:78   */\n  dup2\n    /* \"#utility.yul\":62:78   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:84   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":90:270   */\ntag_23:\n    /* \"#utility.yul\":138:215   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":135:136   */\n  0x00\n    /* \"#utility.yul\":128:216   */\n  mstore\n    /* \"#utility.yul\":235:239   */\n  0x11\n    /* \"#utility.yul\":232:233   */\n  0x04\n    /* \"#utility.yul\":225:240   */\n  mstore\n    /* \"#utility.yul\":259:263   */\n  0x24\n    /* \"#utility.yul\":256:257   */\n  0x00\n    /* \"#utility.yul\":249:264   */\n  revert\n    /* \"#utility.yul\":276:686   */\ntag_2:\n    /* \"#utility.yul\":316:323   */\n  0x00\n    /* \"#utility.yul\":339:359   */\n  tag_40\n    /* \"#utility.yul\":357:358   */\n  dup3\n    /* \"#utility.yul\":339:359   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":334:359   */\n  swap2\n  pop\n    /* \"#utility.yul\":373:393   */\n  tag_41\n    /* \"#utility.yul\":391:392   */\n  dup4\n    /* \"#utility.yul\":373:393   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":368:393   */\n  swap3\n  pop\n    /* \"#utility.yul\":428:429   */\n  dup3\n    /* \"#utility.yul\":425:426   */\n  dup3\n    /* \"#utility.yul\":421:430   */\n  mul\n    /* \"#utility.yul\":450:480   */\n  tag_42\n    /* \"#utility.yul\":468:479   */\n  dup2\n    /* \"#utility.yul\":450:480   */\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":439:480   */\n  swap2\n  pop\n    /* \"#utility.yul\":629:630   */\n  dup3\n    /* \"#utility.yul\":620:627   */\n  dup3\n    /* \"#utility.yul\":616:631   */\n  div\n    /* \"#utility.yul\":613:614   */\n  dup5\n    /* \"#utility.yul\":610:632   */\n  eq\n    /* \"#utility.yul\":590:591   */\n  dup4\n    /* \"#utility.yul\":583:592   */\n  iszero\n    /* \"#utility.yul\":563:646   */\n  or\n    /* \"#utility.yul\":540:679   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":659:677   */\n  tag_44\n  tag_23\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":540:679   */\ntag_43:\n    /* \"#utility.yul\":324:686   */\n  pop\n    /* \"#utility.yul\":276:686   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":773:890   */\ntag_25:\n    /* \"#utility.yul\":882:883   */\n  0x00\n    /* \"#utility.yul\":879:880   */\n  dup1\n    /* \"#utility.yul\":872:884   */\n  revert\n    /* \"#utility.yul\":1019:1145   */\ntag_27:\n    /* \"#utility.yul\":1056:1063   */\n  0x00\n    /* \"#utility.yul\":1096:1138   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1089:1094   */\n  dup3\n    /* \"#utility.yul\":1085:1139   */\n  and\n    /* \"#utility.yul\":1074:1139   */\n  swap1\n  pop\n    /* \"#utility.yul\":1019:1145   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1151:1247   */\ntag_28:\n    /* \"#utility.yul\":1188:1195   */\n  0x00\n    /* \"#utility.yul\":1217:1241   */\n  tag_50\n    /* \"#utility.yul\":1235:1240   */\n  dup3\n    /* \"#utility.yul\":1217:1241   */\n  tag_27\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1206:1241   */\n  swap1\n  pop\n    /* \"#utility.yul\":1151:1247   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1253:1363   */\ntag_29:\n    /* \"#utility.yul\":1304:1311   */\n  0x00\n    /* \"#utility.yul\":1333:1357   */\n  tag_52\n    /* \"#utility.yul\":1351:1356   */\n  dup3\n    /* \"#utility.yul\":1333:1357   */\n  tag_28\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1322:1357   */\n  swap1\n  pop\n    /* \"#utility.yul\":1253:1363   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1369:1519   */\ntag_30:\n    /* \"#utility.yul\":1456:1494   */\n  tag_54\n    /* \"#utility.yul\":1488:1493   */\n  dup2\n    /* \"#utility.yul\":1456:1494   */\n  tag_29\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1449:1454   */\n  dup2\n    /* \"#utility.yul\":1446:1495   */\n  eq\n    /* \"#utility.yul\":1436:1513   */\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1509:1510   */\n  0x00\n    /* \"#utility.yul\":1506:1507   */\n  dup1\n    /* \"#utility.yul\":1499:1511   */\n  revert\n    /* \"#utility.yul\":1436:1513   */\ntag_55:\n    /* \"#utility.yul\":1369:1519   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1525:1696   */\ntag_31:\n    /* \"#utility.yul\":1596:1601   */\n  0x00\n    /* \"#utility.yul\":1627:1633   */\n  dup2\n    /* \"#utility.yul\":1621:1634   */\n  mload\n    /* \"#utility.yul\":1612:1634   */\n  swap1\n  pop\n    /* \"#utility.yul\":1643:1690   */\n  tag_57\n    /* \"#utility.yul\":1684:1689   */\n  dup2\n    /* \"#utility.yul\":1643:1690   */\n  tag_30\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1525:1696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1702:2081   */\ntag_5:\n    /* \"#utility.yul\":1786:1792   */\n  0x00\n    /* \"#utility.yul\":1835:1837   */\n  0x20\n    /* \"#utility.yul\":1823:1832   */\n  dup3\n    /* \"#utility.yul\":1814:1821   */\n  dup5\n    /* \"#utility.yul\":1810:1833   */\n  sub\n    /* \"#utility.yul\":1806:1838   */\n  slt\n    /* \"#utility.yul\":1803:1922   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1841:1920   */\n  tag_60\n  tag_25\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1803:1922   */\ntag_59:\n    /* \"#utility.yul\":1961:1962   */\n  0x00\n    /* \"#utility.yul\":1986:2064   */\n  tag_61\n    /* \"#utility.yul\":2056:2063   */\n  dup5\n    /* \"#utility.yul\":2047:2053   */\n  dup3\n    /* \"#utility.yul\":2036:2045   */\n  dup6\n    /* \"#utility.yul\":2032:2054   */\n  add\n    /* \"#utility.yul\":1986:2064   */\n  tag_31\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1976:2064   */\n  swap2\n  pop\n    /* \"#utility.yul\":1932:2074   */\n  pop\n    /* \"#utility.yul\":1702:2081   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2087:2205   */\ntag_32:\n    /* \"#utility.yul\":2174:2198   */\n  tag_63\n    /* \"#utility.yul\":2192:2197   */\n  dup2\n    /* \"#utility.yul\":2174:2198   */\n  tag_28\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2169:2172   */\n  dup3\n    /* \"#utility.yul\":2162:2199   */\n  mstore\n    /* \"#utility.yul\":2087:2205   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2211:2433   */\ntag_12:\n    /* \"#utility.yul\":2304:2308   */\n  0x00\n    /* \"#utility.yul\":2342:2344   */\n  0x20\n    /* \"#utility.yul\":2331:2340   */\n  dup3\n    /* \"#utility.yul\":2327:2345   */\n  add\n    /* \"#utility.yul\":2319:2345   */\n  swap1\n  pop\n    /* \"#utility.yul\":2355:2426   */\n  tag_65\n    /* \"#utility.yul\":2423:2424   */\n  0x00\n    /* \"#utility.yul\":2412:2421   */\n  dup4\n    /* \"#utility.yul\":2408:2425   */\n  add\n    /* \"#utility.yul\":2399:2405   */\n  dup5\n    /* \"#utility.yul\":2355:2426   */\n  tag_32\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2211:2433   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2439:2608   */\ntag_33:\n    /* \"#utility.yul\":2523:2534   */\n  0x00\n    /* \"#utility.yul\":2557:2563   */\n  dup3\n    /* \"#utility.yul\":2552:2555   */\n  dup3\n    /* \"#utility.yul\":2545:2564   */\n  mstore\n    /* \"#utility.yul\":2597:2601   */\n  0x20\n    /* \"#utility.yul\":2592:2595   */\n  dup3\n    /* \"#utility.yul\":2588:2602   */\n  add\n    /* \"#utility.yul\":2573:2602   */\n  swap1\n  pop\n    /* \"#utility.yul\":2439:2608   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2614:2777   */\ntag_34:\n    /* \"#utility.yul\":2754:2769   */\n  0x496e76616c696420746f6b656e00000000000000000000000000000000000000\n    /* \"#utility.yul\":2750:2751   */\n  0x00\n    /* \"#utility.yul\":2742:2748   */\n  dup3\n    /* \"#utility.yul\":2738:2752   */\n  add\n    /* \"#utility.yul\":2731:2770   */\n  mstore\n    /* \"#utility.yul\":2614:2777   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2783:3149   */\ntag_35:\n    /* \"#utility.yul\":2925:2928   */\n  0x00\n    /* \"#utility.yul\":2946:3013   */\n  tag_69\n    /* \"#utility.yul\":3010:3012   */\n  0x0d\n    /* \"#utility.yul\":3005:3008   */\n  dup4\n    /* \"#utility.yul\":2946:3013   */\n  tag_33\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2939:3013   */\n  swap2\n  pop\n    /* \"#utility.yul\":3022:3115   */\n  tag_70\n    /* \"#utility.yul\":3111:3114   */\n  dup3\n    /* \"#utility.yul\":3022:3115   */\n  tag_34\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3140:3142   */\n  0x20\n    /* \"#utility.yul\":3135:3138   */\n  dup3\n    /* \"#utility.yul\":3131:3143   */\n  add\n    /* \"#utility.yul\":3124:3143   */\n  swap1\n  pop\n    /* \"#utility.yul\":2783:3149   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3155:3574   */\ntag_19:\n    /* \"#utility.yul\":3321:3325   */\n  0x00\n    /* \"#utility.yul\":3359:3361   */\n  0x20\n    /* \"#utility.yul\":3348:3357   */\n  dup3\n    /* \"#utility.yul\":3344:3362   */\n  add\n    /* \"#utility.yul\":3336:3362   */\n  swap1\n  pop\n    /* \"#utility.yul\":3408:3417   */\n  dup2\n    /* \"#utility.yul\":3402:3406   */\n  dup2\n    /* \"#utility.yul\":3398:3418   */\n  sub\n    /* \"#utility.yul\":3394:3395   */\n  0x00\n    /* \"#utility.yul\":3383:3392   */\n  dup4\n    /* \"#utility.yul\":3379:3396   */\n  add\n    /* \"#utility.yul\":3372:3419   */\n  mstore\n    /* \"#utility.yul\":3436:3567   */\n  tag_72\n    /* \"#utility.yul\":3562:3566   */\n  dup2\n    /* \"#utility.yul\":3436:3567   */\n  tag_35\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3428:3567   */\n  swap1\n  pop\n    /* \"#utility.yul\":3155:3574   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"FvckClaim.sol\":1830:12270  contract FvckClaim is Ownable, ReentrancyGuard {... */\ntag_20:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x755086c717cb5d158287af515dd799b5ec7f30c3baee71f20accbab571e166d5\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"FvckClaim.sol\":1830:12270  contract FvckClaim is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8f060da9\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xd7bebac0\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe1413163\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xe1413163\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe1ffba62\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_31\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0xd7bebac0\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xdb2e21bc\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdc7f9e34\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdd49756e\n      eq\n      tag_27\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x9e9aed62\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x9e9aed62\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa0470cb4\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xbf3506c1\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc59d4847\n      eq\n      tag_23\n      jumpi\n      jump(tag_1)\n    tag_35:\n      dup1\n      0x8f060da9\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x92929a09\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x94192b9f\n      eq\n      tag_19\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x4243fc4e\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x6104f4b5\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x6104f4b5\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x86e755c6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_37:\n      dup1\n      0x4243fc4e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x45f7f249\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x522bf1d4\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_36:\n      dup1\n      0x26155e53\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x26155e53\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x28607bc6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2866ed21\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2bb2ed39\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_38:\n      dup1\n      0x06def802\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1f322564\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2019ddf8\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"FvckClaim.sol\":10953:11083  function getClaimableBalance(address _account) external view returns (uint256) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FvckClaim.sol\":3286:3317  uint256 public claimApprovalFee */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FvckClaim.sol\":5500:5694  function setClaimBlockedForAddress(address _account, bool _blocked) external onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"FvckClaim.sol\":3070:3106  uint256 public lastEmergencyWithdraw */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FvckClaim.sol\":3151:3201  uint256 public emergencyWithdrawCooldown = 1 weeks */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FvckClaim.sol\":2066:2090  bool public claimEnabled */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FvckClaim.sol\":2622:2658  uint256 public totalAddressesClaimed */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FvckClaim.sol\":9265:9480  function getUnallocatedTokens() public view returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FvckClaim.sol\":2696:2725  uint256 public totalAllocated */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FvckClaim.sol\":7946:8640  function claim() external nonReentrant {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      stop\n        /* \"FvckClaim.sol\":11224:11348  function getTotalClaimed(address _account) external view returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FvckClaim.sol\":2547:2586  uint256 public totalRegisteredAddresses */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      stop\n        /* \"FvckClaim.sol\":2961:3030  uint256 public maxAllocationPerAddress = 500000 * DECIMALS_MULTIPLIER */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FvckClaim.sol\":2354:2398  mapping(address => bool) public claimBlocked */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FvckClaim.sol\":5086:5222  function setClaimEnabled(bool _enabled) external onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      tag_113\n      jump\t// in\n    tag_110:\n      stop\n        /* \"FvckClaim.sol\":2457:2505  mapping(address => bool) public approvedForClaim */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FvckClaim.sol\":9049:9165  function contractTokenBalance() public view returns (uint256) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FvckClaim.sol\":4772:4977  function approveClaim() external payable {... */\n    tag_21:\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      stop\n        /* \"FvckClaim.sol\":11478:11673  function canClaim(address _account) external view returns (bool) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FvckClaim.sol\":11759:12268  function getStats()... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_133\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FvckClaim.sol\":6481:7829  function addClaimableBatch(... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      tag_139\n      jump\t// in\n    tag_136:\n      stop\n        /* \"FvckClaim.sol\":9582:10089  function emergencyWithdraw() external onlyOwner nonReentrant {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      stop\n        /* \"FvckClaim.sol\":10205:10739  function withdrawUnallocatedTokens() external onlyOwner nonReentrant {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_144\n      tag_145\n      jump\t// in\n    tag_144:\n      stop\n        /* \"FvckClaim.sol\":5853:6194  function depositTokens(uint256 _amount) external onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      tag_147\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      tag_150\n      jump\t// in\n    tag_147:\n      stop\n        /* \"FvckClaim.sol\":8735:8963  function withdrawApprovalFees() external onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n      stop\n        /* \"FvckClaim.sol\":4521:4667  function setClaimApprovalFee(uint256 _fee) external onlyOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n    tag_155:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      tag_159\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_160\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_160:\n      tag_161\n      jump\t// in\n    tag_159:\n      stop\n        /* \"FvckClaim.sol\":1975:2004  IERC20 public immutable token */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      tag_163\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      tag_165\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FvckClaim.sol\":10953:11083  function getClaimableBalance(address _account) external view returns (uint256) {... */\n    tag_43:\n        /* \"FvckClaim.sol\":11023:11030  uint256 */\n      0x00\n        /* \"FvckClaim.sol\":11049:11066  claimableBalances */\n      0x03\n        /* \"FvckClaim.sol\":11049:11076  claimableBalances[_account] */\n      0x00\n        /* \"FvckClaim.sol\":11067:11075  _account */\n      dup4\n        /* \"FvckClaim.sol\":11049:11076  claimableBalances[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"FvckClaim.sol\":11042:11076  return claimableBalances[_account] */\n      swap1\n      pop\n        /* \"FvckClaim.sol\":10953:11083  function getClaimableBalance(address _account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"FvckClaim.sol\":3286:3317  uint256 public claimApprovalFee */\n    tag_48:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"FvckClaim.sol\":5500:5694  function setClaimBlockedForAddress(address _account, bool _blocked) external onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_169:\n        /* \"FvckClaim.sol\":5622:5630  _blocked */\n      dup1\n        /* \"FvckClaim.sol\":5597:5609  claimBlocked */\n      0x05\n        /* \"FvckClaim.sol\":5597:5619  claimBlocked[_account] */\n      0x00\n        /* \"FvckClaim.sol\":5610:5618  _account */\n      dup5\n        /* \"FvckClaim.sol\":5597:5619  claimBlocked[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"FvckClaim.sol\":5597:5630  claimBlocked[_account] = _blocked */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"FvckClaim.sol\":5668:5676  _account */\n      dup2\n        /* \"FvckClaim.sol\":5645:5687  ClaimBlockedForAddress(_account, _blocked) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x129e15046dd77be10c4cdac8841646b9f3b6d22a00544b93362e9b84c05e6960\n        /* \"FvckClaim.sol\":5678:5686  _blocked */\n      dup3\n        /* \"FvckClaim.sol\":5645:5687  ClaimBlockedForAddress(_account, _blocked) */\n      mload(0x40)\n      tag_172\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"FvckClaim.sol\":5500:5694  function setClaimBlockedForAddress(address _account, bool _blocked) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"FvckClaim.sol\":3070:3106  uint256 public lastEmergencyWithdraw */\n    tag_57:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"FvckClaim.sol\":3151:3201  uint256 public emergencyWithdrawCooldown = 1 weeks */\n    tag_61:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"FvckClaim.sol\":2066:2090  bool public claimEnabled */\n    tag_65:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"FvckClaim.sol\":2622:2658  uint256 public totalAddressesClaimed */\n    tag_70:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"FvckClaim.sol\":9265:9480  function getUnallocatedTokens() public view returns (uint256) {... */\n    tag_74:\n        /* \"FvckClaim.sol\":9318:9325  uint256 */\n      0x00\n        /* \"FvckClaim.sol\":9337:9360  uint256 contractBalance */\n      dup1\n        /* \"FvckClaim.sol\":9363:9385  contractTokenBalance() */\n      tag_174\n        /* \"FvckClaim.sol\":9363:9383  contractTokenBalance */\n      tag_121\n        /* \"FvckClaim.sol\":9363:9385  contractTokenBalance() */\n      jump\t// in\n    tag_174:\n        /* \"FvckClaim.sol\":9337:9385  uint256 contractBalance = contractTokenBalance() */\n      swap1\n      pop\n        /* \"FvckClaim.sol\":9420:9434  totalAllocated */\n      sload(0x09)\n        /* \"FvckClaim.sol\":9402:9417  contractBalance */\n      dup2\n        /* \"FvckClaim.sol\":9402:9434  contractBalance > totalAllocated */\n      gt\n        /* \"FvckClaim.sol\":9402:9473  contractBalance > totalAllocated ? contractBalance - totalAllocated : 0 */\n      tag_175\n      jumpi\n        /* \"FvckClaim.sol\":9472:9473  0 */\n      0x00\n        /* \"FvckClaim.sol\":9402:9473  contractBalance > totalAllocated ? contractBalance - totalAllocated : 0 */\n      jump(tag_176)\n    tag_175:\n        /* \"FvckClaim.sol\":9455:9469  totalAllocated */\n      sload(0x09)\n        /* \"FvckClaim.sol\":9437:9452  contractBalance */\n      dup2\n        /* \"FvckClaim.sol\":9437:9469  contractBalance - totalAllocated */\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"FvckClaim.sol\":9402:9473  contractBalance > totalAllocated ? contractBalance - totalAllocated : 0 */\n    tag_176:\n        /* \"FvckClaim.sol\":9395:9473  return contractBalance > totalAllocated ? contractBalance - totalAllocated : 0 */\n      swap2\n      pop\n      pop\n        /* \"FvckClaim.sol\":9265:9480  function getUnallocatedTokens() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"FvckClaim.sol\":2696:2725  uint256 public totalAllocated */\n    tag_78:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"FvckClaim.sol\":7946:8640  function claim() external nonReentrant {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_180\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_181\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_180:\n        /* \"FvckClaim.sol\":8003:8015  claimEnabled */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"FvckClaim.sol\":7995:8037  require(claimEnabled, \"Claim not enabled\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"FvckClaim.sol\":8056:8068  claimBlocked */\n      0x05\n        /* \"FvckClaim.sol\":8056:8080  claimBlocked[msg.sender] */\n      0x00\n        /* \"FvckClaim.sol\":8069:8079  msg.sender */\n      caller\n        /* \"FvckClaim.sol\":8056:8080  claimBlocked[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"FvckClaim.sol\":8055:8080  !claimBlocked[msg.sender] */\n      iszero\n        /* \"FvckClaim.sol\":8047:8115  require(!claimBlocked[msg.sender], \"Claim blocked for this address\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"FvckClaim.sol\":8133:8149  approvedForClaim */\n      0x06\n        /* \"FvckClaim.sol\":8133:8161  approvedForClaim[msg.sender] */\n      0x00\n        /* \"FvckClaim.sol\":8150:8160  msg.sender */\n      caller\n        /* \"FvckClaim.sol\":8133:8161  approvedForClaim[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"FvckClaim.sol\":8125:8187  require(approvedForClaim[msg.sender], \"Approval fee not paid\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"FvckClaim.sol\":8197:8211  uint256 amount */\n      0x00\n        /* \"FvckClaim.sol\":8214:8231  claimableBalances */\n      0x03\n        /* \"FvckClaim.sol\":8214:8243  claimableBalances[msg.sender] */\n      0x00\n        /* \"FvckClaim.sol\":8232:8242  msg.sender */\n      caller\n        /* \"FvckClaim.sol\":8214:8243  claimableBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"FvckClaim.sol\":8197:8243  uint256 amount = claimableBalances[msg.sender] */\n      swap1\n      pop\n        /* \"FvckClaim.sol\":8270:8271  0 */\n      0x00\n        /* \"FvckClaim.sol\":8261:8267  amount */\n      dup2\n        /* \"FvckClaim.sol\":8261:8271  amount > 0 */\n      gt\n        /* \"FvckClaim.sol\":8253:8304  require(amount > 0, \"You have no balance to claim\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"FvckClaim.sol\":8330:8340  msg.sender */\n      caller\n        /* \"FvckClaim.sol\":8320:8349  ClaimMade(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e09de4b8e45666deb3ec2bc8225f07988e54ef533eec97cb0b4610127183d79\n        /* \"FvckClaim.sol\":8342:8348  amount */\n      dup3\n        /* \"FvckClaim.sol\":8320:8349  ClaimMade(msg.sender, amount) */\n      mload(0x40)\n      tag_195\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"FvckClaim.sol\":8392:8393  0 */\n      0x00\n        /* \"FvckClaim.sol\":8360:8377  claimableBalances */\n      0x03\n        /* \"FvckClaim.sol\":8360:8389  claimableBalances[msg.sender] */\n      0x00\n        /* \"FvckClaim.sol\":8378:8388  msg.sender */\n      caller\n        /* \"FvckClaim.sol\":8360:8389  claimableBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"FvckClaim.sol\":8360:8393  claimableBalances[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"FvckClaim.sol\":8421:8427  amount */\n      dup1\n        /* \"FvckClaim.sol\":8403:8417  totalAllocated */\n      0x09\n      0x00\n        /* \"FvckClaim.sol\":8403:8427  totalAllocated -= amount */\n      dup3\n      dup3\n      sload\n      tag_196\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_196:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"FvckClaim.sol\":8437:8458  totalAddressesClaimed */\n      0x08\n      0x00\n        /* \"FvckClaim.sol\":8437:8460  totalAddressesClaimed++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_197\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"FvckClaim.sol\":8501:8507  amount */\n      dup1\n        /* \"FvckClaim.sol\":8470:8485  claimedBalances */\n      0x04\n        /* \"FvckClaim.sol\":8470:8497  claimedBalances[msg.sender] */\n      0x00\n        /* \"FvckClaim.sol\":8486:8496  msg.sender */\n      caller\n        /* \"FvckClaim.sol\":8470:8497  claimedBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"FvckClaim.sol\":8470:8507  claimedBalances[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"FvckClaim.sol\":8549:8554  false */\n      0x00\n        /* \"FvckClaim.sol\":8518:8534  approvedForClaim */\n      0x06\n        /* \"FvckClaim.sol\":8518:8546  approvedForClaim[msg.sender] */\n      0x00\n        /* \"FvckClaim.sol\":8535:8545  msg.sender */\n      caller\n        /* \"FvckClaim.sol\":8518:8546  approvedForClaim[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"FvckClaim.sol\":8518:8554  approvedForClaim[msg.sender] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"FvckClaim.sol\":8595:8633  token.safeTransfer(msg.sender, amount) */\n      tag_201\n        /* \"FvckClaim.sol\":8614:8624  msg.sender */\n      caller\n        /* \"FvckClaim.sol\":8626:8632  amount */\n      dup3\n        /* \"FvckClaim.sol\":8595:8600  token */\n      immutable(\"0x755086c717cb5d158287af515dd799b5ec7f30c3baee71f20accbab571e166d5\")\n        /* \"FvckClaim.sol\":8595:8613  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_202\n      swap1\n        /* \"FvckClaim.sol\":8595:8633  token.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"FvckClaim.sol\":7985:8640  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_203\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_204\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_203:\n        /* \"FvckClaim.sol\":7946:8640  function claim() external nonReentrant {... */\n      jump\t// out\n        /* \"FvckClaim.sol\":11224:11348  function getTotalClaimed(address _account) external view returns (uint256) {... */\n    tag_86:\n        /* \"FvckClaim.sol\":11290:11297  uint256 */\n      0x00\n        /* \"FvckClaim.sol\":11316:11331  claimedBalances */\n      0x04\n        /* \"FvckClaim.sol\":11316:11341  claimedBalances[_account] */\n      0x00\n        /* \"FvckClaim.sol\":11332:11340  _account */\n      dup4\n        /* \"FvckClaim.sol\":11316:11341  claimedBalances[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"FvckClaim.sol\":11309:11341  return claimedBalances[_account] */\n      swap1\n      pop\n        /* \"FvckClaim.sol\":11224:11348  function getTotalClaimed(address _account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"FvckClaim.sol\":2547:2586  uint256 public totalRegisteredAddresses */\n    tag_90:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"FvckClaim.sol\":2961:3030  uint256 public maxAllocationPerAddress = 500000 * DECIMALS_MULTIPLIER */\n    tag_97:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"FvckClaim.sol\":2354:2398  mapping(address => bool) public claimBlocked */\n    tag_107:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"FvckClaim.sol\":5086:5222  function setClaimEnabled(bool _enabled) external onlyOwner {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_213:\n        /* \"FvckClaim.sol\":5170:5178  _enabled */\n      dup1\n        /* \"FvckClaim.sol\":5155:5167  claimEnabled */\n      0x02\n      0x00\n        /* \"FvckClaim.sol\":5155:5178  claimEnabled = _enabled */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"FvckClaim.sol\":5193:5215  ClaimEnabled(_enabled) */\n      0x1edd4dc7f91a5992aba0f39c0428bcf4df13d001eebc26eb188307d057f14a07\n        /* \"FvckClaim.sol\":5206:5214  _enabled */\n      dup2\n        /* \"FvckClaim.sol\":5193:5215  ClaimEnabled(_enabled) */\n      mload(0x40)\n      tag_215\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"FvckClaim.sol\":5086:5222  function setClaimEnabled(bool _enabled) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"FvckClaim.sol\":2457:2505  mapping(address => bool) public approvedForClaim */\n    tag_117:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"FvckClaim.sol\":9049:9165  function contractTokenBalance() public view returns (uint256) {... */\n    tag_121:\n        /* \"FvckClaim.sol\":9102:9109  uint256 */\n      0x00\n        /* \"FvckClaim.sol\":9128:9133  token */\n      immutable(\"0x755086c717cb5d158287af515dd799b5ec7f30c3baee71f20accbab571e166d5\")\n        /* \"FvckClaim.sol\":9128:9143  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"FvckClaim.sol\":9152:9156  this */\n      address\n        /* \"FvckClaim.sol\":9128:9158  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_217:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_219\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_219:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"FvckClaim.sol\":9121:9158  return token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"FvckClaim.sol\":9049:9165  function contractTokenBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"FvckClaim.sol\":4772:4977  function approveClaim() external payable {... */\n    tag_124:\n        /* \"FvckClaim.sol\":4844:4860  claimApprovalFee */\n      sload(0x0e)\n        /* \"FvckClaim.sol\":4831:4840  msg.value */\n      callvalue\n        /* \"FvckClaim.sol\":4831:4860  msg.value == claimApprovalFee */\n      eq\n        /* \"FvckClaim.sol\":4823:4885  require(msg.value == claimApprovalFee, \"Incorrect fee amount\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n        /* \"FvckClaim.sol\":4926:4930  true */\n      0x01\n        /* \"FvckClaim.sol\":4895:4911  approvedForClaim */\n      0x06\n        /* \"FvckClaim.sol\":4895:4923  approvedForClaim[msg.sender] */\n      0x00\n        /* \"FvckClaim.sol\":4912:4922  msg.sender */\n      caller\n        /* \"FvckClaim.sol\":4895:4923  approvedForClaim[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"FvckClaim.sol\":4895:4930  approvedForClaim[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"FvckClaim.sol\":4959:4969  msg.sender */\n      caller\n        /* \"FvckClaim.sol\":4945:4970  ClaimApproved(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb7fa0f30e1ede3196616147dfdf6c94e47523298677b4f7b0c61027a9f0ebf54\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"FvckClaim.sol\":4772:4977  function approveClaim() external payable {... */\n      jump\t// out\n        /* \"FvckClaim.sol\":11478:11673  function canClaim(address _account) external view returns (bool) {... */\n    tag_128:\n        /* \"FvckClaim.sol\":11537:11541  bool */\n      0x00\n        /* \"FvckClaim.sol\":11561:11573  claimEnabled */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"FvckClaim.sol\":11561:11600  claimEnabled && !claimBlocked[_account] */\n      dup1\n      iszero\n      tag_227\n      jumpi\n      pop\n        /* \"FvckClaim.sol\":11578:11590  claimBlocked */\n      0x05\n        /* \"FvckClaim.sol\":11578:11600  claimBlocked[_account] */\n      0x00\n        /* \"FvckClaim.sol\":11591:11599  _account */\n      dup4\n        /* \"FvckClaim.sol\":11578:11600  claimBlocked[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"FvckClaim.sol\":11577:11600  !claimBlocked[_account] */\n      iszero\n        /* \"FvckClaim.sol\":11561:11600  claimEnabled && !claimBlocked[_account] */\n    tag_227:\n        /* \"FvckClaim.sol\":11561:11630  claimEnabled && !claimBlocked[_account] && approvedForClaim[_account] */\n      dup1\n      iszero\n      tag_228\n      jumpi\n      pop\n        /* \"FvckClaim.sol\":11604:11620  approvedForClaim */\n      0x06\n        /* \"FvckClaim.sol\":11604:11630  approvedForClaim[_account] */\n      0x00\n        /* \"FvckClaim.sol\":11621:11629  _account */\n      dup4\n        /* \"FvckClaim.sol\":11604:11630  approvedForClaim[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"FvckClaim.sol\":11561:11630  claimEnabled && !claimBlocked[_account] && approvedForClaim[_account] */\n    tag_228:\n        /* \"FvckClaim.sol\":11561:11665  claimEnabled && !claimBlocked[_account] && approvedForClaim[_account] && claimableBalances[_account] > 0 */\n      dup1\n      iszero\n      tag_229\n      jumpi\n      pop\n        /* \"FvckClaim.sol\":11664:11665  0 */\n      0x00\n        /* \"FvckClaim.sol\":11634:11651  claimableBalances */\n      0x03\n        /* \"FvckClaim.sol\":11634:11661  claimableBalances[_account] */\n      0x00\n        /* \"FvckClaim.sol\":11652:11660  _account */\n      dup5\n        /* \"FvckClaim.sol\":11634:11661  claimableBalances[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"FvckClaim.sol\":11634:11665  claimableBalances[_account] > 0 */\n      gt\n        /* \"FvckClaim.sol\":11561:11665  claimEnabled && !claimBlocked[_account] && approvedForClaim[_account] && claimableBalances[_account] > 0 */\n    tag_229:\n        /* \"FvckClaim.sol\":11553:11666  return (claimEnabled && !claimBlocked[_account] && approvedForClaim[_account] && claimableBalances[_account] > 0) */\n      swap1\n      pop\n        /* \"FvckClaim.sol\":11478:11673  function canClaim(address _account) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"FvckClaim.sol\":11759:12268  function getStats()... */\n    tag_132:\n        /* \"FvckClaim.sol\":11839:11863  uint256 _totalRegistered */\n      0x00\n        /* \"FvckClaim.sol\":11877:11898  uint256 _totalClaimed */\n      dup1\n        /* \"FvckClaim.sol\":11912:11941  uint256 _totalContractBalance */\n      0x00\n        /* \"FvckClaim.sol\":11955:11978  uint256 _totalAllocated */\n      dup1\n        /* \"FvckClaim.sol\":11992:12010  bool _claimEnabled */\n      0x00\n        /* \"FvckClaim.sol\":12054:12078  totalRegisteredAddresses */\n      sload(0x07)\n        /* \"FvckClaim.sol\":12035:12078  _totalRegistered = totalRegisteredAddresses */\n      swap5\n      pop\n        /* \"FvckClaim.sol\":12104:12125  totalAddressesClaimed */\n      sload(0x08)\n        /* \"FvckClaim.sol\":12088:12125  _totalClaimed = totalAddressesClaimed */\n      swap4\n      pop\n        /* \"FvckClaim.sol\":12159:12181  contractTokenBalance() */\n      tag_231\n        /* \"FvckClaim.sol\":12159:12179  contractTokenBalance */\n      tag_121\n        /* \"FvckClaim.sol\":12159:12181  contractTokenBalance() */\n      jump\t// in\n    tag_231:\n        /* \"FvckClaim.sol\":12135:12181  _totalContractBalance = contractTokenBalance() */\n      swap3\n      pop\n        /* \"FvckClaim.sol\":12209:12223  totalAllocated */\n      sload(0x09)\n        /* \"FvckClaim.sol\":12191:12223  _totalAllocated = totalAllocated */\n      swap2\n      pop\n        /* \"FvckClaim.sol\":12249:12261  claimEnabled */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"FvckClaim.sol\":12233:12261  _claimEnabled = claimEnabled */\n      swap1\n      pop\n        /* \"FvckClaim.sol\":11759:12268  function getStats()... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      jump\t// out\n        /* \"FvckClaim.sol\":6481:7829  function addClaimableBatch(... */\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_233:\n        /* \"FvckClaim.sol\":6659:6667  _amounts */\n      dup2\n      dup2\n        /* \"FvckClaim.sol\":6659:6674  _amounts.length */\n      swap1\n      pop\n        /* \"FvckClaim.sol\":6639:6648  _accounts */\n      dup5\n      dup5\n        /* \"FvckClaim.sol\":6639:6655  _accounts.length */\n      swap1\n      pop\n        /* \"FvckClaim.sol\":6639:6674  _accounts.length == _amounts.length */\n      eq\n        /* \"FvckClaim.sol\":6618:6726  require(... */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"FvckClaim.sol\":6737:6763  uint256 newTotalToAllocate */\n      0x00\n        /* \"FvckClaim.sol\":6783:6792  uint256 i */\n      dup1\n        /* \"FvckClaim.sol\":6778:7557  for (uint256 i = 0; i < _accounts.length; i++) {... */\n    tag_238:\n        /* \"FvckClaim.sol\":6802:6811  _accounts */\n      dup6\n      dup6\n        /* \"FvckClaim.sol\":6802:6818  _accounts.length */\n      swap1\n      pop\n        /* \"FvckClaim.sol\":6798:6799  i */\n      dup2\n        /* \"FvckClaim.sol\":6798:6818  i < _accounts.length */\n      lt\n        /* \"FvckClaim.sol\":6778:7557  for (uint256 i = 0; i < _accounts.length; i++) {... */\n      iszero\n      tag_239\n      jumpi\n        /* \"FvckClaim.sol\":6839:6854  address account */\n      0x00\n        /* \"FvckClaim.sol\":6857:6866  _accounts */\n      dup7\n      dup7\n        /* \"FvckClaim.sol\":6867:6868  i */\n      dup4\n        /* \"FvckClaim.sol\":6857:6869  _accounts[i] */\n      dup2\n      dup2\n      lt\n      tag_241\n      jumpi\n      tag_242\n      tag_243\n      jump\t// in\n    tag_242:\n    tag_241:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_244\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_244:\n        /* \"FvckClaim.sol\":6839:6869  address account = _accounts[i] */\n      swap1\n      pop\n        /* \"FvckClaim.sol\":6883:6897  uint256 amount */\n      0x00\n        /* \"FvckClaim.sol\":2917:2925  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"FvckClaim.sol\":6900:6908  _amounts */\n      dup7\n      dup7\n        /* \"FvckClaim.sol\":6909:6910  i */\n      dup6\n        /* \"FvckClaim.sol\":6900:6911  _amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_245\n      jumpi\n      tag_246\n      tag_243\n      jump\t// in\n    tag_246:\n    tag_245:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"FvckClaim.sol\":6900:6933  _amounts[i] * DECIMALS_MULTIPLIER */\n      tag_247\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"FvckClaim.sol\":6883:6933  uint256 amount = _amounts[i] * DECIMALS_MULTIPLIER */\n      swap1\n      pop\n        /* \"FvckClaim.sol\":6979:6980  0 */\n      0x00\n        /* \"FvckClaim.sol\":6956:6963  account */\n      dup3\n        /* \"FvckClaim.sol\":6956:6975  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"FvckClaim.sol\":6956:6980  account.code.length == 0 */\n      eq\n        /* \"FvckClaim.sol\":6948:7005  require(account.code.length == 0, \"Cannot be a contract\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_249:\n        /* \"FvckClaim.sol\":7083:7106  maxAllocationPerAddress */\n      sload(0x0b)\n        /* \"FvckClaim.sol\":7073:7079  amount */\n      dup2\n        /* \"FvckClaim.sol\":7044:7061  claimableBalances */\n      0x03\n        /* \"FvckClaim.sol\":7044:7070  claimableBalances[account] */\n      0x00\n        /* \"FvckClaim.sol\":7062:7069  account */\n      dup6\n        /* \"FvckClaim.sol\":7044:7070  claimableBalances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"FvckClaim.sol\":7044:7079  claimableBalances[account] + amount */\n      tag_252\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_252:\n        /* \"FvckClaim.sol\":7044:7106  claimableBalances[account] + amount <= maxAllocationPerAddress */\n      gt\n      iszero\n        /* \"FvckClaim.sol\":7019:7172  require(... */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"FvckClaim.sol\":7192:7205  _isRegistered */\n      0x0a\n        /* \"FvckClaim.sol\":7192:7214  _isRegistered[account] */\n      0x00\n        /* \"FvckClaim.sol\":7206:7213  account */\n      dup4\n        /* \"FvckClaim.sol\":7192:7214  _isRegistered[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"FvckClaim.sol\":7187:7374  if (!_isRegistered[account]) {... */\n      tag_256\n      jumpi\n        /* \"FvckClaim.sol\":7259:7263  true */\n      0x01\n        /* \"FvckClaim.sol\":7234:7247  _isRegistered */\n      0x0a\n        /* \"FvckClaim.sol\":7234:7256  _isRegistered[account] */\n      0x00\n        /* \"FvckClaim.sol\":7248:7255  account */\n      dup5\n        /* \"FvckClaim.sol\":7234:7256  _isRegistered[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"FvckClaim.sol\":7234:7263  _isRegistered[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"FvckClaim.sol\":7281:7305  totalRegisteredAddresses */\n      0x07\n      0x00\n        /* \"FvckClaim.sol\":7281:7307  totalRegisteredAddresses++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_257\n      swap1\n      tag_198\n      jump\t// in\n    tag_257:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"FvckClaim.sol\":7351:7358  account */\n      dup2\n        /* \"FvckClaim.sol\":7330:7359  NewAddressRegistered(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1837db44f707818dfce8415ef80a201e86882bc1bffabdded272512a96c0799e\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"FvckClaim.sol\":7187:7374  if (!_isRegistered[account]) {... */\n    tag_256:\n        /* \"FvckClaim.sol\":7418:7424  amount */\n      dup1\n        /* \"FvckClaim.sol\":7388:7405  claimableBalances */\n      0x03\n        /* \"FvckClaim.sol\":7388:7414  claimableBalances[account] */\n      0x00\n        /* \"FvckClaim.sol\":7406:7413  account */\n      dup5\n        /* \"FvckClaim.sol\":7388:7414  claimableBalances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"FvckClaim.sol\":7388:7424  claimableBalances[account] += amount */\n      dup3\n      dup3\n      sload\n      tag_258\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_258:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"FvckClaim.sol\":7460:7466  amount */\n      dup1\n        /* \"FvckClaim.sol\":7438:7466  newTotalToAllocate += amount */\n      dup5\n      tag_259\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_259:\n      swap4\n      pop\n        /* \"FvckClaim.sol\":7502:7509  account */\n      dup2\n        /* \"FvckClaim.sol\":7486:7546  TokensAllocated(account, amount, claimableBalances[account]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4885d73252b9e2c420b677d64d50e8a5798773dbb4cb99c5a2ab2824f725d9a8\n        /* \"FvckClaim.sol\":7511:7517  amount */\n      dup3\n        /* \"FvckClaim.sol\":7519:7536  claimableBalances */\n      0x03\n        /* \"FvckClaim.sol\":7519:7545  claimableBalances[account] */\n      0x00\n        /* \"FvckClaim.sol\":7537:7544  account */\n      dup7\n        /* \"FvckClaim.sol\":7519:7545  claimableBalances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"FvckClaim.sol\":7486:7546  TokensAllocated(account, amount, claimableBalances[account]) */\n      mload(0x40)\n      tag_260\n      swap3\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"FvckClaim.sol\":6825:7557  {... */\n      pop\n      pop\n        /* \"FvckClaim.sol\":6820:6823  i++ */\n      dup1\n      dup1\n      tag_262\n      swap1\n      tag_198\n      jump\t// in\n    tag_262:\n      swap2\n      pop\n      pop\n        /* \"FvckClaim.sol\":6778:7557  for (uint256 i = 0; i < _accounts.length; i++) {... */\n      jump(tag_238)\n    tag_239:\n      pop\n        /* \"FvckClaim.sol\":7631:7649  newTotalToAllocate */\n      dup1\n        /* \"FvckClaim.sol\":7614:7628  totalAllocated */\n      sload(0x09)\n        /* \"FvckClaim.sol\":7614:7649  totalAllocated + newTotalToAllocate */\n      tag_263\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_263:\n        /* \"FvckClaim.sol\":7588:7610  contractTokenBalance() */\n      tag_264\n        /* \"FvckClaim.sol\":7588:7608  contractTokenBalance */\n      tag_121\n        /* \"FvckClaim.sol\":7588:7610  contractTokenBalance() */\n      jump\t// in\n    tag_264:\n        /* \"FvckClaim.sol\":7588:7649  contractTokenBalance() >= totalAllocated + newTotalToAllocate */\n      lt\n      iszero\n        /* \"FvckClaim.sol\":7567:7719  require(... */\n      tag_265\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_265:\n        /* \"FvckClaim.sol\":7748:7766  newTotalToAllocate */\n      dup1\n        /* \"FvckClaim.sol\":7730:7744  totalAllocated */\n      0x09\n      0x00\n        /* \"FvckClaim.sol\":7730:7766  totalAllocated += newTotalToAllocate */\n      dup3\n      dup3\n      sload\n      tag_268\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_268:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"FvckClaim.sol\":7782:7822  ClaimableBatchAdded(_accounts, _amounts) */\n      0xf14d1c8e59d4cd079b88d0e19cf0de41c86b7a761d5032c0947977002b3ad93a\n        /* \"FvckClaim.sol\":7802:7811  _accounts */\n      dup6\n      dup6\n        /* \"FvckClaim.sol\":7813:7821  _amounts */\n      dup6\n      dup6\n        /* \"FvckClaim.sol\":7782:7822  ClaimableBatchAdded(_accounts, _amounts) */\n      mload(0x40)\n      tag_269\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"FvckClaim.sol\":6608:7829  {... */\n      pop\n        /* \"FvckClaim.sol\":6481:7829  function addClaimableBatch(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"FvckClaim.sol\":9582:10089  function emergencyWithdraw() external onlyOwner nonReentrant {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_272\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_274\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_181\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_274:\n        /* \"FvckClaim.sol\":9653:9676  uint256 contractBalance */\n      0x00\n        /* \"FvckClaim.sol\":9679:9684  token */\n      immutable(\"0x755086c717cb5d158287af515dd799b5ec7f30c3baee71f20accbab571e166d5\")\n        /* \"FvckClaim.sol\":9679:9694  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"FvckClaim.sol\":9703:9707  this */\n      address\n        /* \"FvckClaim.sol\":9679:9709  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_276:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_278\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_278:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_279\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_279:\n        /* \"FvckClaim.sol\":9653:9709  uint256 contractBalance = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"FvckClaim.sol\":9745:9746  0 */\n      0x00\n        /* \"FvckClaim.sol\":9727:9742  contractBalance */\n      dup2\n        /* \"FvckClaim.sol\":9727:9746  contractBalance > 0 */\n      gt\n        /* \"FvckClaim.sol\":9719:9774  require(contractBalance > 0, \"Contract has no balance\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_280:\n        /* \"FvckClaim.sol\":9848:9873  emergencyWithdrawCooldown */\n      sload(0x0d)\n        /* \"FvckClaim.sol\":9824:9845  lastEmergencyWithdraw */\n      sload(0x0c)\n        /* \"FvckClaim.sol\":9824:9873  lastEmergencyWithdraw + emergencyWithdrawCooldown */\n      tag_283\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_283:\n        /* \"FvckClaim.sol\":9805:9820  block.timestamp */\n      timestamp\n        /* \"FvckClaim.sol\":9805:9873  block.timestamp >= lastEmergencyWithdraw + emergencyWithdrawCooldown */\n      lt\n      iszero\n        /* \"FvckClaim.sol\":9784:9919  require(... */\n      tag_284\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_284:\n        /* \"FvckClaim.sol\":9954:9969  block.timestamp */\n      timestamp\n        /* \"FvckClaim.sol\":9930:9951  lastEmergencyWithdraw */\n      0x0c\n        /* \"FvckClaim.sol\":9930:9969  lastEmergencyWithdraw = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"FvckClaim.sol\":9979:10023  token.safeTransfer(owner(), contractBalance) */\n      tag_287\n        /* \"FvckClaim.sol\":9998:10005  owner() */\n      tag_288\n        /* \"FvckClaim.sol\":9998:10003  owner */\n      tag_101\n        /* \"FvckClaim.sol\":9998:10005  owner() */\n      jump\t// in\n    tag_288:\n        /* \"FvckClaim.sol\":10007:10022  contractBalance */\n      dup3\n        /* \"FvckClaim.sol\":9979:9984  token */\n      immutable(\"0x755086c717cb5d158287af515dd799b5ec7f30c3baee71f20accbab571e166d5\")\n        /* \"FvckClaim.sol\":9979:9997  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_202\n      swap1\n        /* \"FvckClaim.sol\":9979:10023  token.safeTransfer(owner(), contractBalance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_287:\n        /* \"FvckClaim.sol\":10057:10064  owner() */\n      tag_289\n        /* \"FvckClaim.sol\":10057:10062  owner */\n      tag_101\n        /* \"FvckClaim.sol\":10057:10064  owner() */\n      jump\t// in\n    tag_289:\n        /* \"FvckClaim.sol\":10039:10082  EmergencyWithdraw(owner(), contractBalance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695\n        /* \"FvckClaim.sol\":10066:10081  contractBalance */\n      dup3\n        /* \"FvckClaim.sol\":10039:10082  EmergencyWithdraw(owner(), contractBalance) */\n      mload(0x40)\n      tag_290\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"FvckClaim.sol\":9643:10089  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_291\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_204\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_291:\n        /* \"FvckClaim.sol\":9582:10089  function emergencyWithdraw() external onlyOwner nonReentrant {... */\n      jump\t// out\n        /* \"FvckClaim.sol\":10205:10739  function withdrawUnallocatedTokens() external onlyOwner nonReentrant {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_293\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_295\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_181\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_295:\n        /* \"FvckClaim.sol\":10284:10309  uint256 unallocatedTokens */\n      0x00\n        /* \"FvckClaim.sol\":10312:10334  getUnallocatedTokens() */\n      tag_297\n        /* \"FvckClaim.sol\":10312:10332  getUnallocatedTokens */\n      tag_74\n        /* \"FvckClaim.sol\":10312:10334  getUnallocatedTokens() */\n      jump\t// in\n    tag_297:\n        /* \"FvckClaim.sol\":10284:10334  uint256 unallocatedTokens = getUnallocatedTokens() */\n      swap1\n      pop\n        /* \"FvckClaim.sol\":10372:10373  0 */\n      0x00\n        /* \"FvckClaim.sol\":10352:10369  unallocatedTokens */\n      dup2\n        /* \"FvckClaim.sol\":10352:10373  unallocatedTokens > 0 */\n      gt\n        /* \"FvckClaim.sol\":10344:10411  require(unallocatedTokens > 0, \"No unallocated tokens to withdraw\") */\n      tag_298\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_298:\n        /* \"FvckClaim.sol\":10485:10510  emergencyWithdrawCooldown */\n      sload(0x0d)\n        /* \"FvckClaim.sol\":10461:10482  lastEmergencyWithdraw */\n      sload(0x0c)\n        /* \"FvckClaim.sol\":10461:10510  lastEmergencyWithdraw + emergencyWithdrawCooldown */\n      tag_301\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_301:\n        /* \"FvckClaim.sol\":10442:10457  block.timestamp */\n      timestamp\n        /* \"FvckClaim.sol\":10442:10510  block.timestamp >= lastEmergencyWithdraw + emergencyWithdrawCooldown */\n      lt\n      iszero\n        /* \"FvckClaim.sol\":10421:10556  require(... */\n      tag_302\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_303\n      swap1\n      tag_286\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_302:\n        /* \"FvckClaim.sol\":10591:10606  block.timestamp */\n      timestamp\n        /* \"FvckClaim.sol\":10567:10588  lastEmergencyWithdraw */\n      0x0c\n        /* \"FvckClaim.sol\":10567:10606  lastEmergencyWithdraw = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"FvckClaim.sol\":10616:10662  token.safeTransfer(owner(), unallocatedTokens) */\n      tag_304\n        /* \"FvckClaim.sol\":10635:10642  owner() */\n      tag_305\n        /* \"FvckClaim.sol\":10635:10640  owner */\n      tag_101\n        /* \"FvckClaim.sol\":10635:10642  owner() */\n      jump\t// in\n    tag_305:\n        /* \"FvckClaim.sol\":10644:10661  unallocatedTokens */\n      dup3\n        /* \"FvckClaim.sol\":10616:10621  token */\n      immutable(\"0x755086c717cb5d158287af515dd799b5ec7f30c3baee71f20accbab571e166d5\")\n        /* \"FvckClaim.sol\":10616:10634  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_202\n      swap1\n        /* \"FvckClaim.sol\":10616:10662  token.safeTransfer(owner(), unallocatedTokens) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_304:\n        /* \"FvckClaim.sol\":10705:10712  owner() */\n      tag_306\n        /* \"FvckClaim.sol\":10705:10710  owner */\n      tag_101\n        /* \"FvckClaim.sol\":10705:10712  owner() */\n      jump\t// in\n    tag_306:\n        /* \"FvckClaim.sol\":10678:10732  UnallocatedTokensWithdrawn(owner(), unallocatedTokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4f03851532cb76253fe3dddbcbe99f0a83446922731a7bdfd2cb44d35ffcb1d9\n        /* \"FvckClaim.sol\":10714:10731  unallocatedTokens */\n      dup3\n        /* \"FvckClaim.sol\":10678:10732  UnallocatedTokensWithdrawn(owner(), unallocatedTokens) */\n      mload(0x40)\n      tag_307\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"FvckClaim.sol\":10274:10739  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_308\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_204\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_308:\n        /* \"FvckClaim.sol\":10205:10739  function withdrawUnallocatedTokens() external onlyOwner nonReentrant {... */\n      jump\t// out\n        /* \"FvckClaim.sol\":5853:6194  function depositTokens(uint256 _amount) external onlyOwner {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_310\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_310:\n        /* \"FvckClaim.sol\":5940:5941  0 */\n      0x00\n        /* \"FvckClaim.sol\":5930:5937  _amount */\n      dup2\n        /* \"FvckClaim.sol\":5930:5941  _amount > 0 */\n      gt\n        /* \"FvckClaim.sol\":5922:5986  require(_amount > 0, \"Deposit amount must be greater than zero\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap1\n      tag_314\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_312:\n        /* \"FvckClaim.sol\":6035:6042  _amount */\n      dup1\n        /* \"FvckClaim.sol\":6004:6009  token */\n      immutable(\"0x755086c717cb5d158287af515dd799b5ec7f30c3baee71f20accbab571e166d5\")\n        /* \"FvckClaim.sol\":6004:6019  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"FvckClaim.sol\":6020:6030  msg.sender */\n      caller\n        /* \"FvckClaim.sol\":6004:6031  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_315\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_315:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_317\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_317:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_318\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_318:\n        /* \"FvckClaim.sol\":6004:6042  token.balanceOf(msg.sender) >= _amount */\n      lt\n      iszero\n        /* \"FvckClaim.sol\":5996:6067  require(token.balanceOf(msg.sender) >= _amount, \"Insufficient balance\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_320\n      swap1\n      tag_321\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_319:\n        /* \"FvckClaim.sol\":6078:6136  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_322\n        /* \"FvckClaim.sol\":6101:6111  msg.sender */\n      caller\n        /* \"FvckClaim.sol\":6121:6125  this */\n      address\n        /* \"FvckClaim.sol\":6128:6135  _amount */\n      dup4\n        /* \"FvckClaim.sol\":6078:6083  token */\n      immutable(\"0x755086c717cb5d158287af515dd799b5ec7f30c3baee71f20accbab571e166d5\")\n        /* \"FvckClaim.sol\":6078:6100  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_323\n      swap1\n        /* \"FvckClaim.sol\":6078:6136  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_322:\n        /* \"FvckClaim.sol\":6167:6177  msg.sender */\n      caller\n        /* \"FvckClaim.sol\":6152:6187  TokenDeposited(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7c8a4d8049a3f99a02f2a20640c206a2e4d3f2fa54fd20da9f01fda3620cda\n        /* \"FvckClaim.sol\":6179:6186  _amount */\n      dup3\n        /* \"FvckClaim.sol\":6152:6187  TokenDeposited(msg.sender, _amount) */\n      mload(0x40)\n      tag_324\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"FvckClaim.sol\":5853:6194  function depositTokens(uint256 _amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"FvckClaim.sol\":8735:8963  function withdrawApprovalFees() external onlyOwner {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_326\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_326:\n        /* \"FvckClaim.sol\":8796:8819  uint256 contractBalance */\n      0x00\n        /* \"FvckClaim.sol\":8822:8843  address(this).balance */\n      selfbalance\n        /* \"FvckClaim.sol\":8796:8843  uint256 contractBalance = address(this).balance */\n      swap1\n      pop\n        /* \"FvckClaim.sol\":8879:8880  0 */\n      0x00\n        /* \"FvckClaim.sol\":8861:8876  contractBalance */\n      dup2\n        /* \"FvckClaim.sol\":8861:8880  contractBalance > 0 */\n      gt\n        /* \"FvckClaim.sol\":8853:8904  require(contractBalance > 0, \"No fees to withdraw\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap1\n      tag_330\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_328:\n        /* \"FvckClaim.sol\":8922:8929  owner() */\n      tag_331\n        /* \"FvckClaim.sol\":8922:8927  owner */\n      tag_101\n        /* \"FvckClaim.sol\":8922:8929  owner() */\n      jump\t// in\n    tag_331:\n        /* \"FvckClaim.sol\":8914:8939  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FvckClaim.sol\":8914:8956  payable(owner()).transfer(contractBalance) */\n      0x08fc\n        /* \"FvckClaim.sol\":8940:8955  contractBalance */\n      dup3\n        /* \"FvckClaim.sol\":8914:8956  payable(owner()).transfer(contractBalance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_333\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_333:\n      pop\n        /* \"FvckClaim.sol\":8786:8963  {... */\n      pop\n        /* \"FvckClaim.sol\":8735:8963  function withdrawApprovalFees() external onlyOwner {... */\n      jump\t// out\n        /* \"FvckClaim.sol\":4521:4667  function setClaimApprovalFee(uint256 _fee) external onlyOwner {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_335:\n        /* \"FvckClaim.sol\":4612:4616  _fee */\n      dup1\n        /* \"FvckClaim.sol\":4593:4609  claimApprovalFee */\n      0x0e\n        /* \"FvckClaim.sol\":4593:4616  claimApprovalFee = _fee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"FvckClaim.sol\":4631:4660  ClaimApprovalFeeUpdated(_fee) */\n      0x046767aa5821ba6f1a985f8cf0134cb534cba0b26ff165803d3602c7ff046cd4\n        /* \"FvckClaim.sol\":4655:4659  _fee */\n      dup2\n        /* \"FvckClaim.sol\":4631:4660  ClaimApprovalFeeUpdated(_fee) */\n      mload(0x40)\n      tag_337\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_337:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"FvckClaim.sol\":4521:4667  function setClaimApprovalFee(uint256 _fee) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_339\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_341\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_342\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_342:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_341:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_343\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"FvckClaim.sol\":1975:2004  IERC20 public immutable token */\n    tag_164:\n      immutable(\"0x755086c717cb5d158287af515dd799b5ec7f30c3baee71f20accbab571e166d5\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_345\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_346\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_347\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_348\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_349\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_346\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_350\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_348:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_352\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_353\n      swap1\n      tag_354\n      jump\t// in\n    tag_353:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_352:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_356\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1373:1378  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1400  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1409  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1414  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1416:1421  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_357\n      swap3\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_357:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1372  _callOptionalReturn */\n      tag_359\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_363\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1790:1795  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1817  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1830  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1833:1837  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1839:1841  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1843:1848  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_364\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_365\n      jump\t// in\n    tag_364:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1789  _callOptionalReturn */\n      tag_359\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_363:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_359:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_368\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_368:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8220:8250  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8263:8286  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7900:8296  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8324:8325  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8320  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_369\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_370)\n    tag_369:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8358:8359  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8336:8341  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_370:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_371\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8434:8439  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_372\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_372:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_371:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7808:8458  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_374:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_375:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_376:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_377:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_451\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_376\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_378:\n        /* \"#utility.yul\":641:665   */\n      tag_453\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_377\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_454:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_379:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_456\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_378\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_42:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_459\n      tag_374\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":917:1036   */\n    tag_458:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_460\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_379\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_380:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_381:\n        /* \"#utility.yul\":1346:1370   */\n      tag_463\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_380\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_45:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_465\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_381\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1701   */\n    tag_382:\n        /* \"#utility.yul\":1645:1652   */\n      0x00\n        /* \"#utility.yul\":1688:1693   */\n      dup2\n        /* \"#utility.yul\":1681:1694   */\n      iszero\n        /* \"#utility.yul\":1674:1695   */\n      iszero\n        /* \"#utility.yul\":1663:1695   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1707:1823   */\n    tag_383:\n        /* \"#utility.yul\":1777:1798   */\n      tag_468\n        /* \"#utility.yul\":1792:1797   */\n      dup2\n        /* \"#utility.yul\":1777:1798   */\n      tag_382\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":1770:1775   */\n      dup2\n        /* \"#utility.yul\":1767:1799   */\n      eq\n        /* \"#utility.yul\":1757:1817   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":1813:1814   */\n      0x00\n        /* \"#utility.yul\":1810:1811   */\n      dup1\n        /* \"#utility.yul\":1803:1815   */\n      revert\n        /* \"#utility.yul\":1757:1817   */\n    tag_469:\n        /* \"#utility.yul\":1707:1823   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1829:1962   */\n    tag_384:\n        /* \"#utility.yul\":1872:1877   */\n      0x00\n        /* \"#utility.yul\":1910:1916   */\n      dup2\n        /* \"#utility.yul\":1897:1917   */\n      calldataload\n        /* \"#utility.yul\":1888:1917   */\n      swap1\n      pop\n        /* \"#utility.yul\":1926:1956   */\n      tag_471\n        /* \"#utility.yul\":1950:1955   */\n      dup2\n        /* \"#utility.yul\":1926:1956   */\n      tag_383\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":1829:1962   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1968:2436   */\n    tag_53:\n        /* \"#utility.yul\":2033:2039   */\n      0x00\n        /* \"#utility.yul\":2041:2047   */\n      dup1\n        /* \"#utility.yul\":2090:2092   */\n      0x40\n        /* \"#utility.yul\":2078:2087   */\n      dup4\n        /* \"#utility.yul\":2069:2076   */\n      dup6\n        /* \"#utility.yul\":2065:2088   */\n      sub\n        /* \"#utility.yul\":2061:2093   */\n      slt\n        /* \"#utility.yul\":2058:2177   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":2096:2175   */\n      tag_474\n      tag_374\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":2058:2177   */\n    tag_473:\n        /* \"#utility.yul\":2216:2217   */\n      0x00\n        /* \"#utility.yul\":2241:2294   */\n      tag_475\n        /* \"#utility.yul\":2286:2293   */\n      dup6\n        /* \"#utility.yul\":2277:2283   */\n      dup3\n        /* \"#utility.yul\":2266:2275   */\n      dup7\n        /* \"#utility.yul\":2262:2284   */\n      add\n        /* \"#utility.yul\":2241:2294   */\n      tag_379\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":2231:2294   */\n      swap3\n      pop\n        /* \"#utility.yul\":2187:2304   */\n      pop\n        /* \"#utility.yul\":2343:2345   */\n      0x20\n        /* \"#utility.yul\":2369:2419   */\n      tag_476\n        /* \"#utility.yul\":2411:2418   */\n      dup6\n        /* \"#utility.yul\":2402:2408   */\n      dup3\n        /* \"#utility.yul\":2391:2400   */\n      dup7\n        /* \"#utility.yul\":2387:2409   */\n      add\n        /* \"#utility.yul\":2369:2419   */\n      tag_384\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":2359:2419   */\n      swap2\n      pop\n        /* \"#utility.yul\":2314:2429   */\n      pop\n        /* \"#utility.yul\":1968:2436   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2442:2551   */\n    tag_385:\n        /* \"#utility.yul\":2523:2544   */\n      tag_478\n        /* \"#utility.yul\":2538:2543   */\n      dup2\n        /* \"#utility.yul\":2523:2544   */\n      tag_382\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":2518:2521   */\n      dup3\n        /* \"#utility.yul\":2511:2545   */\n      mstore\n        /* \"#utility.yul\":2442:2551   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2557:2767   */\n    tag_67:\n        /* \"#utility.yul\":2644:2648   */\n      0x00\n        /* \"#utility.yul\":2682:2684   */\n      0x20\n        /* \"#utility.yul\":2671:2680   */\n      dup3\n        /* \"#utility.yul\":2667:2685   */\n      add\n        /* \"#utility.yul\":2659:2685   */\n      swap1\n      pop\n        /* \"#utility.yul\":2695:2760   */\n      tag_480\n        /* \"#utility.yul\":2757:2758   */\n      0x00\n        /* \"#utility.yul\":2746:2755   */\n      dup4\n        /* \"#utility.yul\":2742:2759   */\n      add\n        /* \"#utility.yul\":2733:2739   */\n      dup5\n        /* \"#utility.yul\":2695:2760   */\n      tag_385\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":2557:2767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2773:2891   */\n    tag_386:\n        /* \"#utility.yul\":2860:2884   */\n      tag_482\n        /* \"#utility.yul\":2878:2883   */\n      dup2\n        /* \"#utility.yul\":2860:2884   */\n      tag_377\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":2855:2858   */\n      dup3\n        /* \"#utility.yul\":2848:2885   */\n      mstore\n        /* \"#utility.yul\":2773:2891   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2897:3119   */\n    tag_103:\n        /* \"#utility.yul\":2990:2994   */\n      0x00\n        /* \"#utility.yul\":3028:3030   */\n      0x20\n        /* \"#utility.yul\":3017:3026   */\n      dup3\n        /* \"#utility.yul\":3013:3031   */\n      add\n        /* \"#utility.yul\":3005:3031   */\n      swap1\n      pop\n        /* \"#utility.yul\":3041:3112   */\n      tag_484\n        /* \"#utility.yul\":3109:3110   */\n      0x00\n        /* \"#utility.yul\":3098:3107   */\n      dup4\n        /* \"#utility.yul\":3094:3111   */\n      add\n        /* \"#utility.yul\":3085:3091   */\n      dup5\n        /* \"#utility.yul\":3041:3112   */\n      tag_386\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":2897:3119   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3125:3448   */\n    tag_112:\n        /* \"#utility.yul\":3181:3187   */\n      0x00\n        /* \"#utility.yul\":3230:3232   */\n      0x20\n        /* \"#utility.yul\":3218:3227   */\n      dup3\n        /* \"#utility.yul\":3209:3216   */\n      dup5\n        /* \"#utility.yul\":3205:3228   */\n      sub\n        /* \"#utility.yul\":3201:3233   */\n      slt\n        /* \"#utility.yul\":3198:3317   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":3236:3315   */\n      tag_487\n      tag_374\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":3198:3317   */\n    tag_486:\n        /* \"#utility.yul\":3356:3357   */\n      0x00\n        /* \"#utility.yul\":3381:3431   */\n      tag_488\n        /* \"#utility.yul\":3423:3430   */\n      dup5\n        /* \"#utility.yul\":3414:3420   */\n      dup3\n        /* \"#utility.yul\":3403:3412   */\n      dup6\n        /* \"#utility.yul\":3399:3421   */\n      add\n        /* \"#utility.yul\":3381:3431   */\n      tag_384\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":3371:3431   */\n      swap2\n      pop\n        /* \"#utility.yul\":3327:3441   */\n      pop\n        /* \"#utility.yul\":3125:3448   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3454:4106   */\n    tag_134:\n        /* \"#utility.yul\":3653:3657   */\n      0x00\n        /* \"#utility.yul\":3691:3694   */\n      0xa0\n        /* \"#utility.yul\":3680:3689   */\n      dup3\n        /* \"#utility.yul\":3676:3695   */\n      add\n        /* \"#utility.yul\":3668:3695   */\n      swap1\n      pop\n        /* \"#utility.yul\":3705:3776   */\n      tag_490\n        /* \"#utility.yul\":3773:3774   */\n      0x00\n        /* \"#utility.yul\":3762:3771   */\n      dup4\n        /* \"#utility.yul\":3758:3775   */\n      add\n        /* \"#utility.yul\":3749:3755   */\n      dup9\n        /* \"#utility.yul\":3705:3776   */\n      tag_381\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":3786:3858   */\n      tag_491\n        /* \"#utility.yul\":3854:3856   */\n      0x20\n        /* \"#utility.yul\":3843:3852   */\n      dup4\n        /* \"#utility.yul\":3839:3857   */\n      add\n        /* \"#utility.yul\":3830:3836   */\n      dup8\n        /* \"#utility.yul\":3786:3858   */\n      tag_381\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":3868:3940   */\n      tag_492\n        /* \"#utility.yul\":3936:3938   */\n      0x40\n        /* \"#utility.yul\":3925:3934   */\n      dup4\n        /* \"#utility.yul\":3921:3939   */\n      add\n        /* \"#utility.yul\":3912:3918   */\n      dup7\n        /* \"#utility.yul\":3868:3940   */\n      tag_381\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":3950:4022   */\n      tag_493\n        /* \"#utility.yul\":4018:4020   */\n      0x60\n        /* \"#utility.yul\":4007:4016   */\n      dup4\n        /* \"#utility.yul\":4003:4021   */\n      add\n        /* \"#utility.yul\":3994:4000   */\n      dup6\n        /* \"#utility.yul\":3950:4022   */\n      tag_381\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":4032:4099   */\n      tag_494\n        /* \"#utility.yul\":4094:4097   */\n      0x80\n        /* \"#utility.yul\":4083:4092   */\n      dup4\n        /* \"#utility.yul\":4079:4098   */\n      add\n        /* \"#utility.yul\":4070:4076   */\n      dup5\n        /* \"#utility.yul\":4032:4099   */\n      tag_385\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":3454:4106   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4112:4229   */\n    tag_387:\n        /* \"#utility.yul\":4221:4222   */\n      0x00\n        /* \"#utility.yul\":4218:4219   */\n      dup1\n        /* \"#utility.yul\":4211:4223   */\n      revert\n        /* \"#utility.yul\":4235:4352   */\n    tag_388:\n        /* \"#utility.yul\":4344:4345   */\n      0x00\n        /* \"#utility.yul\":4341:4342   */\n      dup1\n        /* \"#utility.yul\":4334:4346   */\n      revert\n        /* \"#utility.yul\":4358:4475   */\n    tag_389:\n        /* \"#utility.yul\":4467:4468   */\n      0x00\n        /* \"#utility.yul\":4464:4465   */\n      dup1\n        /* \"#utility.yul\":4457:4469   */\n      revert\n        /* \"#utility.yul\":4498:5066   */\n    tag_390:\n        /* \"#utility.yul\":4571:4579   */\n      0x00\n        /* \"#utility.yul\":4581:4587   */\n      dup1\n        /* \"#utility.yul\":4631:4634   */\n      dup4\n        /* \"#utility.yul\":4624:4628   */\n      0x1f\n        /* \"#utility.yul\":4616:4622   */\n      dup5\n        /* \"#utility.yul\":4612:4629   */\n      add\n        /* \"#utility.yul\":4608:4635   */\n      slt\n        /* \"#utility.yul\":4598:4720   */\n      tag_499\n      jumpi\n        /* \"#utility.yul\":4639:4718   */\n      tag_500\n      tag_387\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":4598:4720   */\n    tag_499:\n        /* \"#utility.yul\":4752:4758   */\n      dup3\n        /* \"#utility.yul\":4739:4759   */\n      calldataload\n        /* \"#utility.yul\":4729:4759   */\n      swap1\n      pop\n        /* \"#utility.yul\":4782:4800   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4774:4780   */\n      dup2\n        /* \"#utility.yul\":4771:4801   */\n      gt\n        /* \"#utility.yul\":4768:4885   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":4804:4883   */\n      tag_502\n      tag_388\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":4768:4885   */\n    tag_501:\n        /* \"#utility.yul\":4918:4922   */\n      0x20\n        /* \"#utility.yul\":4910:4916   */\n      dup4\n        /* \"#utility.yul\":4906:4923   */\n      add\n        /* \"#utility.yul\":4894:4923   */\n      swap2\n      pop\n        /* \"#utility.yul\":4972:4975   */\n      dup4\n        /* \"#utility.yul\":4964:4968   */\n      0x20\n        /* \"#utility.yul\":4956:4962   */\n      dup3\n        /* \"#utility.yul\":4952:4969   */\n      mul\n        /* \"#utility.yul\":4942:4950   */\n      dup4\n        /* \"#utility.yul\":4938:4970   */\n      add\n        /* \"#utility.yul\":4935:4976   */\n      gt\n        /* \"#utility.yul\":4932:5060   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":4979:5058   */\n      tag_504\n      tag_389\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":4932:5060   */\n    tag_503:\n        /* \"#utility.yul\":4498:5066   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5089:5657   */\n    tag_391:\n        /* \"#utility.yul\":5162:5170   */\n      0x00\n        /* \"#utility.yul\":5172:5178   */\n      dup1\n        /* \"#utility.yul\":5222:5225   */\n      dup4\n        /* \"#utility.yul\":5215:5219   */\n      0x1f\n        /* \"#utility.yul\":5207:5213   */\n      dup5\n        /* \"#utility.yul\":5203:5220   */\n      add\n        /* \"#utility.yul\":5199:5226   */\n      slt\n        /* \"#utility.yul\":5189:5311   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":5230:5309   */\n      tag_507\n      tag_387\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":5189:5311   */\n    tag_506:\n        /* \"#utility.yul\":5343:5349   */\n      dup3\n        /* \"#utility.yul\":5330:5350   */\n      calldataload\n        /* \"#utility.yul\":5320:5350   */\n      swap1\n      pop\n        /* \"#utility.yul\":5373:5391   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5365:5371   */\n      dup2\n        /* \"#utility.yul\":5362:5392   */\n      gt\n        /* \"#utility.yul\":5359:5476   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":5395:5474   */\n      tag_509\n      tag_388\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":5359:5476   */\n    tag_508:\n        /* \"#utility.yul\":5509:5513   */\n      0x20\n        /* \"#utility.yul\":5501:5507   */\n      dup4\n        /* \"#utility.yul\":5497:5514   */\n      add\n        /* \"#utility.yul\":5485:5514   */\n      swap2\n      pop\n        /* \"#utility.yul\":5563:5566   */\n      dup4\n        /* \"#utility.yul\":5555:5559   */\n      0x20\n        /* \"#utility.yul\":5547:5553   */\n      dup3\n        /* \"#utility.yul\":5543:5560   */\n      mul\n        /* \"#utility.yul\":5533:5541   */\n      dup4\n        /* \"#utility.yul\":5529:5561   */\n      add\n        /* \"#utility.yul\":5526:5567   */\n      gt\n        /* \"#utility.yul\":5523:5651   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":5570:5649   */\n      tag_511\n      tag_389\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":5523:5651   */\n    tag_510:\n        /* \"#utility.yul\":5089:5657   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5663:6597   */\n    tag_138:\n        /* \"#utility.yul\":5785:5791   */\n      0x00\n        /* \"#utility.yul\":5793:5799   */\n      dup1\n        /* \"#utility.yul\":5801:5807   */\n      0x00\n        /* \"#utility.yul\":5809:5815   */\n      dup1\n        /* \"#utility.yul\":5858:5860   */\n      0x40\n        /* \"#utility.yul\":5846:5855   */\n      dup6\n        /* \"#utility.yul\":5837:5844   */\n      dup8\n        /* \"#utility.yul\":5833:5856   */\n      sub\n        /* \"#utility.yul\":5829:5861   */\n      slt\n        /* \"#utility.yul\":5826:5945   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":5864:5943   */\n      tag_514\n      tag_374\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":5826:5945   */\n    tag_513:\n        /* \"#utility.yul\":6012:6013   */\n      0x00\n        /* \"#utility.yul\":6001:6010   */\n      dup6\n        /* \"#utility.yul\":5997:6014   */\n      add\n        /* \"#utility.yul\":5984:6015   */\n      calldataload\n        /* \"#utility.yul\":6042:6060   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6034:6040   */\n      dup2\n        /* \"#utility.yul\":6031:6061   */\n      gt\n        /* \"#utility.yul\":6028:6145   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":6064:6143   */\n      tag_516\n      tag_375\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":6028:6145   */\n    tag_515:\n        /* \"#utility.yul\":6177:6257   */\n      tag_517\n        /* \"#utility.yul\":6249:6256   */\n      dup8\n        /* \"#utility.yul\":6240:6246   */\n      dup3\n        /* \"#utility.yul\":6229:6238   */\n      dup9\n        /* \"#utility.yul\":6225:6247   */\n      add\n        /* \"#utility.yul\":6177:6257   */\n      tag_390\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":6159:6257   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":5955:6267   */\n      pop\n        /* \"#utility.yul\":6334:6336   */\n      0x20\n        /* \"#utility.yul\":6323:6332   */\n      dup6\n        /* \"#utility.yul\":6319:6337   */\n      add\n        /* \"#utility.yul\":6306:6338   */\n      calldataload\n        /* \"#utility.yul\":6365:6383   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6357:6363   */\n      dup2\n        /* \"#utility.yul\":6354:6384   */\n      gt\n        /* \"#utility.yul\":6351:6468   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":6387:6466   */\n      tag_519\n      tag_375\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":6351:6468   */\n    tag_518:\n        /* \"#utility.yul\":6500:6580   */\n      tag_520\n        /* \"#utility.yul\":6572:6579   */\n      dup8\n        /* \"#utility.yul\":6563:6569   */\n      dup3\n        /* \"#utility.yul\":6552:6561   */\n      dup9\n        /* \"#utility.yul\":6548:6570   */\n      add\n        /* \"#utility.yul\":6500:6580   */\n      tag_391\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":6482:6580   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":6277:6590   */\n      pop\n        /* \"#utility.yul\":5663:6597   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6603:6725   */\n    tag_392:\n        /* \"#utility.yul\":6676:6700   */\n      tag_522\n        /* \"#utility.yul\":6694:6699   */\n      dup2\n        /* \"#utility.yul\":6676:6700   */\n      tag_380\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":6669:6674   */\n      dup2\n        /* \"#utility.yul\":6666:6701   */\n      eq\n        /* \"#utility.yul\":6656:6719   */\n      tag_523\n      jumpi\n        /* \"#utility.yul\":6715:6716   */\n      0x00\n        /* \"#utility.yul\":6712:6713   */\n      dup1\n        /* \"#utility.yul\":6705:6717   */\n      revert\n        /* \"#utility.yul\":6656:6719   */\n    tag_523:\n        /* \"#utility.yul\":6603:6725   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6731:6870   */\n    tag_393:\n        /* \"#utility.yul\":6777:6782   */\n      0x00\n        /* \"#utility.yul\":6815:6821   */\n      dup2\n        /* \"#utility.yul\":6802:6822   */\n      calldataload\n        /* \"#utility.yul\":6793:6822   */\n      swap1\n      pop\n        /* \"#utility.yul\":6831:6864   */\n      tag_525\n        /* \"#utility.yul\":6858:6863   */\n      dup2\n        /* \"#utility.yul\":6831:6864   */\n      tag_392\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":6731:6870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6876:7205   */\n    tag_149:\n        /* \"#utility.yul\":6935:6941   */\n      0x00\n        /* \"#utility.yul\":6984:6986   */\n      0x20\n        /* \"#utility.yul\":6972:6981   */\n      dup3\n        /* \"#utility.yul\":6963:6970   */\n      dup5\n        /* \"#utility.yul\":6959:6982   */\n      sub\n        /* \"#utility.yul\":6955:6987   */\n      slt\n        /* \"#utility.yul\":6952:7071   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":6990:7069   */\n      tag_528\n      tag_374\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":6952:7071   */\n    tag_527:\n        /* \"#utility.yul\":7110:7111   */\n      0x00\n        /* \"#utility.yul\":7135:7188   */\n      tag_529\n        /* \"#utility.yul\":7180:7187   */\n      dup5\n        /* \"#utility.yul\":7171:7177   */\n      dup3\n        /* \"#utility.yul\":7160:7169   */\n      dup6\n        /* \"#utility.yul\":7156:7178   */\n      add\n        /* \"#utility.yul\":7135:7188   */\n      tag_393\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":7125:7188   */\n      swap2\n      pop\n        /* \"#utility.yul\":7081:7198   */\n      pop\n        /* \"#utility.yul\":6876:7205   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7211:7271   */\n    tag_394:\n        /* \"#utility.yul\":7239:7242   */\n      0x00\n        /* \"#utility.yul\":7260:7265   */\n      dup2\n        /* \"#utility.yul\":7253:7265   */\n      swap1\n      pop\n        /* \"#utility.yul\":7211:7271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7277:7419   */\n    tag_395:\n        /* \"#utility.yul\":7327:7336   */\n      0x00\n        /* \"#utility.yul\":7360:7413   */\n      tag_532\n        /* \"#utility.yul\":7378:7412   */\n      tag_533\n        /* \"#utility.yul\":7387:7411   */\n      tag_534\n        /* \"#utility.yul\":7405:7410   */\n      dup5\n        /* \"#utility.yul\":7387:7411   */\n      tag_376\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":7378:7412   */\n      tag_394\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":7360:7413   */\n      tag_376\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":7347:7413   */\n      swap1\n      pop\n        /* \"#utility.yul\":7277:7419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7425:7551   */\n    tag_396:\n        /* \"#utility.yul\":7475:7484   */\n      0x00\n        /* \"#utility.yul\":7508:7545   */\n      tag_536\n        /* \"#utility.yul\":7539:7544   */\n      dup3\n        /* \"#utility.yul\":7508:7545   */\n      tag_395\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":7495:7545   */\n      swap1\n      pop\n        /* \"#utility.yul\":7425:7551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7557:7697   */\n    tag_397:\n        /* \"#utility.yul\":7621:7630   */\n      0x00\n        /* \"#utility.yul\":7654:7691   */\n      tag_538\n        /* \"#utility.yul\":7685:7690   */\n      dup3\n        /* \"#utility.yul\":7654:7691   */\n      tag_396\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":7641:7691   */\n      swap1\n      pop\n        /* \"#utility.yul\":7557:7697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7703:7862   */\n    tag_398:\n        /* \"#utility.yul\":7804:7855   */\n      tag_540\n        /* \"#utility.yul\":7849:7854   */\n      dup2\n        /* \"#utility.yul\":7804:7855   */\n      tag_397\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":7799:7802   */\n      dup3\n        /* \"#utility.yul\":7792:7856   */\n      mstore\n        /* \"#utility.yul\":7703:7862   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7868:8118   */\n    tag_166:\n        /* \"#utility.yul\":7975:7979   */\n      0x00\n        /* \"#utility.yul\":8013:8015   */\n      0x20\n        /* \"#utility.yul\":8002:8011   */\n      dup3\n        /* \"#utility.yul\":7998:8016   */\n      add\n        /* \"#utility.yul\":7990:8016   */\n      swap1\n      pop\n        /* \"#utility.yul\":8026:8111   */\n      tag_542\n        /* \"#utility.yul\":8108:8109   */\n      0x00\n        /* \"#utility.yul\":8097:8106   */\n      dup4\n        /* \"#utility.yul\":8093:8110   */\n      add\n        /* \"#utility.yul\":8084:8090   */\n      dup5\n        /* \"#utility.yul\":8026:8111   */\n      tag_398\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":7868:8118   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8124:8304   */\n    tag_399:\n        /* \"#utility.yul\":8172:8249   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8169:8170   */\n      0x00\n        /* \"#utility.yul\":8162:8250   */\n      mstore\n        /* \"#utility.yul\":8269:8273   */\n      0x11\n        /* \"#utility.yul\":8266:8267   */\n      0x04\n        /* \"#utility.yul\":8259:8274   */\n      mstore\n        /* \"#utility.yul\":8293:8297   */\n      0x24\n        /* \"#utility.yul\":8290:8291   */\n      0x00\n        /* \"#utility.yul\":8283:8298   */\n      revert\n        /* \"#utility.yul\":8310:8504   */\n    tag_178:\n        /* \"#utility.yul\":8350:8354   */\n      0x00\n        /* \"#utility.yul\":8370:8390   */\n      tag_545\n        /* \"#utility.yul\":8388:8389   */\n      dup3\n        /* \"#utility.yul\":8370:8390   */\n      tag_380\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":8365:8390   */\n      swap2\n      pop\n        /* \"#utility.yul\":8404:8424   */\n      tag_546\n        /* \"#utility.yul\":8422:8423   */\n      dup4\n        /* \"#utility.yul\":8404:8424   */\n      tag_380\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":8399:8424   */\n      swap3\n      pop\n        /* \"#utility.yul\":8448:8449   */\n      dup3\n        /* \"#utility.yul\":8445:8446   */\n      dup3\n        /* \"#utility.yul\":8441:8450   */\n      sub\n        /* \"#utility.yul\":8433:8450   */\n      swap1\n      pop\n        /* \"#utility.yul\":8472:8473   */\n      dup2\n        /* \"#utility.yul\":8466:8470   */\n      dup2\n        /* \"#utility.yul\":8463:8474   */\n      gt\n        /* \"#utility.yul\":8460:8497   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":8477:8495   */\n      tag_548\n      tag_399\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":8460:8497   */\n    tag_547:\n        /* \"#utility.yul\":8310:8504   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8510:8679   */\n    tag_400:\n        /* \"#utility.yul\":8594:8605   */\n      0x00\n        /* \"#utility.yul\":8628:8634   */\n      dup3\n        /* \"#utility.yul\":8623:8626   */\n      dup3\n        /* \"#utility.yul\":8616:8635   */\n      mstore\n        /* \"#utility.yul\":8668:8672   */\n      0x20\n        /* \"#utility.yul\":8663:8666   */\n      dup3\n        /* \"#utility.yul\":8659:8673   */\n      add\n        /* \"#utility.yul\":8644:8673   */\n      swap1\n      pop\n        /* \"#utility.yul\":8510:8679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8685:8852   */\n    tag_401:\n        /* \"#utility.yul\":8825:8844   */\n      0x436c61696d206e6f7420656e61626c6564000000000000000000000000000000\n        /* \"#utility.yul\":8821:8822   */\n      0x00\n        /* \"#utility.yul\":8813:8819   */\n      dup3\n        /* \"#utility.yul\":8809:8823   */\n      add\n        /* \"#utility.yul\":8802:8845   */\n      mstore\n        /* \"#utility.yul\":8685:8852   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8858:9224   */\n    tag_402:\n        /* \"#utility.yul\":9000:9003   */\n      0x00\n        /* \"#utility.yul\":9021:9088   */\n      tag_552\n        /* \"#utility.yul\":9085:9087   */\n      0x11\n        /* \"#utility.yul\":9080:9083   */\n      dup4\n        /* \"#utility.yul\":9021:9088   */\n      tag_400\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":9014:9088   */\n      swap2\n      pop\n        /* \"#utility.yul\":9097:9190   */\n      tag_553\n        /* \"#utility.yul\":9186:9189   */\n      dup3\n        /* \"#utility.yul\":9097:9190   */\n      tag_401\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":9215:9217   */\n      0x20\n        /* \"#utility.yul\":9210:9213   */\n      dup3\n        /* \"#utility.yul\":9206:9218   */\n      add\n        /* \"#utility.yul\":9199:9218   */\n      swap1\n      pop\n        /* \"#utility.yul\":8858:9224   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9230:9649   */\n    tag_185:\n        /* \"#utility.yul\":9396:9400   */\n      0x00\n        /* \"#utility.yul\":9434:9436   */\n      0x20\n        /* \"#utility.yul\":9423:9432   */\n      dup3\n        /* \"#utility.yul\":9419:9437   */\n      add\n        /* \"#utility.yul\":9411:9437   */\n      swap1\n      pop\n        /* \"#utility.yul\":9483:9492   */\n      dup2\n        /* \"#utility.yul\":9477:9481   */\n      dup2\n        /* \"#utility.yul\":9473:9493   */\n      sub\n        /* \"#utility.yul\":9469:9470   */\n      0x00\n        /* \"#utility.yul\":9458:9467   */\n      dup4\n        /* \"#utility.yul\":9454:9471   */\n      add\n        /* \"#utility.yul\":9447:9494   */\n      mstore\n        /* \"#utility.yul\":9511:9642   */\n      tag_555\n        /* \"#utility.yul\":9637:9641   */\n      dup2\n        /* \"#utility.yul\":9511:9642   */\n      tag_402\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":9503:9642   */\n      swap1\n      pop\n        /* \"#utility.yul\":9230:9649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9655:9835   */\n    tag_403:\n        /* \"#utility.yul\":9795:9827   */\n      0x436c61696d20626c6f636b656420666f72207468697320616464726573730000\n        /* \"#utility.yul\":9791:9792   */\n      0x00\n        /* \"#utility.yul\":9783:9789   */\n      dup3\n        /* \"#utility.yul\":9779:9793   */\n      add\n        /* \"#utility.yul\":9772:9828   */\n      mstore\n        /* \"#utility.yul\":9655:9835   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9841:10207   */\n    tag_404:\n        /* \"#utility.yul\":9983:9986   */\n      0x00\n        /* \"#utility.yul\":10004:10071   */\n      tag_558\n        /* \"#utility.yul\":10068:10070   */\n      0x1e\n        /* \"#utility.yul\":10063:10066   */\n      dup4\n        /* \"#utility.yul\":10004:10071   */\n      tag_400\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":9997:10071   */\n      swap2\n      pop\n        /* \"#utility.yul\":10080:10173   */\n      tag_559\n        /* \"#utility.yul\":10169:10172   */\n      dup3\n        /* \"#utility.yul\":10080:10173   */\n      tag_403\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":10198:10200   */\n      0x20\n        /* \"#utility.yul\":10193:10196   */\n      dup3\n        /* \"#utility.yul\":10189:10201   */\n      add\n        /* \"#utility.yul\":10182:10201   */\n      swap1\n      pop\n        /* \"#utility.yul\":9841:10207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10213:10632   */\n    tag_188:\n        /* \"#utility.yul\":10379:10383   */\n      0x00\n        /* \"#utility.yul\":10417:10419   */\n      0x20\n        /* \"#utility.yul\":10406:10415   */\n      dup3\n        /* \"#utility.yul\":10402:10420   */\n      add\n        /* \"#utility.yul\":10394:10420   */\n      swap1\n      pop\n        /* \"#utility.yul\":10466:10475   */\n      dup2\n        /* \"#utility.yul\":10460:10464   */\n      dup2\n        /* \"#utility.yul\":10456:10476   */\n      sub\n        /* \"#utility.yul\":10452:10453   */\n      0x00\n        /* \"#utility.yul\":10441:10450   */\n      dup4\n        /* \"#utility.yul\":10437:10454   */\n      add\n        /* \"#utility.yul\":10430:10477   */\n      mstore\n        /* \"#utility.yul\":10494:10625   */\n      tag_561\n        /* \"#utility.yul\":10620:10624   */\n      dup2\n        /* \"#utility.yul\":10494:10625   */\n      tag_404\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":10486:10625   */\n      swap1\n      pop\n        /* \"#utility.yul\":10213:10632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10638:10809   */\n    tag_405:\n        /* \"#utility.yul\":10778:10801   */\n      0x417070726f76616c20666565206e6f7420706169640000000000000000000000\n        /* \"#utility.yul\":10774:10775   */\n      0x00\n        /* \"#utility.yul\":10766:10772   */\n      dup3\n        /* \"#utility.yul\":10762:10776   */\n      add\n        /* \"#utility.yul\":10755:10802   */\n      mstore\n        /* \"#utility.yul\":10638:10809   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10815:11181   */\n    tag_406:\n        /* \"#utility.yul\":10957:10960   */\n      0x00\n        /* \"#utility.yul\":10978:11045   */\n      tag_564\n        /* \"#utility.yul\":11042:11044   */\n      0x15\n        /* \"#utility.yul\":11037:11040   */\n      dup4\n        /* \"#utility.yul\":10978:11045   */\n      tag_400\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":10971:11045   */\n      swap2\n      pop\n        /* \"#utility.yul\":11054:11147   */\n      tag_565\n        /* \"#utility.yul\":11143:11146   */\n      dup3\n        /* \"#utility.yul\":11054:11147   */\n      tag_405\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":11172:11174   */\n      0x20\n        /* \"#utility.yul\":11167:11170   */\n      dup3\n        /* \"#utility.yul\":11163:11175   */\n      add\n        /* \"#utility.yul\":11156:11175   */\n      swap1\n      pop\n        /* \"#utility.yul\":10815:11181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11187:11606   */\n    tag_191:\n        /* \"#utility.yul\":11353:11357   */\n      0x00\n        /* \"#utility.yul\":11391:11393   */\n      0x20\n        /* \"#utility.yul\":11380:11389   */\n      dup3\n        /* \"#utility.yul\":11376:11394   */\n      add\n        /* \"#utility.yul\":11368:11394   */\n      swap1\n      pop\n        /* \"#utility.yul\":11440:11449   */\n      dup2\n        /* \"#utility.yul\":11434:11438   */\n      dup2\n        /* \"#utility.yul\":11430:11450   */\n      sub\n        /* \"#utility.yul\":11426:11427   */\n      0x00\n        /* \"#utility.yul\":11415:11424   */\n      dup4\n        /* \"#utility.yul\":11411:11428   */\n      add\n        /* \"#utility.yul\":11404:11451   */\n      mstore\n        /* \"#utility.yul\":11468:11599   */\n      tag_567\n        /* \"#utility.yul\":11594:11598   */\n      dup2\n        /* \"#utility.yul\":11468:11599   */\n      tag_406\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":11460:11599   */\n      swap1\n      pop\n        /* \"#utility.yul\":11187:11606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11612:11790   */\n    tag_407:\n        /* \"#utility.yul\":11752:11782   */\n      0x596f752068617665206e6f2062616c616e636520746f20636c61696d00000000\n        /* \"#utility.yul\":11748:11749   */\n      0x00\n        /* \"#utility.yul\":11740:11746   */\n      dup3\n        /* \"#utility.yul\":11736:11750   */\n      add\n        /* \"#utility.yul\":11729:11783   */\n      mstore\n        /* \"#utility.yul\":11612:11790   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11796:12162   */\n    tag_408:\n        /* \"#utility.yul\":11938:11941   */\n      0x00\n        /* \"#utility.yul\":11959:12026   */\n      tag_570\n        /* \"#utility.yul\":12023:12025   */\n      0x1c\n        /* \"#utility.yul\":12018:12021   */\n      dup4\n        /* \"#utility.yul\":11959:12026   */\n      tag_400\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":11952:12026   */\n      swap2\n      pop\n        /* \"#utility.yul\":12035:12128   */\n      tag_571\n        /* \"#utility.yul\":12124:12127   */\n      dup3\n        /* \"#utility.yul\":12035:12128   */\n      tag_407\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":12153:12155   */\n      0x20\n        /* \"#utility.yul\":12148:12151   */\n      dup3\n        /* \"#utility.yul\":12144:12156   */\n      add\n        /* \"#utility.yul\":12137:12156   */\n      swap1\n      pop\n        /* \"#utility.yul\":11796:12162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12168:12587   */\n    tag_194:\n        /* \"#utility.yul\":12334:12338   */\n      0x00\n        /* \"#utility.yul\":12372:12374   */\n      0x20\n        /* \"#utility.yul\":12361:12370   */\n      dup3\n        /* \"#utility.yul\":12357:12375   */\n      add\n        /* \"#utility.yul\":12349:12375   */\n      swap1\n      pop\n        /* \"#utility.yul\":12421:12430   */\n      dup2\n        /* \"#utility.yul\":12415:12419   */\n      dup2\n        /* \"#utility.yul\":12411:12431   */\n      sub\n        /* \"#utility.yul\":12407:12408   */\n      0x00\n        /* \"#utility.yul\":12396:12405   */\n      dup4\n        /* \"#utility.yul\":12392:12409   */\n      add\n        /* \"#utility.yul\":12385:12432   */\n      mstore\n        /* \"#utility.yul\":12449:12580   */\n      tag_573\n        /* \"#utility.yul\":12575:12579   */\n      dup2\n        /* \"#utility.yul\":12449:12580   */\n      tag_408\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":12441:12580   */\n      swap1\n      pop\n        /* \"#utility.yul\":12168:12587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12593:12826   */\n    tag_198:\n        /* \"#utility.yul\":12632:12635   */\n      0x00\n        /* \"#utility.yul\":12655:12679   */\n      tag_575\n        /* \"#utility.yul\":12673:12678   */\n      dup3\n        /* \"#utility.yul\":12655:12679   */\n      tag_380\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":12646:12679   */\n      swap2\n      pop\n        /* \"#utility.yul\":12701:12767   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12694:12699   */\n      dup3\n        /* \"#utility.yul\":12691:12768   */\n      sub\n        /* \"#utility.yul\":12688:12791   */\n      tag_576\n      jumpi\n        /* \"#utility.yul\":12771:12789   */\n      tag_577\n      tag_399\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":12688:12791   */\n    tag_576:\n        /* \"#utility.yul\":12818:12819   */\n      0x01\n        /* \"#utility.yul\":12811:12816   */\n      dup3\n        /* \"#utility.yul\":12807:12820   */\n      add\n        /* \"#utility.yul\":12800:12820   */\n      swap1\n      pop\n        /* \"#utility.yul\":12593:12826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12832:13023   */\n    tag_200:\n        /* \"#utility.yul\":12872:12875   */\n      0x00\n        /* \"#utility.yul\":12891:12911   */\n      tag_579\n        /* \"#utility.yul\":12909:12910   */\n      dup3\n        /* \"#utility.yul\":12891:12911   */\n      tag_380\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":12886:12911   */\n      swap2\n      pop\n        /* \"#utility.yul\":12925:12945   */\n      tag_580\n        /* \"#utility.yul\":12943:12944   */\n      dup4\n        /* \"#utility.yul\":12925:12945   */\n      tag_380\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":12920:12945   */\n      swap3\n      pop\n        /* \"#utility.yul\":12968:12969   */\n      dup3\n        /* \"#utility.yul\":12965:12966   */\n      dup3\n        /* \"#utility.yul\":12961:12970   */\n      add\n        /* \"#utility.yul\":12954:12970   */\n      swap1\n      pop\n        /* \"#utility.yul\":12989:12992   */\n      dup1\n        /* \"#utility.yul\":12986:12987   */\n      dup3\n        /* \"#utility.yul\":12983:12993   */\n      gt\n        /* \"#utility.yul\":12980:13016   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":12996:13014   */\n      tag_582\n      tag_399\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":12980:13016   */\n    tag_581:\n        /* \"#utility.yul\":12832:13023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13029:13172   */\n    tag_409:\n        /* \"#utility.yul\":13086:13091   */\n      0x00\n        /* \"#utility.yul\":13117:13123   */\n      dup2\n        /* \"#utility.yul\":13111:13124   */\n      mload\n        /* \"#utility.yul\":13102:13124   */\n      swap1\n      pop\n        /* \"#utility.yul\":13133:13166   */\n      tag_584\n        /* \"#utility.yul\":13160:13165   */\n      dup2\n        /* \"#utility.yul\":13133:13166   */\n      tag_392\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":13029:13172   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13178:13529   */\n    tag_221:\n        /* \"#utility.yul\":13248:13254   */\n      0x00\n        /* \"#utility.yul\":13297:13299   */\n      0x20\n        /* \"#utility.yul\":13285:13294   */\n      dup3\n        /* \"#utility.yul\":13276:13283   */\n      dup5\n        /* \"#utility.yul\":13272:13295   */\n      sub\n        /* \"#utility.yul\":13268:13300   */\n      slt\n        /* \"#utility.yul\":13265:13384   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":13303:13382   */\n      tag_587\n      tag_374\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":13265:13384   */\n    tag_586:\n        /* \"#utility.yul\":13423:13424   */\n      0x00\n        /* \"#utility.yul\":13448:13512   */\n      tag_588\n        /* \"#utility.yul\":13504:13511   */\n      dup5\n        /* \"#utility.yul\":13495:13501   */\n      dup3\n        /* \"#utility.yul\":13484:13493   */\n      dup6\n        /* \"#utility.yul\":13480:13502   */\n      add\n        /* \"#utility.yul\":13448:13512   */\n      tag_409\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":13438:13512   */\n      swap2\n      pop\n        /* \"#utility.yul\":13394:13522   */\n      pop\n        /* \"#utility.yul\":13178:13529   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13535:13705   */\n    tag_410:\n        /* \"#utility.yul\":13675:13697   */\n      0x496e636f72726563742066656520616d6f756e74000000000000000000000000\n        /* \"#utility.yul\":13671:13672   */\n      0x00\n        /* \"#utility.yul\":13663:13669   */\n      dup3\n        /* \"#utility.yul\":13659:13673   */\n      add\n        /* \"#utility.yul\":13652:13698   */\n      mstore\n        /* \"#utility.yul\":13535:13705   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13711:14077   */\n    tag_411:\n        /* \"#utility.yul\":13853:13856   */\n      0x00\n        /* \"#utility.yul\":13874:13941   */\n      tag_591\n        /* \"#utility.yul\":13938:13940   */\n      0x14\n        /* \"#utility.yul\":13933:13936   */\n      dup4\n        /* \"#utility.yul\":13874:13941   */\n      tag_400\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":13867:13941   */\n      swap2\n      pop\n        /* \"#utility.yul\":13950:14043   */\n      tag_592\n        /* \"#utility.yul\":14039:14042   */\n      dup3\n        /* \"#utility.yul\":13950:14043   */\n      tag_410\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":14068:14070   */\n      0x20\n        /* \"#utility.yul\":14063:14066   */\n      dup3\n        /* \"#utility.yul\":14059:14071   */\n      add\n        /* \"#utility.yul\":14052:14071   */\n      swap1\n      pop\n        /* \"#utility.yul\":13711:14077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14083:14502   */\n    tag_225:\n        /* \"#utility.yul\":14249:14253   */\n      0x00\n        /* \"#utility.yul\":14287:14289   */\n      0x20\n        /* \"#utility.yul\":14276:14285   */\n      dup3\n        /* \"#utility.yul\":14272:14290   */\n      add\n        /* \"#utility.yul\":14264:14290   */\n      swap1\n      pop\n        /* \"#utility.yul\":14336:14345   */\n      dup2\n        /* \"#utility.yul\":14330:14334   */\n      dup2\n        /* \"#utility.yul\":14326:14346   */\n      sub\n        /* \"#utility.yul\":14322:14323   */\n      0x00\n        /* \"#utility.yul\":14311:14320   */\n      dup4\n        /* \"#utility.yul\":14307:14324   */\n      add\n        /* \"#utility.yul\":14300:14347   */\n      mstore\n        /* \"#utility.yul\":14364:14495   */\n      tag_594\n        /* \"#utility.yul\":14490:14494   */\n      dup2\n        /* \"#utility.yul\":14364:14495   */\n      tag_411\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":14356:14495   */\n      swap1\n      pop\n        /* \"#utility.yul\":14083:14502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14508:14684   */\n    tag_412:\n        /* \"#utility.yul\":14648:14676   */\n      0x4172726179206c656e6774687320646f206e6f74206d61746368000000000000\n        /* \"#utility.yul\":14644:14645   */\n      0x00\n        /* \"#utility.yul\":14636:14642   */\n      dup3\n        /* \"#utility.yul\":14632:14646   */\n      add\n        /* \"#utility.yul\":14625:14677   */\n      mstore\n        /* \"#utility.yul\":14508:14684   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14690:15056   */\n    tag_413:\n        /* \"#utility.yul\":14832:14835   */\n      0x00\n        /* \"#utility.yul\":14853:14920   */\n      tag_597\n        /* \"#utility.yul\":14917:14919   */\n      0x1a\n        /* \"#utility.yul\":14912:14915   */\n      dup4\n        /* \"#utility.yul\":14853:14920   */\n      tag_400\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":14846:14920   */\n      swap2\n      pop\n        /* \"#utility.yul\":14929:15022   */\n      tag_598\n        /* \"#utility.yul\":15018:15021   */\n      dup3\n        /* \"#utility.yul\":14929:15022   */\n      tag_412\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":15047:15049   */\n      0x20\n        /* \"#utility.yul\":15042:15045   */\n      dup3\n        /* \"#utility.yul\":15038:15050   */\n      add\n        /* \"#utility.yul\":15031:15050   */\n      swap1\n      pop\n        /* \"#utility.yul\":14690:15056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15062:15481   */\n    tag_237:\n        /* \"#utility.yul\":15228:15232   */\n      0x00\n        /* \"#utility.yul\":15266:15268   */\n      0x20\n        /* \"#utility.yul\":15255:15264   */\n      dup3\n        /* \"#utility.yul\":15251:15269   */\n      add\n        /* \"#utility.yul\":15243:15269   */\n      swap1\n      pop\n        /* \"#utility.yul\":15315:15324   */\n      dup2\n        /* \"#utility.yul\":15309:15313   */\n      dup2\n        /* \"#utility.yul\":15305:15325   */\n      sub\n        /* \"#utility.yul\":15301:15302   */\n      0x00\n        /* \"#utility.yul\":15290:15299   */\n      dup4\n        /* \"#utility.yul\":15286:15303   */\n      add\n        /* \"#utility.yul\":15279:15326   */\n      mstore\n        /* \"#utility.yul\":15343:15474   */\n      tag_600\n        /* \"#utility.yul\":15469:15473   */\n      dup2\n        /* \"#utility.yul\":15343:15474   */\n      tag_413\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":15335:15474   */\n      swap1\n      pop\n        /* \"#utility.yul\":15062:15481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15487:15667   */\n    tag_243:\n        /* \"#utility.yul\":15535:15612   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15532:15533   */\n      0x00\n        /* \"#utility.yul\":15525:15613   */\n      mstore\n        /* \"#utility.yul\":15632:15636   */\n      0x32\n        /* \"#utility.yul\":15629:15630   */\n      0x04\n        /* \"#utility.yul\":15622:15637   */\n      mstore\n        /* \"#utility.yul\":15656:15660   */\n      0x24\n        /* \"#utility.yul\":15653:15654   */\n      0x00\n        /* \"#utility.yul\":15646:15661   */\n      revert\n        /* \"#utility.yul\":15673:16083   */\n    tag_248:\n        /* \"#utility.yul\":15713:15720   */\n      0x00\n        /* \"#utility.yul\":15736:15756   */\n      tag_603\n        /* \"#utility.yul\":15754:15755   */\n      dup3\n        /* \"#utility.yul\":15736:15756   */\n      tag_380\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":15731:15756   */\n      swap2\n      pop\n        /* \"#utility.yul\":15770:15790   */\n      tag_604\n        /* \"#utility.yul\":15788:15789   */\n      dup4\n        /* \"#utility.yul\":15770:15790   */\n      tag_380\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":15765:15790   */\n      swap3\n      pop\n        /* \"#utility.yul\":15825:15826   */\n      dup3\n        /* \"#utility.yul\":15822:15823   */\n      dup3\n        /* \"#utility.yul\":15818:15827   */\n      mul\n        /* \"#utility.yul\":15847:15877   */\n      tag_605\n        /* \"#utility.yul\":15865:15876   */\n      dup2\n        /* \"#utility.yul\":15847:15877   */\n      tag_380\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":15836:15877   */\n      swap2\n      pop\n        /* \"#utility.yul\":16026:16027   */\n      dup3\n        /* \"#utility.yul\":16017:16024   */\n      dup3\n        /* \"#utility.yul\":16013:16028   */\n      div\n        /* \"#utility.yul\":16010:16011   */\n      dup5\n        /* \"#utility.yul\":16007:16029   */\n      eq\n        /* \"#utility.yul\":15987:15988   */\n      dup4\n        /* \"#utility.yul\":15980:15989   */\n      iszero\n        /* \"#utility.yul\":15960:16043   */\n      or\n        /* \"#utility.yul\":15937:16076   */\n      tag_606\n      jumpi\n        /* \"#utility.yul\":16056:16074   */\n      tag_607\n      tag_399\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":15937:16076   */\n    tag_606:\n        /* \"#utility.yul\":15721:16083   */\n      pop\n        /* \"#utility.yul\":15673:16083   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16089:16259   */\n    tag_414:\n        /* \"#utility.yul\":16229:16251   */\n      0x43616e6e6f74206265206120636f6e7472616374000000000000000000000000\n        /* \"#utility.yul\":16225:16226   */\n      0x00\n        /* \"#utility.yul\":16217:16223   */\n      dup3\n        /* \"#utility.yul\":16213:16227   */\n      add\n        /* \"#utility.yul\":16206:16252   */\n      mstore\n        /* \"#utility.yul\":16089:16259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16265:16631   */\n    tag_415:\n        /* \"#utility.yul\":16407:16410   */\n      0x00\n        /* \"#utility.yul\":16428:16495   */\n      tag_610\n        /* \"#utility.yul\":16492:16494   */\n      0x14\n        /* \"#utility.yul\":16487:16490   */\n      dup4\n        /* \"#utility.yul\":16428:16495   */\n      tag_400\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":16421:16495   */\n      swap2\n      pop\n        /* \"#utility.yul\":16504:16597   */\n      tag_611\n        /* \"#utility.yul\":16593:16596   */\n      dup3\n        /* \"#utility.yul\":16504:16597   */\n      tag_414\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":16622:16624   */\n      0x20\n        /* \"#utility.yul\":16617:16620   */\n      dup3\n        /* \"#utility.yul\":16613:16625   */\n      add\n        /* \"#utility.yul\":16606:16625   */\n      swap1\n      pop\n        /* \"#utility.yul\":16265:16631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16637:17056   */\n    tag_251:\n        /* \"#utility.yul\":16803:16807   */\n      0x00\n        /* \"#utility.yul\":16841:16843   */\n      0x20\n        /* \"#utility.yul\":16830:16839   */\n      dup3\n        /* \"#utility.yul\":16826:16844   */\n      add\n        /* \"#utility.yul\":16818:16844   */\n      swap1\n      pop\n        /* \"#utility.yul\":16890:16899   */\n      dup2\n        /* \"#utility.yul\":16884:16888   */\n      dup2\n        /* \"#utility.yul\":16880:16900   */\n      sub\n        /* \"#utility.yul\":16876:16877   */\n      0x00\n        /* \"#utility.yul\":16865:16874   */\n      dup4\n        /* \"#utility.yul\":16861:16878   */\n      add\n        /* \"#utility.yul\":16854:16901   */\n      mstore\n        /* \"#utility.yul\":16918:17049   */\n      tag_613\n        /* \"#utility.yul\":17044:17048   */\n      dup2\n        /* \"#utility.yul\":16918:17049   */\n      tag_415\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":16910:17049   */\n      swap1\n      pop\n        /* \"#utility.yul\":16637:17056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17062:17244   */\n    tag_416:\n        /* \"#utility.yul\":17202:17236   */\n      0x416c6c6f636174696f6e206578636565647320616c6c6f776564206c696d6974\n        /* \"#utility.yul\":17198:17199   */\n      0x00\n        /* \"#utility.yul\":17190:17196   */\n      dup3\n        /* \"#utility.yul\":17186:17200   */\n      add\n        /* \"#utility.yul\":17179:17237   */\n      mstore\n        /* \"#utility.yul\":17062:17244   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17250:17616   */\n    tag_417:\n        /* \"#utility.yul\":17392:17395   */\n      0x00\n        /* \"#utility.yul\":17413:17480   */\n      tag_616\n        /* \"#utility.yul\":17477:17479   */\n      0x20\n        /* \"#utility.yul\":17472:17475   */\n      dup4\n        /* \"#utility.yul\":17413:17480   */\n      tag_400\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":17406:17480   */\n      swap2\n      pop\n        /* \"#utility.yul\":17489:17582   */\n      tag_617\n        /* \"#utility.yul\":17578:17581   */\n      dup3\n        /* \"#utility.yul\":17489:17582   */\n      tag_416\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":17607:17609   */\n      0x20\n        /* \"#utility.yul\":17602:17605   */\n      dup3\n        /* \"#utility.yul\":17598:17610   */\n      add\n        /* \"#utility.yul\":17591:17610   */\n      swap1\n      pop\n        /* \"#utility.yul\":17250:17616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17622:18041   */\n    tag_255:\n        /* \"#utility.yul\":17788:17792   */\n      0x00\n        /* \"#utility.yul\":17826:17828   */\n      0x20\n        /* \"#utility.yul\":17815:17824   */\n      dup3\n        /* \"#utility.yul\":17811:17829   */\n      add\n        /* \"#utility.yul\":17803:17829   */\n      swap1\n      pop\n        /* \"#utility.yul\":17875:17884   */\n      dup2\n        /* \"#utility.yul\":17869:17873   */\n      dup2\n        /* \"#utility.yul\":17865:17885   */\n      sub\n        /* \"#utility.yul\":17861:17862   */\n      0x00\n        /* \"#utility.yul\":17850:17859   */\n      dup4\n        /* \"#utility.yul\":17846:17863   */\n      add\n        /* \"#utility.yul\":17839:17886   */\n      mstore\n        /* \"#utility.yul\":17903:18034   */\n      tag_619\n        /* \"#utility.yul\":18029:18033   */\n      dup2\n        /* \"#utility.yul\":17903:18034   */\n      tag_417\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":17895:18034   */\n      swap1\n      pop\n        /* \"#utility.yul\":17622:18041   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18047:18379   */\n    tag_261:\n        /* \"#utility.yul\":18168:18172   */\n      0x00\n        /* \"#utility.yul\":18206:18208   */\n      0x40\n        /* \"#utility.yul\":18195:18204   */\n      dup3\n        /* \"#utility.yul\":18191:18209   */\n      add\n        /* \"#utility.yul\":18183:18209   */\n      swap1\n      pop\n        /* \"#utility.yul\":18219:18290   */\n      tag_621\n        /* \"#utility.yul\":18287:18288   */\n      0x00\n        /* \"#utility.yul\":18276:18285   */\n      dup4\n        /* \"#utility.yul\":18272:18289   */\n      add\n        /* \"#utility.yul\":18263:18269   */\n      dup6\n        /* \"#utility.yul\":18219:18290   */\n      tag_381\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":18300:18372   */\n      tag_622\n        /* \"#utility.yul\":18368:18370   */\n      0x20\n        /* \"#utility.yul\":18357:18366   */\n      dup4\n        /* \"#utility.yul\":18353:18371   */\n      add\n        /* \"#utility.yul\":18344:18350   */\n      dup5\n        /* \"#utility.yul\":18300:18372   */\n      tag_381\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":18047:18379   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18385:18616   */\n    tag_418:\n        /* \"#utility.yul\":18525:18559   */\n      0x496e73756666696369656e7420636f6e74726163742062616c616e636520666f\n        /* \"#utility.yul\":18521:18522   */\n      0x00\n        /* \"#utility.yul\":18513:18519   */\n      dup3\n        /* \"#utility.yul\":18509:18523   */\n      add\n        /* \"#utility.yul\":18502:18560   */\n      mstore\n        /* \"#utility.yul\":18594:18608   */\n      0x7220616c6c6f636174696f6e0000000000000000000000000000000000000000\n        /* \"#utility.yul\":18589:18591   */\n      0x20\n        /* \"#utility.yul\":18581:18587   */\n      dup3\n        /* \"#utility.yul\":18577:18592   */\n      add\n        /* \"#utility.yul\":18570:18609   */\n      mstore\n        /* \"#utility.yul\":18385:18616   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18622:18988   */\n    tag_419:\n        /* \"#utility.yul\":18764:18767   */\n      0x00\n        /* \"#utility.yul\":18785:18852   */\n      tag_625\n        /* \"#utility.yul\":18849:18851   */\n      0x2c\n        /* \"#utility.yul\":18844:18847   */\n      dup4\n        /* \"#utility.yul\":18785:18852   */\n      tag_400\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":18778:18852   */\n      swap2\n      pop\n        /* \"#utility.yul\":18861:18954   */\n      tag_626\n        /* \"#utility.yul\":18950:18953   */\n      dup3\n        /* \"#utility.yul\":18861:18954   */\n      tag_418\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":18979:18981   */\n      0x40\n        /* \"#utility.yul\":18974:18977   */\n      dup3\n        /* \"#utility.yul\":18970:18982   */\n      add\n        /* \"#utility.yul\":18963:18982   */\n      swap1\n      pop\n        /* \"#utility.yul\":18622:18988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18994:19413   */\n    tag_267:\n        /* \"#utility.yul\":19160:19164   */\n      0x00\n        /* \"#utility.yul\":19198:19200   */\n      0x20\n        /* \"#utility.yul\":19187:19196   */\n      dup3\n        /* \"#utility.yul\":19183:19201   */\n      add\n        /* \"#utility.yul\":19175:19201   */\n      swap1\n      pop\n        /* \"#utility.yul\":19247:19256   */\n      dup2\n        /* \"#utility.yul\":19241:19245   */\n      dup2\n        /* \"#utility.yul\":19237:19257   */\n      sub\n        /* \"#utility.yul\":19233:19234   */\n      0x00\n        /* \"#utility.yul\":19222:19231   */\n      dup4\n        /* \"#utility.yul\":19218:19235   */\n      add\n        /* \"#utility.yul\":19211:19258   */\n      mstore\n        /* \"#utility.yul\":19275:19406   */\n      tag_628\n        /* \"#utility.yul\":19401:19405   */\n      dup2\n        /* \"#utility.yul\":19275:19406   */\n      tag_419\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":19267:19406   */\n      swap1\n      pop\n        /* \"#utility.yul\":18994:19413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19419:19603   */\n    tag_420:\n        /* \"#utility.yul\":19518:19529   */\n      0x00\n        /* \"#utility.yul\":19552:19558   */\n      dup3\n        /* \"#utility.yul\":19547:19550   */\n      dup3\n        /* \"#utility.yul\":19540:19559   */\n      mstore\n        /* \"#utility.yul\":19592:19596   */\n      0x20\n        /* \"#utility.yul\":19587:19590   */\n      dup3\n        /* \"#utility.yul\":19583:19597   */\n      add\n        /* \"#utility.yul\":19568:19597   */\n      swap1\n      pop\n        /* \"#utility.yul\":19419:19603   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19609:19711   */\n    tag_421:\n        /* \"#utility.yul\":19678:19682   */\n      0x00\n        /* \"#utility.yul\":19701:19704   */\n      dup2\n        /* \"#utility.yul\":19693:19704   */\n      swap1\n      pop\n        /* \"#utility.yul\":19609:19711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19717:19825   */\n    tag_422:\n        /* \"#utility.yul\":19794:19818   */\n      tag_632\n        /* \"#utility.yul\":19812:19817   */\n      dup2\n        /* \"#utility.yul\":19794:19818   */\n      tag_377\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":19789:19792   */\n      dup3\n        /* \"#utility.yul\":19782:19819   */\n      mstore\n        /* \"#utility.yul\":19717:19825   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19831:20010   */\n    tag_423:\n        /* \"#utility.yul\":19900:19910   */\n      0x00\n        /* \"#utility.yul\":19921:19967   */\n      tag_634\n        /* \"#utility.yul\":19963:19966   */\n      dup4\n        /* \"#utility.yul\":19955:19961   */\n      dup4\n        /* \"#utility.yul\":19921:19967   */\n      tag_422\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":19999:20003   */\n      0x20\n        /* \"#utility.yul\":19994:19997   */\n      dup4\n        /* \"#utility.yul\":19990:20004   */\n      add\n        /* \"#utility.yul\":19976:20004   */\n      swap1\n      pop\n        /* \"#utility.yul\":19831:20010   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20016:20138   */\n    tag_424:\n        /* \"#utility.yul\":20068:20073   */\n      0x00\n        /* \"#utility.yul\":20093:20132   */\n      tag_636\n        /* \"#utility.yul\":20128:20130   */\n      0x20\n        /* \"#utility.yul\":20123:20126   */\n      dup5\n        /* \"#utility.yul\":20119:20131   */\n      add\n        /* \"#utility.yul\":20114:20117   */\n      dup5\n        /* \"#utility.yul\":20093:20132   */\n      tag_379\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":20084:20132   */\n      swap1\n      pop\n        /* \"#utility.yul\":20016:20138   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20144:20259   */\n    tag_425:\n        /* \"#utility.yul\":20216:20220   */\n      0x00\n        /* \"#utility.yul\":20248:20252   */\n      0x20\n        /* \"#utility.yul\":20243:20246   */\n      dup3\n        /* \"#utility.yul\":20239:20253   */\n      add\n        /* \"#utility.yul\":20231:20253   */\n      swap1\n      pop\n        /* \"#utility.yul\":20144:20259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20295:20994   */\n    tag_426:\n        /* \"#utility.yul\":20424:20427   */\n      0x00\n        /* \"#utility.yul\":20447:20533   */\n      tag_639\n        /* \"#utility.yul\":20526:20532   */\n      dup4\n        /* \"#utility.yul\":20521:20524   */\n      dup6\n        /* \"#utility.yul\":20447:20533   */\n      tag_420\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":20440:20533   */\n      swap4\n      pop\n        /* \"#utility.yul\":20557:20615   */\n      tag_640\n        /* \"#utility.yul\":20609:20614   */\n      dup3\n        /* \"#utility.yul\":20557:20615   */\n      tag_421\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":20638:20645   */\n      dup1\n        /* \"#utility.yul\":20669:20670   */\n      0x00\n        /* \"#utility.yul\":20654:20969   */\n    tag_641:\n        /* \"#utility.yul\":20679:20685   */\n      dup6\n        /* \"#utility.yul\":20676:20677   */\n      dup2\n        /* \"#utility.yul\":20673:20686   */\n      lt\n        /* \"#utility.yul\":20654:20969   */\n      iszero\n      tag_643\n      jumpi\n        /* \"#utility.yul\":20749:20791   */\n      tag_644\n        /* \"#utility.yul\":20784:20790   */\n      dup3\n        /* \"#utility.yul\":20775:20782   */\n      dup5\n        /* \"#utility.yul\":20749:20791   */\n      tag_424\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":20811:20874   */\n      tag_645\n        /* \"#utility.yul\":20870:20873   */\n      dup9\n        /* \"#utility.yul\":20855:20868   */\n      dup3\n        /* \"#utility.yul\":20811:20874   */\n      tag_423\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":20804:20874   */\n      swap8\n      pop\n        /* \"#utility.yul\":20897:20959   */\n      tag_646\n        /* \"#utility.yul\":20952:20958   */\n      dup4\n        /* \"#utility.yul\":20897:20959   */\n      tag_425\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":20887:20959   */\n      swap3\n      pop\n        /* \"#utility.yul\":20714:20969   */\n      pop\n        /* \"#utility.yul\":20701:20702   */\n      0x01\n        /* \"#utility.yul\":20698:20699   */\n      dup2\n        /* \"#utility.yul\":20694:20703   */\n      add\n        /* \"#utility.yul\":20689:20703   */\n      swap1\n      pop\n        /* \"#utility.yul\":20654:20969   */\n      jump(tag_641)\n    tag_643:\n        /* \"#utility.yul\":20658:20672   */\n      pop\n        /* \"#utility.yul\":20985:20988   */\n      dup6\n        /* \"#utility.yul\":20978:20988   */\n      swap3\n      pop\n        /* \"#utility.yul\":20429:20994   */\n      pop\n      pop\n        /* \"#utility.yul\":20295:20994   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21000:21184   */\n    tag_427:\n        /* \"#utility.yul\":21099:21110   */\n      0x00\n        /* \"#utility.yul\":21133:21139   */\n      dup3\n        /* \"#utility.yul\":21128:21131   */\n      dup3\n        /* \"#utility.yul\":21121:21140   */\n      mstore\n        /* \"#utility.yul\":21173:21177   */\n      0x20\n        /* \"#utility.yul\":21168:21171   */\n      dup3\n        /* \"#utility.yul\":21164:21178   */\n      add\n        /* \"#utility.yul\":21149:21178   */\n      swap1\n      pop\n        /* \"#utility.yul\":21000:21184   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21190:21307   */\n    tag_428:\n        /* \"#utility.yul\":21299:21300   */\n      0x00\n        /* \"#utility.yul\":21296:21297   */\n      dup1\n        /* \"#utility.yul\":21289:21301   */\n      revert\n        /* \"#utility.yul\":21313:21411   */\n    tag_429:\n        /* \"#utility.yul\":21397:21403   */\n      dup3\n        /* \"#utility.yul\":21392:21395   */\n      dup2\n        /* \"#utility.yul\":21387:21390   */\n      dup4\n        /* \"#utility.yul\":21374:21404   */\n      calldatacopy\n        /* \"#utility.yul\":21313:21411   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21447:21984   */\n    tag_430:\n        /* \"#utility.yul\":21575:21578   */\n      0x00\n        /* \"#utility.yul\":21596:21682   */\n      tag_651\n        /* \"#utility.yul\":21675:21681   */\n      dup4\n        /* \"#utility.yul\":21670:21673   */\n      dup6\n        /* \"#utility.yul\":21596:21682   */\n      tag_427\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":21589:21682   */\n      swap4\n      pop\n        /* \"#utility.yul\":21706:21772   */\n      0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21698:21704   */\n      dup4\n        /* \"#utility.yul\":21695:21773   */\n      gt\n        /* \"#utility.yul\":21692:21857   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":21776:21855   */\n      tag_653\n      tag_428\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":21692:21857   */\n    tag_652:\n        /* \"#utility.yul\":21888:21892   */\n      0x20\n        /* \"#utility.yul\":21880:21886   */\n      dup4\n        /* \"#utility.yul\":21876:21893   */\n      mul\n        /* \"#utility.yul\":21866:21893   */\n      swap3\n      pop\n        /* \"#utility.yul\":21903:21946   */\n      tag_654\n        /* \"#utility.yul\":21939:21945   */\n      dup4\n        /* \"#utility.yul\":21934:21937   */\n      dup6\n        /* \"#utility.yul\":21927:21932   */\n      dup5\n        /* \"#utility.yul\":21903:21946   */\n      tag_429\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":21971:21977   */\n      dup3\n        /* \"#utility.yul\":21966:21969   */\n      dup5\n        /* \"#utility.yul\":21962:21978   */\n      add\n        /* \"#utility.yul\":21955:21978   */\n      swap1\n      pop\n        /* \"#utility.yul\":21447:21984   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21990:22664   */\n    tag_270:\n        /* \"#utility.yul\":22231:22235   */\n      0x00\n        /* \"#utility.yul\":22269:22271   */\n      0x40\n        /* \"#utility.yul\":22258:22267   */\n      dup3\n        /* \"#utility.yul\":22254:22272   */\n      add\n        /* \"#utility.yul\":22246:22272   */\n      swap1\n      pop\n        /* \"#utility.yul\":22318:22327   */\n      dup2\n        /* \"#utility.yul\":22312:22316   */\n      dup2\n        /* \"#utility.yul\":22308:22328   */\n      sub\n        /* \"#utility.yul\":22304:22305   */\n      0x00\n        /* \"#utility.yul\":22293:22302   */\n      dup4\n        /* \"#utility.yul\":22289:22306   */\n      add\n        /* \"#utility.yul\":22282:22329   */\n      mstore\n        /* \"#utility.yul\":22346:22464   */\n      tag_656\n        /* \"#utility.yul\":22459:22463   */\n      dup2\n        /* \"#utility.yul\":22450:22456   */\n      dup7\n        /* \"#utility.yul\":22442:22448   */\n      dup9\n        /* \"#utility.yul\":22346:22464   */\n      tag_426\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":22338:22464   */\n      swap1\n      pop\n        /* \"#utility.yul\":22511:22520   */\n      dup2\n        /* \"#utility.yul\":22505:22509   */\n      dup2\n        /* \"#utility.yul\":22501:22521   */\n      sub\n        /* \"#utility.yul\":22496:22498   */\n      0x20\n        /* \"#utility.yul\":22485:22494   */\n      dup4\n        /* \"#utility.yul\":22481:22499   */\n      add\n        /* \"#utility.yul\":22474:22522   */\n      mstore\n        /* \"#utility.yul\":22539:22657   */\n      tag_657\n        /* \"#utility.yul\":22652:22656   */\n      dup2\n        /* \"#utility.yul\":22643:22649   */\n      dup5\n        /* \"#utility.yul\":22635:22641   */\n      dup7\n        /* \"#utility.yul\":22539:22657   */\n      tag_430\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":22531:22657   */\n      swap1\n      pop\n        /* \"#utility.yul\":21990:22664   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22670:22843   */\n    tag_431:\n        /* \"#utility.yul\":22810:22835   */\n      0x436f6e747261637420686173206e6f2062616c616e6365000000000000000000\n        /* \"#utility.yul\":22806:22807   */\n      0x00\n        /* \"#utility.yul\":22798:22804   */\n      dup3\n        /* \"#utility.yul\":22794:22808   */\n      add\n        /* \"#utility.yul\":22787:22836   */\n      mstore\n        /* \"#utility.yul\":22670:22843   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22849:23215   */\n    tag_432:\n        /* \"#utility.yul\":22991:22994   */\n      0x00\n        /* \"#utility.yul\":23012:23079   */\n      tag_660\n        /* \"#utility.yul\":23076:23078   */\n      0x17\n        /* \"#utility.yul\":23071:23074   */\n      dup4\n        /* \"#utility.yul\":23012:23079   */\n      tag_400\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":23005:23079   */\n      swap2\n      pop\n        /* \"#utility.yul\":23088:23181   */\n      tag_661\n        /* \"#utility.yul\":23177:23180   */\n      dup3\n        /* \"#utility.yul\":23088:23181   */\n      tag_431\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":23206:23208   */\n      0x20\n        /* \"#utility.yul\":23201:23204   */\n      dup3\n        /* \"#utility.yul\":23197:23209   */\n      add\n        /* \"#utility.yul\":23190:23209   */\n      swap1\n      pop\n        /* \"#utility.yul\":22849:23215   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23221:23640   */\n    tag_282:\n        /* \"#utility.yul\":23387:23391   */\n      0x00\n        /* \"#utility.yul\":23425:23427   */\n      0x20\n        /* \"#utility.yul\":23414:23423   */\n      dup3\n        /* \"#utility.yul\":23410:23428   */\n      add\n        /* \"#utility.yul\":23402:23428   */\n      swap1\n      pop\n        /* \"#utility.yul\":23474:23483   */\n      dup2\n        /* \"#utility.yul\":23468:23472   */\n      dup2\n        /* \"#utility.yul\":23464:23484   */\n      sub\n        /* \"#utility.yul\":23460:23461   */\n      0x00\n        /* \"#utility.yul\":23449:23458   */\n      dup4\n        /* \"#utility.yul\":23445:23462   */\n      add\n        /* \"#utility.yul\":23438:23485   */\n      mstore\n        /* \"#utility.yul\":23502:23633   */\n      tag_663\n        /* \"#utility.yul\":23628:23632   */\n      dup2\n        /* \"#utility.yul\":23502:23633   */\n      tag_432\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":23494:23633   */\n      swap1\n      pop\n        /* \"#utility.yul\":23221:23640   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23646:23816   */\n    tag_433:\n        /* \"#utility.yul\":23786:23808   */\n      0x436f6f6c646f776e20696e2070726f6772657373000000000000000000000000\n        /* \"#utility.yul\":23782:23783   */\n      0x00\n        /* \"#utility.yul\":23774:23780   */\n      dup3\n        /* \"#utility.yul\":23770:23784   */\n      add\n        /* \"#utility.yul\":23763:23809   */\n      mstore\n        /* \"#utility.yul\":23646:23816   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23822:24188   */\n    tag_434:\n        /* \"#utility.yul\":23964:23967   */\n      0x00\n        /* \"#utility.yul\":23985:24052   */\n      tag_666\n        /* \"#utility.yul\":24049:24051   */\n      0x14\n        /* \"#utility.yul\":24044:24047   */\n      dup4\n        /* \"#utility.yul\":23985:24052   */\n      tag_400\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":23978:24052   */\n      swap2\n      pop\n        /* \"#utility.yul\":24061:24154   */\n      tag_667\n        /* \"#utility.yul\":24150:24153   */\n      dup3\n        /* \"#utility.yul\":24061:24154   */\n      tag_433\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":24179:24181   */\n      0x20\n        /* \"#utility.yul\":24174:24177   */\n      dup3\n        /* \"#utility.yul\":24170:24182   */\n      add\n        /* \"#utility.yul\":24163:24182   */\n      swap1\n      pop\n        /* \"#utility.yul\":23822:24188   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24194:24613   */\n    tag_286:\n        /* \"#utility.yul\":24360:24364   */\n      0x00\n        /* \"#utility.yul\":24398:24400   */\n      0x20\n        /* \"#utility.yul\":24387:24396   */\n      dup3\n        /* \"#utility.yul\":24383:24401   */\n      add\n        /* \"#utility.yul\":24375:24401   */\n      swap1\n      pop\n        /* \"#utility.yul\":24447:24456   */\n      dup2\n        /* \"#utility.yul\":24441:24445   */\n      dup2\n        /* \"#utility.yul\":24437:24457   */\n      sub\n        /* \"#utility.yul\":24433:24434   */\n      0x00\n        /* \"#utility.yul\":24422:24431   */\n      dup4\n        /* \"#utility.yul\":24418:24435   */\n      add\n        /* \"#utility.yul\":24411:24458   */\n      mstore\n        /* \"#utility.yul\":24475:24606   */\n      tag_669\n        /* \"#utility.yul\":24601:24605   */\n      dup2\n        /* \"#utility.yul\":24475:24606   */\n      tag_434\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":24467:24606   */\n      swap1\n      pop\n        /* \"#utility.yul\":24194:24613   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24619:24839   */\n    tag_435:\n        /* \"#utility.yul\":24759:24793   */\n      0x4e6f20756e616c6c6f636174656420746f6b656e7320746f2077697468647261\n        /* \"#utility.yul\":24755:24756   */\n      0x00\n        /* \"#utility.yul\":24747:24753   */\n      dup3\n        /* \"#utility.yul\":24743:24757   */\n      add\n        /* \"#utility.yul\":24736:24794   */\n      mstore\n        /* \"#utility.yul\":24828:24831   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24823:24825   */\n      0x20\n        /* \"#utility.yul\":24815:24821   */\n      dup3\n        /* \"#utility.yul\":24811:24826   */\n      add\n        /* \"#utility.yul\":24804:24832   */\n      mstore\n        /* \"#utility.yul\":24619:24839   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24845:25211   */\n    tag_436:\n        /* \"#utility.yul\":24987:24990   */\n      0x00\n        /* \"#utility.yul\":25008:25075   */\n      tag_672\n        /* \"#utility.yul\":25072:25074   */\n      0x21\n        /* \"#utility.yul\":25067:25070   */\n      dup4\n        /* \"#utility.yul\":25008:25075   */\n      tag_400\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":25001:25075   */\n      swap2\n      pop\n        /* \"#utility.yul\":25084:25177   */\n      tag_673\n        /* \"#utility.yul\":25173:25176   */\n      dup3\n        /* \"#utility.yul\":25084:25177   */\n      tag_435\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":25202:25204   */\n      0x40\n        /* \"#utility.yul\":25197:25200   */\n      dup3\n        /* \"#utility.yul\":25193:25205   */\n      add\n        /* \"#utility.yul\":25186:25205   */\n      swap1\n      pop\n        /* \"#utility.yul\":24845:25211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25217:25636   */\n    tag_300:\n        /* \"#utility.yul\":25383:25387   */\n      0x00\n        /* \"#utility.yul\":25421:25423   */\n      0x20\n        /* \"#utility.yul\":25410:25419   */\n      dup3\n        /* \"#utility.yul\":25406:25424   */\n      add\n        /* \"#utility.yul\":25398:25424   */\n      swap1\n      pop\n        /* \"#utility.yul\":25470:25479   */\n      dup2\n        /* \"#utility.yul\":25464:25468   */\n      dup2\n        /* \"#utility.yul\":25460:25480   */\n      sub\n        /* \"#utility.yul\":25456:25457   */\n      0x00\n        /* \"#utility.yul\":25445:25454   */\n      dup4\n        /* \"#utility.yul\":25441:25458   */\n      add\n        /* \"#utility.yul\":25434:25481   */\n      mstore\n        /* \"#utility.yul\":25498:25629   */\n      tag_675\n        /* \"#utility.yul\":25624:25628   */\n      dup2\n        /* \"#utility.yul\":25498:25629   */\n      tag_436\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":25490:25629   */\n      swap1\n      pop\n        /* \"#utility.yul\":25217:25636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25642:25869   */\n    tag_437:\n        /* \"#utility.yul\":25782:25816   */\n      0x4465706f73697420616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":25778:25779   */\n      0x00\n        /* \"#utility.yul\":25770:25776   */\n      dup3\n        /* \"#utility.yul\":25766:25780   */\n      add\n        /* \"#utility.yul\":25759:25817   */\n      mstore\n        /* \"#utility.yul\":25851:25861   */\n      0x68616e207a65726f000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25846:25848   */\n      0x20\n        /* \"#utility.yul\":25838:25844   */\n      dup3\n        /* \"#utility.yul\":25834:25849   */\n      add\n        /* \"#utility.yul\":25827:25862   */\n      mstore\n        /* \"#utility.yul\":25642:25869   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25875:26241   */\n    tag_438:\n        /* \"#utility.yul\":26017:26020   */\n      0x00\n        /* \"#utility.yul\":26038:26105   */\n      tag_678\n        /* \"#utility.yul\":26102:26104   */\n      0x28\n        /* \"#utility.yul\":26097:26100   */\n      dup4\n        /* \"#utility.yul\":26038:26105   */\n      tag_400\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":26031:26105   */\n      swap2\n      pop\n        /* \"#utility.yul\":26114:26207   */\n      tag_679\n        /* \"#utility.yul\":26203:26206   */\n      dup3\n        /* \"#utility.yul\":26114:26207   */\n      tag_437\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":26232:26234   */\n      0x40\n        /* \"#utility.yul\":26227:26230   */\n      dup3\n        /* \"#utility.yul\":26223:26235   */\n      add\n        /* \"#utility.yul\":26216:26235   */\n      swap1\n      pop\n        /* \"#utility.yul\":25875:26241   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26247:26666   */\n    tag_314:\n        /* \"#utility.yul\":26413:26417   */\n      0x00\n        /* \"#utility.yul\":26451:26453   */\n      0x20\n        /* \"#utility.yul\":26440:26449   */\n      dup3\n        /* \"#utility.yul\":26436:26454   */\n      add\n        /* \"#utility.yul\":26428:26454   */\n      swap1\n      pop\n        /* \"#utility.yul\":26500:26509   */\n      dup2\n        /* \"#utility.yul\":26494:26498   */\n      dup2\n        /* \"#utility.yul\":26490:26510   */\n      sub\n        /* \"#utility.yul\":26486:26487   */\n      0x00\n        /* \"#utility.yul\":26475:26484   */\n      dup4\n        /* \"#utility.yul\":26471:26488   */\n      add\n        /* \"#utility.yul\":26464:26511   */\n      mstore\n        /* \"#utility.yul\":26528:26659   */\n      tag_681\n        /* \"#utility.yul\":26654:26658   */\n      dup2\n        /* \"#utility.yul\":26528:26659   */\n      tag_438\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":26520:26659   */\n      swap1\n      pop\n        /* \"#utility.yul\":26247:26666   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26672:26842   */\n    tag_439:\n        /* \"#utility.yul\":26812:26834   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":26808:26809   */\n      0x00\n        /* \"#utility.yul\":26800:26806   */\n      dup3\n        /* \"#utility.yul\":26796:26810   */\n      add\n        /* \"#utility.yul\":26789:26835   */\n      mstore\n        /* \"#utility.yul\":26672:26842   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26848:27214   */\n    tag_440:\n        /* \"#utility.yul\":26990:26993   */\n      0x00\n        /* \"#utility.yul\":27011:27078   */\n      tag_684\n        /* \"#utility.yul\":27075:27077   */\n      0x14\n        /* \"#utility.yul\":27070:27073   */\n      dup4\n        /* \"#utility.yul\":27011:27078   */\n      tag_400\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":27004:27078   */\n      swap2\n      pop\n        /* \"#utility.yul\":27087:27180   */\n      tag_685\n        /* \"#utility.yul\":27176:27179   */\n      dup3\n        /* \"#utility.yul\":27087:27180   */\n      tag_439\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":27205:27207   */\n      0x20\n        /* \"#utility.yul\":27200:27203   */\n      dup3\n        /* \"#utility.yul\":27196:27208   */\n      add\n        /* \"#utility.yul\":27189:27208   */\n      swap1\n      pop\n        /* \"#utility.yul\":26848:27214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27220:27639   */\n    tag_321:\n        /* \"#utility.yul\":27386:27390   */\n      0x00\n        /* \"#utility.yul\":27424:27426   */\n      0x20\n        /* \"#utility.yul\":27413:27422   */\n      dup3\n        /* \"#utility.yul\":27409:27427   */\n      add\n        /* \"#utility.yul\":27401:27427   */\n      swap1\n      pop\n        /* \"#utility.yul\":27473:27482   */\n      dup2\n        /* \"#utility.yul\":27467:27471   */\n      dup2\n        /* \"#utility.yul\":27463:27483   */\n      sub\n        /* \"#utility.yul\":27459:27460   */\n      0x00\n        /* \"#utility.yul\":27448:27457   */\n      dup4\n        /* \"#utility.yul\":27444:27461   */\n      add\n        /* \"#utility.yul\":27437:27484   */\n      mstore\n        /* \"#utility.yul\":27501:27632   */\n      tag_687\n        /* \"#utility.yul\":27627:27631   */\n      dup2\n        /* \"#utility.yul\":27501:27632   */\n      tag_440\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":27493:27632   */\n      swap1\n      pop\n        /* \"#utility.yul\":27220:27639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27645:27814   */\n    tag_441:\n        /* \"#utility.yul\":27785:27806   */\n      0x4e6f206665657320746f20776974686472617700000000000000000000000000\n        /* \"#utility.yul\":27781:27782   */\n      0x00\n        /* \"#utility.yul\":27773:27779   */\n      dup3\n        /* \"#utility.yul\":27769:27783   */\n      add\n        /* \"#utility.yul\":27762:27807   */\n      mstore\n        /* \"#utility.yul\":27645:27814   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27820:28186   */\n    tag_442:\n        /* \"#utility.yul\":27962:27965   */\n      0x00\n        /* \"#utility.yul\":27983:28050   */\n      tag_690\n        /* \"#utility.yul\":28047:28049   */\n      0x13\n        /* \"#utility.yul\":28042:28045   */\n      dup4\n        /* \"#utility.yul\":27983:28050   */\n      tag_400\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":27976:28050   */\n      swap2\n      pop\n        /* \"#utility.yul\":28059:28152   */\n      tag_691\n        /* \"#utility.yul\":28148:28151   */\n      dup3\n        /* \"#utility.yul\":28059:28152   */\n      tag_441\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":28177:28179   */\n      0x20\n        /* \"#utility.yul\":28172:28175   */\n      dup3\n        /* \"#utility.yul\":28168:28180   */\n      add\n        /* \"#utility.yul\":28161:28180   */\n      swap1\n      pop\n        /* \"#utility.yul\":27820:28186   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28192:28611   */\n    tag_330:\n        /* \"#utility.yul\":28358:28362   */\n      0x00\n        /* \"#utility.yul\":28396:28398   */\n      0x20\n        /* \"#utility.yul\":28385:28394   */\n      dup3\n        /* \"#utility.yul\":28381:28399   */\n      add\n        /* \"#utility.yul\":28373:28399   */\n      swap1\n      pop\n        /* \"#utility.yul\":28445:28454   */\n      dup2\n        /* \"#utility.yul\":28439:28443   */\n      dup2\n        /* \"#utility.yul\":28435:28455   */\n      sub\n        /* \"#utility.yul\":28431:28432   */\n      0x00\n        /* \"#utility.yul\":28420:28429   */\n      dup4\n        /* \"#utility.yul\":28416:28433   */\n      add\n        /* \"#utility.yul\":28409:28456   */\n      mstore\n        /* \"#utility.yul\":28473:28604   */\n      tag_693\n        /* \"#utility.yul\":28599:28603   */\n      dup2\n        /* \"#utility.yul\":28473:28604   */\n      tag_442\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":28465:28604   */\n      swap1\n      pop\n        /* \"#utility.yul\":28192:28611   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28617:28798   */\n    tag_443:\n        /* \"#utility.yul\":28757:28790   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":28753:28754   */\n      0x00\n        /* \"#utility.yul\":28745:28751   */\n      dup3\n        /* \"#utility.yul\":28741:28755   */\n      add\n        /* \"#utility.yul\":28734:28791   */\n      mstore\n        /* \"#utility.yul\":28617:28798   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28804:29170   */\n    tag_444:\n        /* \"#utility.yul\":28946:28949   */\n      0x00\n        /* \"#utility.yul\":28967:29034   */\n      tag_696\n        /* \"#utility.yul\":29031:29033   */\n      0x1f\n        /* \"#utility.yul\":29026:29029   */\n      dup4\n        /* \"#utility.yul\":28967:29034   */\n      tag_400\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":28960:29034   */\n      swap2\n      pop\n        /* \"#utility.yul\":29043:29136   */\n      tag_697\n        /* \"#utility.yul\":29132:29135   */\n      dup3\n        /* \"#utility.yul\":29043:29136   */\n      tag_443\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":29161:29163   */\n      0x20\n        /* \"#utility.yul\":29156:29159   */\n      dup3\n        /* \"#utility.yul\":29152:29164   */\n      add\n        /* \"#utility.yul\":29145:29164   */\n      swap1\n      pop\n        /* \"#utility.yul\":28804:29170   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29176:29595   */\n    tag_354:\n        /* \"#utility.yul\":29342:29346   */\n      0x00\n        /* \"#utility.yul\":29380:29382   */\n      0x20\n        /* \"#utility.yul\":29369:29378   */\n      dup3\n        /* \"#utility.yul\":29365:29383   */\n      add\n        /* \"#utility.yul\":29357:29383   */\n      swap1\n      pop\n        /* \"#utility.yul\":29429:29438   */\n      dup2\n        /* \"#utility.yul\":29423:29427   */\n      dup2\n        /* \"#utility.yul\":29419:29439   */\n      sub\n        /* \"#utility.yul\":29415:29416   */\n      0x00\n        /* \"#utility.yul\":29404:29413   */\n      dup4\n        /* \"#utility.yul\":29400:29417   */\n      add\n        /* \"#utility.yul\":29393:29440   */\n      mstore\n        /* \"#utility.yul\":29457:29588   */\n      tag_699\n        /* \"#utility.yul\":29583:29587   */\n      dup2\n        /* \"#utility.yul\":29457:29588   */\n      tag_444\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":29449:29588   */\n      swap1\n      pop\n        /* \"#utility.yul\":29176:29595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29601:29933   */\n    tag_358:\n        /* \"#utility.yul\":29722:29726   */\n      0x00\n        /* \"#utility.yul\":29760:29762   */\n      0x40\n        /* \"#utility.yul\":29749:29758   */\n      dup3\n        /* \"#utility.yul\":29745:29763   */\n      add\n        /* \"#utility.yul\":29737:29763   */\n      swap1\n      pop\n        /* \"#utility.yul\":29773:29844   */\n      tag_701\n        /* \"#utility.yul\":29841:29842   */\n      0x00\n        /* \"#utility.yul\":29830:29839   */\n      dup4\n        /* \"#utility.yul\":29826:29843   */\n      add\n        /* \"#utility.yul\":29817:29823   */\n      dup6\n        /* \"#utility.yul\":29773:29844   */\n      tag_386\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":29854:29926   */\n      tag_702\n        /* \"#utility.yul\":29922:29924   */\n      0x20\n        /* \"#utility.yul\":29911:29920   */\n      dup4\n        /* \"#utility.yul\":29907:29925   */\n      add\n        /* \"#utility.yul\":29898:29904   */\n      dup5\n        /* \"#utility.yul\":29854:29926   */\n      tag_381\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":29601:29933   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29939:30381   */\n    tag_365:\n        /* \"#utility.yul\":30088:30092   */\n      0x00\n        /* \"#utility.yul\":30126:30128   */\n      0x60\n        /* \"#utility.yul\":30115:30124   */\n      dup3\n        /* \"#utility.yul\":30111:30129   */\n      add\n        /* \"#utility.yul\":30103:30129   */\n      swap1\n      pop\n        /* \"#utility.yul\":30139:30210   */\n      tag_704\n        /* \"#utility.yul\":30207:30208   */\n      0x00\n        /* \"#utility.yul\":30196:30205   */\n      dup4\n        /* \"#utility.yul\":30192:30209   */\n      add\n        /* \"#utility.yul\":30183:30189   */\n      dup7\n        /* \"#utility.yul\":30139:30210   */\n      tag_386\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":30220:30292   */\n      tag_705\n        /* \"#utility.yul\":30288:30290   */\n      0x20\n        /* \"#utility.yul\":30277:30286   */\n      dup4\n        /* \"#utility.yul\":30273:30291   */\n      add\n        /* \"#utility.yul\":30264:30270   */\n      dup6\n        /* \"#utility.yul\":30220:30292   */\n      tag_386\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":30302:30374   */\n      tag_706\n        /* \"#utility.yul\":30370:30372   */\n      0x40\n        /* \"#utility.yul\":30359:30368   */\n      dup4\n        /* \"#utility.yul\":30355:30373   */\n      add\n        /* \"#utility.yul\":30346:30352   */\n      dup5\n        /* \"#utility.yul\":30302:30374   */\n      tag_381\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":29939:30381   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e7a7a609babe201dbbe8b61ac15a22f53f3651e2ee2299d4b4a287940e6ff8c964736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1271": {
									"entryPoint": null,
									"id": 1271,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 427,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$380_fromMemory": {
									"entryPoint": 846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$380_fromMemory": {
									"entryPoint": 868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$380": {
									"entryPoint": 802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 629,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 748,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6": {
									"entryPoint": 976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$380": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3577:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:12",
														"type": ""
													}
												],
												"src": "7:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "118:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "135:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "138:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "128:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "128:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "232:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "225:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "259:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "249:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "249:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "324:362:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "334:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "357:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "339:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "339:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "334:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "368:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "391:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "373:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "368:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "402:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "425:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "428:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "421:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "421:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "406:11:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "439:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "468:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "450:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "450:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "439:7:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "657:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "659:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "659:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "659:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "590:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "583:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "583:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "613:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "620:7:12"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "629:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "616:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "616:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "610:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "610:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "563:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "563:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "543:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "543:113:12"
															},
															"nodeType": "YulIf",
															"src": "540:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "307:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "310:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "316:7:12",
														"type": ""
													}
												],
												"src": "276:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "732:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "742:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "758:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "752:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "752:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "742:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "725:6:12",
														"type": ""
													}
												],
												"src": "692:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "862:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "879:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "882:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "872:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "872:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "872:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "773:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "985:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1002:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1005:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "995:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "995:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "995:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "896:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1064:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1074:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1089:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1096:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1085:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1085:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1074:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1046:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1056:7:12",
														"type": ""
													}
												],
												"src": "1019:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1206:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1235:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1217:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1217:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1206:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1178:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1188:7:12",
														"type": ""
													}
												],
												"src": "1151:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1312:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1322:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1351:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1333:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1333:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1322:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$380",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1294:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1304:7:12",
														"type": ""
													}
												],
												"src": "1253:110:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1426:93:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1497:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1509:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1499:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1499:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1499:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1449:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1488:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$380",
																					"nodeType": "YulIdentifier",
																					"src": "1456:31:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1456:38:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1446:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:49:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1439:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1439:57:12"
															},
															"nodeType": "YulIf",
															"src": "1436:77:12"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$380",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1419:5:12",
														"type": ""
													}
												],
												"src": "1369:150:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1602:94:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1612:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1627:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1621:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1621:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1612:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1684:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$380",
																	"nodeType": "YulIdentifier",
																	"src": "1643:40:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1643:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1643:47:12"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$380_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1580:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1588:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1596:5:12",
														"type": ""
													}
												],
												"src": "1525:171:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1793:288:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1839:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1841:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1841:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1841:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1814:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1823:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1810:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1810:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1835:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1806:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1806:32:12"
															},
															"nodeType": "YulIf",
															"src": "1803:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "1932:142:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1947:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1961:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1951:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1976:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2036:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2047:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2032:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2032:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2056:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$380_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1986:45:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1986:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1976:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$380_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1763:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1774:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1786:6:12",
														"type": ""
													}
												],
												"src": "1702:379:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2152:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2169:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2192:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2174:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2174:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2162:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2162:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2162:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2140:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2147:3:12",
														"type": ""
													}
												],
												"src": "2087:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2319:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2331:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2342:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2327:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2327:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2319:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2399:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2412:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2423:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2408:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2408:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2355:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2355:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2355:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2281:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2293:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2304:4:12",
														"type": ""
													}
												],
												"src": "2211:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2535:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2552:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2557:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2545:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2545:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2545:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2573:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2592:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2597:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2588:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2588:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2573:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2507:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2512:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2523:11:12",
														"type": ""
													}
												],
												"src": "2439:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2720:57:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2742:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2750:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2738:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2738:14:12"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2754:15:12",
																		"type": "",
																		"value": "Invalid token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2731:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2731:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2731:39:12"
														}
													]
												},
												"name": "store_literal_in_memory_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2712:6:12",
														"type": ""
													}
												],
												"src": "2614:163:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2929:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2939:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3005:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:12",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2946:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2946:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2939:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3111:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
																	"nodeType": "YulIdentifier",
																	"src": "3022:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3022:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3022:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3124:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3135:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3140:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3131:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3131:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3124:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2917:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2925:3:12",
														"type": ""
													}
												],
												"src": "2783:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3326:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3336:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3383:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3394:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3379:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3379:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3402:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3408:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3398:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3398:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3372:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3372:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3372:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3428:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3562:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3436:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3436:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3428:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3306:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3321:4:12",
														"type": ""
													}
												],
												"src": "3155:419:12"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$380(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$380(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$380(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$380_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$380(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$380_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$380_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token\")\n\n    }\n\n    function abi_encode_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a0604052670de0b6b3a76400006207a1206200001d9190620002a2565b600b5562093a80600d5534801562000033575f80fd5b50604051620030d4380380620030d4833981810160405281019062000059919062000364565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000cd575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000c49190620003a5565b60405180910390fd5b620000de81620001ab60201b60201c565b50600180819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000157576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200014e906200041e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505f60025f6101000a81548160ff021916908315150217905550506200043e565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f620002ae826200026c565b9150620002bb836200026c565b9250828202620002cb816200026c565b91508282048414831517620002e557620002e462000275565b5b5092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200031b82620002f0565b9050919050565b5f6200032e826200030f565b9050919050565b620003408162000322565b81146200034b575f80fd5b50565b5f815190506200035e8162000335565b92915050565b5f602082840312156200037c576200037b620002ec565b5b5f6200038b848285016200034e565b91505092915050565b6200039f816200030f565b82525050565b5f602082019050620003ba5f83018462000394565b92915050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e000000000000000000000000000000000000005f82015250565b5f62000406600d83620003c0565b91506200041382620003d0565b602082019050919050565b5f6020820190508181035f8301526200043781620003f8565b9050919050565b608051612c4c620004885f395f8181610b3701528181610caa015281816113c4015281816115050152818161166d0152818161175e0152818161183d0152611a3e0152612c4c5ff3fe6080604052600436106101cc575f3560e01c80638f060da9116100f6578063d7bebac011610094578063e141316311610063578063e1413163146105fa578063e1ffba6214610610578063f2fde38b14610638578063fc0c546a14610660576101cc565b8063d7bebac01461057e578063db2e21bc146105a6578063dc7f9e34146105bc578063dd49756e146105d2576101cc565b80639e9aed62116100d05780639e9aed62146104e0578063a0470cb41461050a578063bf3506c114610514578063c59d484714610550576101cc565b80638f060da91461044057806392929a091461047c57806394192b9f146104a4576101cc565b80634243fc4e1161016e5780636104f4b51161013d5780636104f4b5146103ac578063715018a6146103d657806386e755c6146103ec5780638da5cb5b14610416576101cc565b80634243fc4e1461030657806345f7f249146103305780634e71d92d1461035a578063522bf1d414610370576101cc565b806326155e53116101aa57806326155e531461025e57806328607bc6146102885780632866ed21146102b25780632bb2ed39146102dc576101cc565b806306def802146101d05780631f3225641461020c5780632019ddf814610236575b5f80fd5b3480156101db575f80fd5b506101f660048036038101906101f19190611e05565b61068a565b6040516102039190611e48565b60405180910390f35b348015610217575f80fd5b506102206106d0565b60405161022d9190611e48565b60405180910390f35b348015610241575f80fd5b5061025c60048036038101906102579190611e96565b6106d6565b005b348015610269575f80fd5b50610272610784565b60405161027f9190611e48565b60405180910390f35b348015610293575f80fd5b5061029c61078a565b6040516102a99190611e48565b60405180910390f35b3480156102bd575f80fd5b506102c6610790565b6040516102d39190611ee3565b60405180910390f35b3480156102e7575f80fd5b506102f06107a2565b6040516102fd9190611e48565b60405180910390f35b348015610311575f80fd5b5061031a6107a8565b6040516103279190611e48565b60405180910390f35b34801561033b575f80fd5b506103446107d8565b6040516103519190611e48565b60405180910390f35b348015610365575f80fd5b5061036e6107de565b005b34801561037b575f80fd5b5061039660048036038101906103919190611e05565b610b86565b6040516103a39190611e48565b60405180910390f35b3480156103b7575f80fd5b506103c0610bcc565b6040516103cd9190611e48565b60405180910390f35b3480156103e1575f80fd5b506103ea610bd2565b005b3480156103f7575f80fd5b50610400610be5565b60405161040d9190611e48565b60405180910390f35b348015610421575f80fd5b5061042a610beb565b6040516104379190611f0b565b60405180910390f35b34801561044b575f80fd5b5061046660048036038101906104619190611e05565b610c12565b6040516104739190611ee3565b60405180910390f35b348015610487575f80fd5b506104a2600480360381019061049d9190611f24565b610c2f565b005b3480156104af575f80fd5b506104ca60048036038101906104c59190611e05565b610c8a565b6040516104d79190611ee3565b60405180910390f35b3480156104eb575f80fd5b506104f4610ca7565b6040516105019190611e48565b60405180910390f35b610512610d45565b005b34801561051f575f80fd5b5061053a60048036038101906105359190611e05565b610e23565b6040516105479190611ee3565b60405180910390f35b34801561055b575f80fd5b50610564610f27565b604051610575959493929190611f4f565b60405180910390f35b348015610589575f80fd5b506105a4600480360381019061059f9190612056565b610f5d565b005b3480156105b1575f80fd5b506105ba6113b1565b005b3480156105c7575f80fd5b506105d06115a9565b005b3480156105dd575f80fd5b506105f860048036038101906105f391906120fe565b611711565b005b348015610605575f80fd5b5061060e6118d3565b005b34801561061b575f80fd5b50610636600480360381019061063191906120fe565b61196f565b005b348015610643575f80fd5b5061065e60048036038101906106599190611e05565b6119b8565b005b34801561066b575f80fd5b50610674611a3c565b6040516106819190612184565b60405180910390f35b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b600e5481565b6106de611a60565b8060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f129e15046dd77be10c4cdac8841646b9f3b6d22a00544b93362e9b84c05e6960826040516107789190611ee3565b60405180910390a25050565b600c5481565b600d5481565b60025f9054906101000a900460ff1681565b60085481565b5f806107b2610ca7565b905060095481116107c3575f6107d2565b600954816107d191906121ca565b5b91505090565b60095481565b6107e6611ae7565b60025f9054906101000a900460ff16610834576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082b90612257565b60405180910390fd5b60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156108be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b5906122bf565b60405180910390fd5b60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093e90612327565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116109ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c19061238f565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f9e09de4b8e45666deb3ec2bc8225f07988e54ef533eec97cb0b4610127183d7982604051610a109190611e48565b60405180910390a25f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060095f828254610a6b91906121ca565b9250508190555060085f815480929190610a84906123ad565b91905055508060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610ad591906123f4565b925050819055505f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610b7b33827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611b369092919063ffffffff16565b50610b84611bb5565b565b5f60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60075481565b610bda611a60565b610be35f611bbe565b565b600b5481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6005602052805f5260405f205f915054906101000a900460ff1681565b610c37611a60565b8060025f6101000a81548160ff0219169083151502179055507f1edd4dc7f91a5992aba0f39c0428bcf4df13d001eebc26eb188307d057f14a0781604051610c7f9190611ee3565b60405180910390a150565b6006602052805f5260405f205f915054906101000a900460ff1681565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d019190611f0b565b602060405180830381865afa158015610d1c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d40919061243b565b905090565b600e543414610d89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d80906124b0565b60405180910390fd5b600160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167fb7fa0f30e1ede3196616147dfdf6c94e47523298677b4f7b0c61027a9f0ebf5460405160405180910390a2565b5f60025f9054906101000a900460ff168015610e86575060055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b8015610ed8575060065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b8015610f2057505f60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054115b9050919050565b5f805f805f60075494506008549350610f3e610ca7565b9250600954915060025f9054906101000a900460ff1690509091929394565b610f65611a60565b818190508484905014610fad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa490612518565b60405180910390fd5b5f805b858590508110156112fd575f868683818110610fcf57610fce612536565b5b9050602002016020810190610fe49190611e05565b90505f670de0b6b3a764000086868581811061100357611002612536565b5b905060200201356110149190612563565b90505f8273ffffffffffffffffffffffffffffffffffffffff163b1461106f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611066906125ee565b60405180910390fd5b600b548160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546110bb91906123f4565b11156110fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f390612656565b60405180910390fd5b600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166111fa576001600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555060075f8154809291906111b1906123ad565b91905055508173ffffffffffffffffffffffffffffffffffffffff167f1837db44f707818dfce8415ef80a201e86882bc1bffabdded272512a96c0799e60405160405180910390a25b8060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461124691906123f4565b92505081905550808461125991906123f4565b93508173ffffffffffffffffffffffffffffffffffffffff167f4885d73252b9e2c420b677d64d50e8a5798773dbb4cb99c5a2ab2824f725d9a88260035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040516112e0929190612674565b60405180910390a2505080806112f5906123ad565b915050610fb0565b508060095461130c91906123f4565b611314610ca7565b1015611355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134c9061270b565b60405180910390fd5b8060095f82825461136691906123f4565b925050819055507ff14d1c8e59d4cd079b88d0e19cf0de41c86b7a761d5032c0947977002b3ad93a858585856040516113a2949392919061285d565b60405180910390a15050505050565b6113b9611a60565b6113c1611ae7565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161141b9190611f0b565b602060405180830381865afa158015611436573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061145a919061243b565b90505f811161149e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611495906128e0565b60405180910390fd5b600d54600c546114ae91906123f4565b4210156114f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e790612948565b60405180910390fd5b42600c81905550611549611502610beb565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611b369092919063ffffffff16565b611551610beb565b73ffffffffffffffffffffffffffffffffffffffff167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695826040516115969190611e48565b60405180910390a2506115a7611bb5565b565b6115b1611a60565b6115b9611ae7565b5f6115c26107a8565b90505f8111611606576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115fd906129d6565b60405180910390fd5b600d54600c5461161691906123f4565b421015611658576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164f90612948565b60405180910390fd5b42600c819055506116b161166a610beb565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611b369092919063ffffffff16565b6116b9610beb565b73ffffffffffffffffffffffffffffffffffffffff167f4f03851532cb76253fe3dddbcbe99f0a83446922731a7bdfd2cb44d35ffcb1d9826040516116fe9190611e48565b60405180910390a25061170f611bb5565b565b611719611a60565b5f811161175b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175290612a64565b60405180910390fd5b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016117b59190611f0b565b602060405180830381865afa1580156117d0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117f4919061243b565b1015611835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182c90612acc565b60405180910390fd5b6118823330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611c7f909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fbc7c8a4d8049a3f99a02f2a20640c206a2e4d3f2fa54fd20da9f01fda3620cda826040516118c89190611e48565b60405180910390a250565b6118db611a60565b5f4790505f8111611921576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191890612b34565b60405180910390fd5b611929610beb565b73ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f1935050505015801561196b573d5f803e3d5ffd5b5050565b611977611a60565b80600e819055507f046767aa5821ba6f1a985f8cf0134cb534cba0b26ff165803d3602c7ff046cd4816040516119ad9190611e48565b60405180910390a150565b6119c0611a60565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a30575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611a279190611f0b565b60405180910390fd5b611a3981611bbe565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b611a68611d01565b73ffffffffffffffffffffffffffffffffffffffff16611a86610beb565b73ffffffffffffffffffffffffffffffffffffffff1614611ae557611aa9611d01565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611adc9190611f0b565b60405180910390fd5b565b600260015403611b2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b2390612b9c565b60405180910390fd5b6002600181905550565b611bb0838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611b69929190612bba565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611d08565b505050565b60018081905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611cfb848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611cb493929190612be1565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611d08565b50505050565b5f33905090565b5f8060205f8451602086015f885af180611d27576040513d5f823e3d81fd5b3d92505f519150505f8214611d40576001811415611d5b565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611d9d57836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611d949190611f0b565b60405180910390fd5b50505050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611dd482611dab565b9050919050565b611de481611dca565b8114611dee575f80fd5b50565b5f81359050611dff81611ddb565b92915050565b5f60208284031215611e1a57611e19611da3565b5b5f611e2784828501611df1565b91505092915050565b5f819050919050565b611e4281611e30565b82525050565b5f602082019050611e5b5f830184611e39565b92915050565b5f8115159050919050565b611e7581611e61565b8114611e7f575f80fd5b50565b5f81359050611e9081611e6c565b92915050565b5f8060408385031215611eac57611eab611da3565b5b5f611eb985828601611df1565b9250506020611eca85828601611e82565b9150509250929050565b611edd81611e61565b82525050565b5f602082019050611ef65f830184611ed4565b92915050565b611f0581611dca565b82525050565b5f602082019050611f1e5f830184611efc565b92915050565b5f60208284031215611f3957611f38611da3565b5b5f611f4684828501611e82565b91505092915050565b5f60a082019050611f625f830188611e39565b611f6f6020830187611e39565b611f7c6040830186611e39565b611f896060830185611e39565b611f966080830184611ed4565b9695505050505050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112611fc157611fc0611fa0565b5b8235905067ffffffffffffffff811115611fde57611fdd611fa4565b5b602083019150836020820283011115611ffa57611ff9611fa8565b5b9250929050565b5f8083601f84011261201657612015611fa0565b5b8235905067ffffffffffffffff81111561203357612032611fa4565b5b60208301915083602082028301111561204f5761204e611fa8565b5b9250929050565b5f805f806040858703121561206e5761206d611da3565b5b5f85013567ffffffffffffffff81111561208b5761208a611da7565b5b61209787828801611fac565b9450945050602085013567ffffffffffffffff8111156120ba576120b9611da7565b5b6120c687828801612001565b925092505092959194509250565b6120dd81611e30565b81146120e7575f80fd5b50565b5f813590506120f8816120d4565b92915050565b5f6020828403121561211357612112611da3565b5b5f612120848285016120ea565b91505092915050565b5f819050919050565b5f61214c61214761214284611dab565b612129565b611dab565b9050919050565b5f61215d82612132565b9050919050565b5f61216e82612153565b9050919050565b61217e81612164565b82525050565b5f6020820190506121975f830184612175565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6121d482611e30565b91506121df83611e30565b92508282039050818111156121f7576121f661219d565b5b92915050565b5f82825260208201905092915050565b7f436c61696d206e6f7420656e61626c65640000000000000000000000000000005f82015250565b5f6122416011836121fd565b915061224c8261220d565b602082019050919050565b5f6020820190508181035f83015261226e81612235565b9050919050565b7f436c61696d20626c6f636b656420666f722074686973206164647265737300005f82015250565b5f6122a9601e836121fd565b91506122b482612275565b602082019050919050565b5f6020820190508181035f8301526122d68161229d565b9050919050565b7f417070726f76616c20666565206e6f74207061696400000000000000000000005f82015250565b5f6123116015836121fd565b915061231c826122dd565b602082019050919050565b5f6020820190508181035f83015261233e81612305565b9050919050565b7f596f752068617665206e6f2062616c616e636520746f20636c61696d000000005f82015250565b5f612379601c836121fd565b915061238482612345565b602082019050919050565b5f6020820190508181035f8301526123a68161236d565b9050919050565b5f6123b782611e30565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123e9576123e861219d565b5b600182019050919050565b5f6123fe82611e30565b915061240983611e30565b92508282019050808211156124215761242061219d565b5b92915050565b5f81519050612435816120d4565b92915050565b5f602082840312156124505761244f611da3565b5b5f61245d84828501612427565b91505092915050565b7f496e636f72726563742066656520616d6f756e740000000000000000000000005f82015250565b5f61249a6014836121fd565b91506124a582612466565b602082019050919050565b5f6020820190508181035f8301526124c78161248e565b9050919050565b7f4172726179206c656e6774687320646f206e6f74206d617463680000000000005f82015250565b5f612502601a836121fd565b915061250d826124ce565b602082019050919050565b5f6020820190508181035f83015261252f816124f6565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61256d82611e30565b915061257883611e30565b925082820261258681611e30565b9150828204841483151761259d5761259c61219d565b5b5092915050565b7f43616e6e6f74206265206120636f6e74726163740000000000000000000000005f82015250565b5f6125d86014836121fd565b91506125e3826125a4565b602082019050919050565b5f6020820190508181035f830152612605816125cc565b9050919050565b7f416c6c6f636174696f6e206578636565647320616c6c6f776564206c696d69745f82015250565b5f6126406020836121fd565b915061264b8261260c565b602082019050919050565b5f6020820190508181035f83015261266d81612634565b9050919050565b5f6040820190506126875f830185611e39565b6126946020830184611e39565b9392505050565b7f496e73756666696369656e7420636f6e74726163742062616c616e636520666f5f8201527f7220616c6c6f636174696f6e0000000000000000000000000000000000000000602082015250565b5f6126f5602c836121fd565b91506127008261269b565b604082019050919050565b5f6020820190508181035f830152612722816126e9565b9050919050565b5f82825260208201905092915050565b5f819050919050565b61274b81611dca565b82525050565b5f61275c8383612742565b60208301905092915050565b5f6127766020840184611df1565b905092915050565b5f602082019050919050565b5f6127958385612729565b93506127a082612739565b805f5b858110156127d8576127b58284612768565b6127bf8882612751565b97506127ca8361277e565b9250506001810190506127a3565b5085925050509392505050565b5f82825260208201905092915050565b5f80fd5b82818337505050565b5f61280d83856127e5565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156128405761283f6127f5565b5b6020830292506128518385846127f9565b82840190509392505050565b5f6040820190508181035f83015261287681868861278a565b9050818103602083015261288b818486612802565b905095945050505050565b7f436f6e747261637420686173206e6f2062616c616e63650000000000000000005f82015250565b5f6128ca6017836121fd565b91506128d582612896565b602082019050919050565b5f6020820190508181035f8301526128f7816128be565b9050919050565b7f436f6f6c646f776e20696e2070726f67726573730000000000000000000000005f82015250565b5f6129326014836121fd565b915061293d826128fe565b602082019050919050565b5f6020820190508181035f83015261295f81612926565b9050919050565b7f4e6f20756e616c6c6f636174656420746f6b656e7320746f20776974686472615f8201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b5f6129c06021836121fd565b91506129cb82612966565b604082019050919050565b5f6020820190508181035f8301526129ed816129b4565b9050919050565b7f4465706f73697420616d6f756e74206d757374206265206772656174657220745f8201527f68616e207a65726f000000000000000000000000000000000000000000000000602082015250565b5f612a4e6028836121fd565b9150612a59826129f4565b604082019050919050565b5f6020820190508181035f830152612a7b81612a42565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f612ab66014836121fd565b9150612ac182612a82565b602082019050919050565b5f6020820190508181035f830152612ae381612aaa565b9050919050565b7f4e6f206665657320746f207769746864726177000000000000000000000000005f82015250565b5f612b1e6013836121fd565b9150612b2982612aea565b602082019050919050565b5f6020820190508181035f830152612b4b81612b12565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612b86601f836121fd565b9150612b9182612b52565b602082019050919050565b5f6020820190508181035f830152612bb381612b7a565b9050919050565b5f604082019050612bcd5f830185611efc565b612bda6020830184611e39565b9392505050565b5f606082019050612bf45f830186611efc565b612c016020830185611efc565b612c0e6040830184611e39565b94935050505056fea2646970667358221220e7a7a609babe201dbbe8b61ac15a22f53f3651e2ee2299d4b4a287940e6ff8c964736f6c63430008140033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH3 0x7A120 PUSH3 0x1D SWAP2 SWAP1 PUSH3 0x2A2 JUMP JUMPDEST PUSH1 0xB SSTORE PUSH3 0x93A80 PUSH1 0xD SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x33 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x30D4 CODESIZE SUB DUP1 PUSH3 0x30D4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x59 SWAP2 SWAP1 PUSH3 0x364 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xCD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC4 SWAP2 SWAP1 PUSH3 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xDE DUP2 PUSH3 0x1AB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x157 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x14E SWAP1 PUSH3 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH0 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP PUSH3 0x43E JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0x2AE DUP3 PUSH3 0x26C JUMP JUMPDEST SWAP2 POP PUSH3 0x2BB DUP4 PUSH3 0x26C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x2CB DUP2 PUSH3 0x26C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x2E5 JUMPI PUSH3 0x2E4 PUSH3 0x275 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x31B DUP3 PUSH3 0x2F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x32E DUP3 PUSH3 0x30F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x340 DUP2 PUSH3 0x322 JUMP JUMPDEST DUP2 EQ PUSH3 0x34B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x35E DUP2 PUSH3 0x335 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x37C JUMPI PUSH3 0x37B PUSH3 0x2EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x38B DUP5 DUP3 DUP6 ADD PUSH3 0x34E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x39F DUP2 PUSH3 0x30F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x3BA PUSH0 DUP4 ADD DUP5 PUSH3 0x394 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x406 PUSH1 0xD DUP4 PUSH3 0x3C0 JUMP JUMPDEST SWAP2 POP PUSH3 0x413 DUP3 PUSH3 0x3D0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x437 DUP2 PUSH3 0x3F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2C4C PUSH3 0x488 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xB37 ADD MSTORE DUP2 DUP2 PUSH2 0xCAA ADD MSTORE DUP2 DUP2 PUSH2 0x13C4 ADD MSTORE DUP2 DUP2 PUSH2 0x1505 ADD MSTORE DUP2 DUP2 PUSH2 0x166D ADD MSTORE DUP2 DUP2 PUSH2 0x175E ADD MSTORE DUP2 DUP2 PUSH2 0x183D ADD MSTORE PUSH2 0x1A3E ADD MSTORE PUSH2 0x2C4C PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F060DA9 GT PUSH2 0xF6 JUMPI DUP1 PUSH4 0xD7BEBAC0 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xE1413163 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xE1413163 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xE1FFBA62 EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x638 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x660 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0xD7BEBAC0 EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xDC7F9E34 EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0xDD49756E EQ PUSH2 0x5D2 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x9E9AED62 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x9E9AED62 EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0xA0470CB4 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0xBF3506C1 EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0xC59D4847 EQ PUSH2 0x550 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x8F060DA9 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x92929A09 EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x94192B9F EQ PUSH2 0x4A4 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x4243FC4E GT PUSH2 0x16E JUMPI DUP1 PUSH4 0x6104F4B5 GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x6104F4B5 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x86E755C6 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x416 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x4243FC4E EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x45F7F249 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x522BF1D4 EQ PUSH2 0x370 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x26155E53 GT PUSH2 0x1AA JUMPI DUP1 PUSH4 0x26155E53 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x28607BC6 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x2866ED21 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x2BB2ED39 EQ PUSH2 0x2DC JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x6DEF802 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x1F322564 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x2019DDF8 EQ PUSH2 0x236 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x78A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH2 0x7A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31A PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x344 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x365 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x36E PUSH2 0x7DE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x396 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C0 PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EA PUSH2 0xBD2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x400 PUSH2 0xBE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x421 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x437 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x466 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x487 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0xC2F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F4 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x512 PUSH2 0xD45 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x53A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x535 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x564 PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x575 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x589 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0xF5D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BA PUSH2 0x13B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D0 PUSH2 0x15A9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x1711 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x605 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x60E PUSH2 0x18D3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x636 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x196F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x643 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x65E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x659 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x19B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x674 PUSH2 0x1A3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x681 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6DE PUSH2 0x1A60 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x129E15046DD77BE10C4CDAC8841646B9F3B6D22A00544B93362E9B84C05E6960 DUP3 PUSH1 0x40 MLOAD PUSH2 0x778 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7B2 PUSH2 0xCA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 GT PUSH2 0x7C3 JUMPI PUSH0 PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 PUSH2 0x7D1 SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7E6 PUSH2 0x1AE7 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x834 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82B SWAP1 PUSH2 0x2257 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B5 SWAP1 PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x947 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93E SWAP1 PUSH2 0x2327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x9CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C1 SWAP1 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E09DE4B8E45666DEB3EC2BC8225F07988E54EF533EEC97CB0B4610127183D79 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA10 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA84 SWAP1 PUSH2 0x23AD JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB7B CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B36 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xB84 PUSH2 0x1BB5 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBDA PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0xBE3 PUSH0 PUSH2 0x1BBE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xC37 PUSH2 0x1A60 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x1EDD4DC7F91A5992ABA0F39C0428BCF4DF13D001EEBC26EB188307D057F14A07 DUP2 PUSH1 0x40 MLOAD PUSH2 0xC7F SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD01 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD1C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD40 SWAP2 SWAP1 PUSH2 0x243B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD CALLVALUE EQ PUSH2 0xD89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD80 SWAP1 PUSH2 0x24B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB7FA0F30E1EDE3196616147DFDF6C94E47523298677B4F7B0C61027A9F0EBF54 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xE86 JUMPI POP PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xED8 JUMPI POP PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0xF20 JUMPI POP PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x7 SLOAD SWAP5 POP PUSH1 0x8 SLOAD SWAP4 POP PUSH2 0xF3E PUSH2 0xCA7 JUMP JUMPDEST SWAP3 POP PUSH1 0x9 SLOAD SWAP2 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST PUSH2 0xF65 PUSH2 0x1A60 JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0xFAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA4 SWAP1 PUSH2 0x2518 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 JUMPDEST DUP6 DUP6 SWAP1 POP DUP2 LT ISZERO PUSH2 0x12FD JUMPI PUSH0 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0xFCF JUMPI PUSH2 0xFCE PUSH2 0x2536 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xFE4 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x1003 JUMPI PUSH2 0x1002 PUSH2 0x2536 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1014 SWAP2 SWAP1 PUSH2 0x2563 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0x106F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1066 SWAP1 PUSH2 0x25EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x10BB SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST GT ISZERO PUSH2 0x10FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F3 SWAP1 PUSH2 0x2656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11FA JUMPI PUSH1 0x1 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x11B1 SWAP1 PUSH2 0x23AD JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1837DB44F707818DFCE8415EF80A201E86882BC1BFFABDDED272512A96C0799E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1246 SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP5 PUSH2 0x1259 SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP4 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4885D73252B9E2C420B677D64D50E8A5798773DBB4CB99C5A2AB2824F725D9A8 DUP3 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x12E0 SWAP3 SWAP2 SWAP1 PUSH2 0x2674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP DUP1 DUP1 PUSH2 0x12F5 SWAP1 PUSH2 0x23AD JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFB0 JUMP JUMPDEST POP DUP1 PUSH1 0x9 SLOAD PUSH2 0x130C SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST PUSH2 0x1314 PUSH2 0xCA7 JUMP JUMPDEST LT ISZERO PUSH2 0x1355 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134C SWAP1 PUSH2 0x270B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1366 SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xF14D1C8E59D4CD079B88D0E19CF0DE41C86B7A761D5032C0947977002B3AD93A DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x13A2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x285D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13B9 PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0x13C1 PUSH2 0x1AE7 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141B SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1436 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x145A SWAP2 SWAP1 PUSH2 0x243B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x149E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1495 SWAP1 PUSH2 0x28E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD SLOAD PUSH1 0xC SLOAD PUSH2 0x14AE SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x14F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E7 SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH2 0x1549 PUSH2 0x1502 PUSH2 0xBEB JUMP JUMPDEST DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B36 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1551 PUSH2 0xBEB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1596 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x15A7 PUSH2 0x1BB5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x15B1 PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0x15B9 PUSH2 0x1AE7 JUMP JUMPDEST PUSH0 PUSH2 0x15C2 PUSH2 0x7A8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1606 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FD SWAP1 PUSH2 0x29D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD SLOAD PUSH1 0xC SLOAD PUSH2 0x1616 SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1658 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164F SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH2 0x16B1 PUSH2 0x166A PUSH2 0xBEB JUMP JUMPDEST DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B36 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16B9 PUSH2 0xBEB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4F03851532CB76253FE3DDDBCBE99F0A83446922731A7BDFD2CB44D35FFCB1D9 DUP3 PUSH1 0x40 MLOAD PUSH2 0x16FE SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x170F PUSH2 0x1BB5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1719 PUSH2 0x1A60 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x175B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1752 SWAP1 PUSH2 0x2A64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17B5 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17D0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17F4 SWAP2 SWAP1 PUSH2 0x243B JUMP JUMPDEST LT ISZERO PUSH2 0x1835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182C SWAP1 PUSH2 0x2ACC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1882 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C7F SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7C8A4D8049A3F99A02F2A20640C206A2E4D3F2FA54FD20DA9F01FDA3620CDA DUP3 PUSH1 0x40 MLOAD PUSH2 0x18C8 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x18DB PUSH2 0x1A60 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1921 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1918 SWAP1 PUSH2 0x2B34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1929 PUSH2 0xBEB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x196B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1977 PUSH2 0x1A60 JUMP JUMPDEST DUP1 PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH32 0x46767AA5821BA6F1A985F8CF0134CB534CBA0B26FF165803D3602C7FF046CD4 DUP2 PUSH1 0x40 MLOAD PUSH2 0x19AD SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x19C0 PUSH2 0x1A60 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A30 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A27 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A39 DUP2 PUSH2 0x1BBE JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1A68 PUSH2 0x1D01 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A86 PUSH2 0xBEB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AE5 JUMPI PUSH2 0x1AA9 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ADC SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1B2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B23 SWAP1 PUSH2 0x2B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1BB0 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B69 SWAP3 SWAP2 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1D08 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1CFB DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1CB4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1D08 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1D27 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1D40 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1D5B JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1D9D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D94 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DD4 DUP3 PUSH2 0x1DAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DE4 DUP2 PUSH2 0x1DCA JUMP JUMPDEST DUP2 EQ PUSH2 0x1DEE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DFF DUP2 PUSH2 0x1DDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E1A JUMPI PUSH2 0x1E19 PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E27 DUP5 DUP3 DUP6 ADD PUSH2 0x1DF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E42 DUP2 PUSH2 0x1E30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E5B PUSH0 DUP4 ADD DUP5 PUSH2 0x1E39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E75 DUP2 PUSH2 0x1E61 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E7F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E90 DUP2 PUSH2 0x1E6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EAC JUMPI PUSH2 0x1EAB PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EB9 DUP6 DUP3 DUP7 ADD PUSH2 0x1DF1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ECA DUP6 DUP3 DUP7 ADD PUSH2 0x1E82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EDD DUP2 PUSH2 0x1E61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EF6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1ED4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F05 DUP2 PUSH2 0x1DCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F1E PUSH0 DUP4 ADD DUP5 PUSH2 0x1EFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F39 JUMPI PUSH2 0x1F38 PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F46 DUP5 DUP3 DUP6 ADD PUSH2 0x1E82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1F62 PUSH0 DUP4 ADD DUP9 PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x1F6F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x1F7C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x1F89 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x1F96 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1ED4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1FC1 JUMPI PUSH2 0x1FC0 PUSH2 0x1FA0 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FDE JUMPI PUSH2 0x1FDD PUSH2 0x1FA4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1FFA JUMPI PUSH2 0x1FF9 PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2016 JUMPI PUSH2 0x2015 PUSH2 0x1FA0 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2033 JUMPI PUSH2 0x2032 PUSH2 0x1FA4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x204F JUMPI PUSH2 0x204E PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x206E JUMPI PUSH2 0x206D PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x208B JUMPI PUSH2 0x208A PUSH2 0x1DA7 JUMP JUMPDEST JUMPDEST PUSH2 0x2097 DUP8 DUP3 DUP9 ADD PUSH2 0x1FAC JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20BA JUMPI PUSH2 0x20B9 PUSH2 0x1DA7 JUMP JUMPDEST JUMPDEST PUSH2 0x20C6 DUP8 DUP3 DUP9 ADD PUSH2 0x2001 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x20DD DUP2 PUSH2 0x1E30 JUMP JUMPDEST DUP2 EQ PUSH2 0x20E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20F8 DUP2 PUSH2 0x20D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2113 JUMPI PUSH2 0x2112 PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2120 DUP5 DUP3 DUP6 ADD PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x214C PUSH2 0x2147 PUSH2 0x2142 DUP5 PUSH2 0x1DAB JUMP JUMPDEST PUSH2 0x2129 JUMP JUMPDEST PUSH2 0x1DAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x215D DUP3 PUSH2 0x2132 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x216E DUP3 PUSH2 0x2153 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x217E DUP2 PUSH2 0x2164 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2197 PUSH0 DUP4 ADD DUP5 PUSH2 0x2175 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21D4 DUP3 PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP PUSH2 0x21DF DUP4 PUSH2 0x1E30 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x21F7 JUMPI PUSH2 0x21F6 PUSH2 0x219D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436C61696D206E6F7420656E61626C6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2241 PUSH1 0x11 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x224C DUP3 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x226E DUP2 PUSH2 0x2235 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436C61696D20626C6F636B656420666F72207468697320616464726573730000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22A9 PUSH1 0x1E DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x22B4 DUP3 PUSH2 0x2275 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22D6 DUP2 PUSH2 0x229D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x417070726F76616C20666565206E6F7420706169640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2311 PUSH1 0x15 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x231C DUP3 PUSH2 0x22DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x233E DUP2 PUSH2 0x2305 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F2062616C616E636520746F20636C61696D00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2379 PUSH1 0x1C DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x2384 DUP3 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23A6 DUP2 PUSH2 0x236D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23B7 DUP3 PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x23E9 JUMPI PUSH2 0x23E8 PUSH2 0x219D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23FE DUP3 PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP PUSH2 0x2409 DUP4 PUSH2 0x1E30 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2421 JUMPI PUSH2 0x2420 PUSH2 0x219D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2435 DUP2 PUSH2 0x20D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2450 JUMPI PUSH2 0x244F PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x245D DUP5 DUP3 DUP6 ADD PUSH2 0x2427 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E636F72726563742066656520616D6F756E74000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x249A PUSH1 0x14 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x24A5 DUP3 PUSH2 0x2466 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24C7 DUP2 PUSH2 0x248E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172726179206C656E6774687320646F206E6F74206D61746368000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2502 PUSH1 0x1A DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x250D DUP3 PUSH2 0x24CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x252F DUP2 PUSH2 0x24F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x256D DUP3 PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP PUSH2 0x2578 DUP4 PUSH2 0x1E30 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2586 DUP2 PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x259D JUMPI PUSH2 0x259C PUSH2 0x219D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206265206120636F6E7472616374000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25D8 PUSH1 0x14 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x25E3 DUP3 PUSH2 0x25A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2605 DUP2 PUSH2 0x25CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C6C6F636174696F6E206578636565647320616C6C6F776564206C696D6974 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2640 PUSH1 0x20 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x264B DUP3 PUSH2 0x260C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x266D DUP2 PUSH2 0x2634 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2687 PUSH0 DUP4 ADD DUP6 PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x2694 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E39 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E636520666F PUSH0 DUP3 ADD MSTORE PUSH32 0x7220616C6C6F636174696F6E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26F5 PUSH1 0x2C DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x2700 DUP3 PUSH2 0x269B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2722 DUP2 PUSH2 0x26E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x274B DUP2 PUSH2 0x1DCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x275C DUP4 DUP4 PUSH2 0x2742 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2776 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x1DF1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2795 DUP4 DUP6 PUSH2 0x2729 JUMP JUMPDEST SWAP4 POP PUSH2 0x27A0 DUP3 PUSH2 0x2739 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x27D8 JUMPI PUSH2 0x27B5 DUP3 DUP5 PUSH2 0x2768 JUMP JUMPDEST PUSH2 0x27BF DUP9 DUP3 PUSH2 0x2751 JUMP JUMPDEST SWAP8 POP PUSH2 0x27CA DUP4 PUSH2 0x277E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27A3 JUMP JUMPDEST POP DUP6 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x280D DUP4 DUP6 PUSH2 0x27E5 JUMP JUMPDEST SWAP4 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x2840 JUMPI PUSH2 0x283F PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 MUL SWAP3 POP PUSH2 0x2851 DUP4 DUP6 DUP5 PUSH2 0x27F9 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2876 DUP2 DUP7 DUP9 PUSH2 0x278A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x288B DUP2 DUP5 DUP7 PUSH2 0x2802 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x436F6E747261637420686173206E6F2062616C616E6365000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28CA PUSH1 0x17 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x28D5 DUP3 PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28F7 DUP2 PUSH2 0x28BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6F6C646F776E20696E2070726F6772657373000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2932 PUSH1 0x14 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x293D DUP3 PUSH2 0x28FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x295F DUP2 PUSH2 0x2926 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20756E616C6C6F636174656420746F6B656E7320746F2077697468647261 PUSH0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29C0 PUSH1 0x21 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x29CB DUP3 PUSH2 0x2966 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29ED DUP2 PUSH2 0x29B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A4E PUSH1 0x28 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x2A59 DUP3 PUSH2 0x29F4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A7B DUP2 PUSH2 0x2A42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AB6 PUSH1 0x14 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x2AC1 DUP3 PUSH2 0x2A82 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AE3 DUP2 PUSH2 0x2AAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206665657320746F20776974686472617700000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B1E PUSH1 0x13 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x2B29 DUP3 PUSH2 0x2AEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B4B DUP2 PUSH2 0x2B12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B86 PUSH1 0x1F DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x2B91 DUP3 PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BB3 DUP2 PUSH2 0x2B7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BCD PUSH0 DUP4 ADD DUP6 PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x2BDA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E39 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2BF4 PUSH0 DUP4 ADD DUP7 PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x2C01 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x2C0E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E39 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xA7 0xA6 MULMOD 0xBA 0xBE KECCAK256 SAR 0xBB 0xE8 0xB6 BYTE 0xC1 GAS 0x22 CREATE2 EXTCODEHASH CALLDATASIZE MLOAD 0xE2 0xEE 0x22 SWAP10 0xD4 0xB4 LOG2 DUP8 SWAP5 0xE PUSH16 0xF8C964736F6C63430008140033000000 ",
							"sourceMap": "1830:10440:11:-:0;;;2917:8;3002:6;:28;;;;:::i;:::-;2961:69;;3194:7;3151:50;;4225:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4260:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;4317:1:11::1;4290:29;;4298:6;4290:29;;::::0;4282:55:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4355:6;4347:14;;;;;;;;::::0;::::1;4386:5;4371:12;;:20;;;;;;;;;;;;;;;;;;4225:173:::0;1830:10440;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:77:12:-;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:410;316:7;339:20;357:1;339:20;:::i;:::-;334:25;;373:20;391:1;373:20;:::i;:::-;368:25;;428:1;425;421:9;450:30;468:11;450:30;:::i;:::-;439:41;;629:1;620:7;616:15;613:1;610:22;590:1;583:9;563:83;540:139;;659:18;;:::i;:::-;540:139;324:362;276:410;;;;:::o;773:117::-;882:1;879;872:12;1019:126;1056:7;1096:42;1089:5;1085:54;1074:65;;1019:126;;;:::o;1151:96::-;1188:7;1217:24;1235:5;1217:24;:::i;:::-;1206:35;;1151:96;;;:::o;1253:110::-;1304:7;1333:24;1351:5;1333:24;:::i;:::-;1322:35;;1253:110;;;:::o;1369:150::-;1456:38;1488:5;1456:38;:::i;:::-;1449:5;1446:49;1436:77;;1509:1;1506;1499:12;1436:77;1369:150;:::o;1525:171::-;1596:5;1627:6;1621:13;1612:22;;1643:47;1684:5;1643:47;:::i;:::-;1525:171;;;;:::o;1702:379::-;1786:6;1835:2;1823:9;1814:7;1810:23;1806:32;1803:119;;;1841:79;;:::i;:::-;1803:119;1961:1;1986:78;2056:7;2047:6;2036:9;2032:22;1986:78;:::i;:::-;1976:88;;1932:142;1702:379;;;;:::o;2087:118::-;2174:24;2192:5;2174:24;:::i;:::-;2169:3;2162:37;2087:118;;:::o;2211:222::-;2304:4;2342:2;2331:9;2327:18;2319:26;;2355:71;2423:1;2412:9;2408:17;2399:6;2355:71;:::i;:::-;2211:222;;;;:::o;2439:169::-;2523:11;2557:6;2552:3;2545:19;2597:4;2592:3;2588:14;2573:29;;2439:169;;;;:::o;2614:163::-;2754:15;2750:1;2742:6;2738:14;2731:39;2614:163;:::o;2783:366::-;2925:3;2946:67;3010:2;3005:3;2946:67;:::i;:::-;2939:74;;3022:93;3111:3;3022:93;:::i;:::-;3140:2;3135:3;3131:12;3124:19;;2783:366;;;:::o;3155:419::-;3321:4;3359:2;3348:9;3344:18;3336:26;;3408:9;3402:4;3398:20;3394:1;3383:9;3379:17;3372:47;3436:131;3562:4;3436:131;:::i;:::-;3428:139;;3155:419;;;:::o;1830:10440:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_749": {
									"entryPoint": 7432,
									"id": 749,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 6752,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1062": {
									"entryPoint": 7425,
									"id": 1062,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 7093,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 6887,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 7102,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addClaimableBatch_1526": {
									"entryPoint": 3933,
									"id": 1526,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@approveClaim_1313": {
									"entryPoint": 3397,
									"id": 1313,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approvedForClaim_1149": {
									"entryPoint": 3210,
									"id": 1149,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@canClaim_1836": {
									"entryPoint": 3619,
									"id": 1836,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimApprovalFee_1176": {
									"entryPoint": 1744,
									"id": 1176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimBlocked_1145": {
									"entryPoint": 3090,
									"id": 1145,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimEnabled_1133": {
									"entryPoint": 1936,
									"id": 1133,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_1611": {
									"entryPoint": 2014,
									"id": 1611,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@contractTokenBalance_1657": {
									"entryPoint": 3239,
									"id": 1657,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@depositTokens_1397": {
									"entryPoint": 5905,
									"id": 1397,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@emergencyWithdrawCooldown_1174": {
									"entryPoint": 1930,
									"id": 1174,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@emergencyWithdraw_1733": {
									"entryPoint": 5041,
									"id": 1733,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getClaimableBalance_1796": {
									"entryPoint": 1674,
									"id": 1796,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getStats_1872": {
									"entryPoint": 3879,
									"id": 1872,
									"parameterSlots": 0,
									"returnSlots": 5
								},
								"@getTotalClaimed_1809": {
									"entryPoint": 2950,
									"id": 1809,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUnallocatedTokens_1678": {
									"entryPoint": 1960,
									"id": 1678,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastEmergencyWithdraw_1171": {
									"entryPoint": 1924,
									"id": 1171,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxAllocationPerAddress_1169": {
									"entryPoint": 3045,
									"id": 1169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 3051,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 3026,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_454": {
									"entryPoint": 7295,
									"id": 454,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_427": {
									"entryPoint": 6966,
									"id": 427,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setClaimApprovalFee_1288": {
									"entryPoint": 6511,
									"id": 1288,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setClaimBlockedForAddress_1352": {
									"entryPoint": 1750,
									"id": 1352,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setClaimEnabled_1330": {
									"entryPoint": 3119,
									"id": 1330,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@token_1131": {
									"entryPoint": 6716,
									"id": 1131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalAddressesClaimed_1153": {
									"entryPoint": 1954,
									"id": 1153,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalAllocated_1155": {
									"entryPoint": 2008,
									"id": 1155,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalRegisteredAddresses_1151": {
									"entryPoint": 3020,
									"id": 1151,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 6584,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawApprovalFees_1642": {
									"entryPoint": 6355,
									"id": 1642,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawUnallocatedTokens_1783": {
									"entryPoint": 5545,
									"id": 1783,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 8108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 8193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool": {
									"entryPoint": 7810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 8278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 7972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 10065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 10050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 10122,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 10242,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack": {
									"entryPoint": 8565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_09b028424e7075cc04406e7de0a34b8a92bf5c23491cc707198b52e233f86317_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47cc3508f6aac3bd824d766ddbb7b6e1aaf29363a0d18fbe33bd1d4f7dad8ff4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4ab3f952ba26a94d88e8cd9fe7400356e417913015cdeb4af2c4bbd982e459f1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5f7d0aaffc01656dfd5035f8ff7e371b4518722e7cb53e5b13bdbbf882c62dac_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6297d24594bfa03e2a0a0fbc6cd2992fe82d84e656571e892bd1b398a0254eca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_77cbf9fd39f60bad341ce3c780ba8384d54d093463ea9f33c9f1ea5e2cb56381_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a8b5978deb0070b60a19e8fdeecf8ef51086f86967d5f1f8e0dedc934d5c10bd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c157683f76319e17b2ecf3ad3b64a005df2e617c7482e566664acd2683cbe83f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c9fda3bf08e7edf126ed19c887ac2339ed77973707baa0165c9c06cf0e4c6eb7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da6ac7f3115479cdf80fe6763cd7f0188752323abfcf442f06ceefe0e8137a18_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e60dd92c4aa53d7953fb339065eb9ffa879f2aff7dc3476c17258b4864fb63c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f7e30f3b25afa0381893df785dd0991eeb72d50d15b48d0285083bf32818e6eb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11233,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11194,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 10333,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed": {
									"entryPoint": 8580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_09b028424e7075cc04406e7de0a34b8a92bf5c23491cc707198b52e233f86317__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47cc3508f6aac3bd824d766ddbb7b6e1aaf29363a0d18fbe33bd1d4f7dad8ff4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4ab3f952ba26a94d88e8cd9fe7400356e417913015cdeb4af2c4bbd982e459f1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5f7d0aaffc01656dfd5035f8ff7e371b4518722e7cb53e5b13bdbbf882c62dac__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6297d24594bfa03e2a0a0fbc6cd2992fe82d84e656571e892bd1b398a0254eca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_77cbf9fd39f60bad341ce3c780ba8384d54d093463ea9f33c9f1ea5e2cb56381__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a8b5978deb0070b60a19e8fdeecf8ef51086f86967d5f1f8e0dedc934d5c10bd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c157683f76319e17b2ecf3ad3b64a005df2e617c7482e566664acd2683cbe83f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c9fda3bf08e7edf126ed19c887ac2339ed77973707baa0165c9c06cf0e4c6eb7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_da6ac7f3115479cdf80fe6763cd7f0188752323abfcf442f06ceefe0e8137a18__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e60dd92c4aa53d7953fb339065eb9ffa879f2aff7dc3476c17258b4864fb63c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f7e30f3b25afa0381893df785dd0991eeb72d50d15b48d0285083bf32818e6eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9844,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 8015,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 10041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 10110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 10025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 10213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"calldata_access_t_address": {
									"entryPoint": 10088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$380_to_t_address": {
									"entryPoint": 8548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 10233,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8605,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9526,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 8100,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8096,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8104,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7591,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec": {
									"entryPoint": 10229,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7587,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_09b028424e7075cc04406e7de0a34b8a92bf5c23491cc707198b52e233f86317": {
									"entryPoint": 9740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 10882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47cc3508f6aac3bd824d766ddbb7b6e1aaf29363a0d18fbe33bd1d4f7dad8ff4": {
									"entryPoint": 9636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4ab3f952ba26a94d88e8cd9fe7400356e417913015cdeb4af2c4bbd982e459f1": {
									"entryPoint": 9318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c": {
									"entryPoint": 10986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5f7d0aaffc01656dfd5035f8ff7e371b4518722e7cb53e5b13bdbbf882c62dac": {
									"entryPoint": 9029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6297d24594bfa03e2a0a0fbc6cd2992fe82d84e656571e892bd1b398a0254eca": {
									"entryPoint": 10494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_77cbf9fd39f60bad341ce3c780ba8384d54d093463ea9f33c9f1ea5e2cb56381": {
									"entryPoint": 8717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a8b5978deb0070b60a19e8fdeecf8ef51086f86967d5f1f8e0dedc934d5c10bd": {
									"entryPoint": 10390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c157683f76319e17b2ecf3ad3b64a005df2e617c7482e566664acd2683cbe83f": {
									"entryPoint": 8821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c9fda3bf08e7edf126ed19c887ac2339ed77973707baa0165c9c06cf0e4c6eb7": {
									"entryPoint": 9422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da6ac7f3115479cdf80fe6763cd7f0188752323abfcf442f06ceefe0e8137a18": {
									"entryPoint": 8925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71": {
									"entryPoint": 10740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e60dd92c4aa53d7953fb339065eb9ffa879f2aff7dc3476c17258b4864fb63c2": {
									"entryPoint": 10598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 11090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f7e30f3b25afa0381893df785dd0991eeb72d50d15b48d0285083bf32818e6eb": {
									"entryPoint": 9883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:30384:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:12",
														"type": ""
													}
												],
												"src": "696:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:12"
															},
															"nodeType": "YulIf",
															"src": "917:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:12",
														"type": ""
													}
												],
												"src": "841:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:12",
														"type": ""
													}
												],
												"src": "1176:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:12",
														"type": ""
													}
												],
												"src": "1259:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:12",
														"type": ""
													}
												],
												"src": "1383:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1653:48:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1663:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1688:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1681:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1663:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1635:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1645:7:12",
														"type": ""
													}
												],
												"src": "1611:90:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1747:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1801:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1810:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1813:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1803:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1803:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1803:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1770:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1792:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "1777:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1777:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1767:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1767:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1760:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1760:40:12"
															},
															"nodeType": "YulIf",
															"src": "1757:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1740:5:12",
														"type": ""
													}
												],
												"src": "1707:116:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1878:84:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1888:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1910:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1897:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1888:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1950:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1926:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1926:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1926:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1856:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1864:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1872:5:12",
														"type": ""
													}
												],
												"src": "1829:133:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2048:388:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2094:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2096:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2096:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2096:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2069:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2078:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2065:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2065:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2090:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2061:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2061:32:12"
															},
															"nodeType": "YulIf",
															"src": "2058:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "2187:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2202:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2216:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2206:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2231:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2266:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2277:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2262:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2262:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2286:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2241:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2241:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2231:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2314:115:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2329:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2343:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2333:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2359:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2391:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2402:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2387:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2387:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2411:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2369:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2369:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2359:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2010:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2021:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2033:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2041:6:12",
														"type": ""
													}
												],
												"src": "1968:468:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2501:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2518:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2538:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2523:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2523:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2511:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2511:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2511:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2489:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2496:3:12",
														"type": ""
													}
												],
												"src": "2442:109:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2649:118:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2659:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2682:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2667:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2659:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2733:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2746:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2757:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2742:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2742:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2695:37:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2695:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2621:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2633:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2644:4:12",
														"type": ""
													}
												],
												"src": "2557:210:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2855:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2878:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2860:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2860:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2848:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2848:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2826:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2833:3:12",
														"type": ""
													}
												],
												"src": "2773:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2995:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3005:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3017:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3028:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3013:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3013:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3005:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3085:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3098:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3109:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3094:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3094:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3041:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3041:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3041:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2967:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2979:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2990:4:12",
														"type": ""
													}
												],
												"src": "2897:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3188:260:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3234:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3236:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3236:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3236:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3209:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3218:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3205:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3205:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3230:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3201:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3201:32:12"
															},
															"nodeType": "YulIf",
															"src": "3198:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3327:114:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3342:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3356:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3346:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3371:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3403:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3414:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3399:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3399:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3423:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3381:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3381:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3371:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3158:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3169:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3181:6:12",
														"type": ""
													}
												],
												"src": "3125:323:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3658:448:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3668:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3680:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3691:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3676:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3676:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3668:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3749:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3762:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3773:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3758:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3758:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3705:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3705:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3705:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3830:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3843:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3854:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3839:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3839:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3786:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3786:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3786:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3912:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3925:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3936:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3921:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3921:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3868:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3868:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3868:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3994:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4007:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4018:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4003:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4003:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3950:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3950:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "4070:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4083:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4079:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4079:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4032:37:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4032:67:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4032:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3598:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3610:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3618:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3626:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3634:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3642:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3653:4:12",
														"type": ""
													}
												],
												"src": "3454:652:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4201:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4218:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4221:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4211:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4211:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4211:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4112:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4324:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4341:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4344:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4334:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4334:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4334:12:12"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "4235:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4447:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4464:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4467:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4457:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4457:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4457:12:12"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "4358:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:478:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4637:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4639:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4639:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4639:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4616:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4624:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4612:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4612:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4631:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4608:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4608:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4601:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4601:35:12"
															},
															"nodeType": "YulIf",
															"src": "4598:122:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4729:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4752:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4739:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4739:20:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4729:6:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4802:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "4804:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4804:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4804:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4774:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4782:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4771:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4771:30:12"
															},
															"nodeType": "YulIf",
															"src": "4768:117:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4894:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4910:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4918:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4906:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4906:17:12"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "4894:8:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4977:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "4979:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4979:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4979:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "4942:8:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "4956:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4964:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4952:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4952:17:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4938:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4938:32:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4935:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4935:41:12"
															},
															"nodeType": "YulIf",
															"src": "4932:128:12"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4555:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4563:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "4571:8:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4581:6:12",
														"type": ""
													}
												],
												"src": "4498:568:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5179:478:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5228:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "5230:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5230:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5230:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5207:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5215:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5203:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5203:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5222:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5199:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5199:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5192:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5192:35:12"
															},
															"nodeType": "YulIf",
															"src": "5189:122:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5320:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5343:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5330:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5330:20:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5320:6:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5393:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "5395:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5395:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5395:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5365:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5373:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5362:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5362:30:12"
															},
															"nodeType": "YulIf",
															"src": "5359:117:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5485:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5501:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5509:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5497:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5497:17:12"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "5485:8:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5568:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "5570:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5570:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5570:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "5533:8:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "5547:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5555:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "5543:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5543:17:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5529:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5529:32:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5563:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5526:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5526:41:12"
															},
															"nodeType": "YulIf",
															"src": "5523:128:12"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5146:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5154:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "5162:8:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5172:6:12",
														"type": ""
													}
												],
												"src": "5089:568:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5816:781:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5862:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5864:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5864:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5864:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5837:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5846:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5833:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5833:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5858:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5829:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5829:32:12"
															},
															"nodeType": "YulIf",
															"src": "5826:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "5955:312:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5970:45:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6001:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6012:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5997:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5997:17:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5984:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5984:31:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5974:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6062:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6064:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6064:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6064:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6034:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6042:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6031:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6031:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "6028:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6159:98:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6229:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6240:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6225:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6225:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6249:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6177:47:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6177:80:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6159:6:12"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6167:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6277:313:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6292:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6323:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6334:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6319:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6319:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6306:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6306:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6296:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6385:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6387:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6387:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6387:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6357:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6365:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6354:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6354:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "6351:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6482:98:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6552:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6563:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6548:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6548:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6572:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6500:47:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6500:80:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6482:6:12"
																		},
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "6490:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5762:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5773:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5785:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5793:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5801:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5809:6:12",
														"type": ""
													}
												],
												"src": "5663:934:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6646:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6703:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6712:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6715:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6705:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6705:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6705:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6669:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6694:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6676:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6676:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6666:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6666:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6659:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6659:43:12"
															},
															"nodeType": "YulIf",
															"src": "6656:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6639:5:12",
														"type": ""
													}
												],
												"src": "6603:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6783:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6793:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6815:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6802:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6802:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6793:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6858:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6831:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6831:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6831:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6761:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6769:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6777:5:12",
														"type": ""
													}
												],
												"src": "6731:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6942:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6988:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6990:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6990:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6990:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6963:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6972:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6959:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6959:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6984:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6955:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6955:32:12"
															},
															"nodeType": "YulIf",
															"src": "6952:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "7081:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7096:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7110:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7100:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7125:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7160:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7171:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7156:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7156:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7180:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7135:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7135:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7125:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6912:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6923:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6935:6:12",
														"type": ""
													}
												],
												"src": "6876:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7243:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7253:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7260:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7253:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7229:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7239:3:12",
														"type": ""
													}
												],
												"src": "7211:60:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7337:82:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7347:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7405:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "7387:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7387:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "7378:8:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7378:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7360:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7360:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7347:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7317:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7327:9:12",
														"type": ""
													}
												],
												"src": "7277:142:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7485:66:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7495:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7539:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7508:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7508:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7495:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7465:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7475:9:12",
														"type": ""
													}
												],
												"src": "7425:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7631:66:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7641:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7685:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7654:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7654:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7641:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$380_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7611:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7621:9:12",
														"type": ""
													}
												],
												"src": "7557:140:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7782:80:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7799:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7849:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$380_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7804:44:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7804:51:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7792:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7792:64:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7792:64:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7770:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7777:3:12",
														"type": ""
													}
												],
												"src": "7703:159:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7980:138:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7990:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8002:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8013:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7998:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7998:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7990:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8084:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8097:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8108:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8093:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8093:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8026:57:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8026:85:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8026:85:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7952:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7964:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7975:4:12",
														"type": ""
													}
												],
												"src": "7868:250:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8152:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8169:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8172:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8162:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8162:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8162:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8266:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8269:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8259:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8259:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8259:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8290:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8293:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8283:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8283:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8283:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8124:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8355:149:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8365:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8388:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8370:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8370:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8365:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8399:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8422:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8404:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8404:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8399:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8433:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8445:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8448:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8441:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8441:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8433:4:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8475:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8477:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8477:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8477:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "8466:4:12"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8472:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8463:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8463:11:12"
															},
															"nodeType": "YulIf",
															"src": "8460:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8341:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8344:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8350:4:12",
														"type": ""
													}
												],
												"src": "8310:194:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8606:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8623:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8628:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8616:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8616:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8616:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8644:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8663:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8668:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8659:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8659:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8644:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8578:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8583:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8594:11:12",
														"type": ""
													}
												],
												"src": "8510:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8791:61:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8813:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8821:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8809:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8809:14:12"
																	},
																	{
																		"hexValue": "436c61696d206e6f7420656e61626c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8825:19:12",
																		"type": "",
																		"value": "Claim not enabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8802:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8802:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8802:43:12"
														}
													]
												},
												"name": "store_literal_in_memory_77cbf9fd39f60bad341ce3c780ba8384d54d093463ea9f33c9f1ea5e2cb56381",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8783:6:12",
														"type": ""
													}
												],
												"src": "8685:167:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9004:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9014:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9080:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9085:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9021:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9021:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9014:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9186:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_77cbf9fd39f60bad341ce3c780ba8384d54d093463ea9f33c9f1ea5e2cb56381",
																	"nodeType": "YulIdentifier",
																	"src": "9097:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9097:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9097:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9199:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9210:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9215:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9206:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9206:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9199:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_77cbf9fd39f60bad341ce3c780ba8384d54d093463ea9f33c9f1ea5e2cb56381_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8992:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9000:3:12",
														"type": ""
													}
												],
												"src": "8858:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9401:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9411:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9423:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9434:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9419:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9419:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9411:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9458:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9469:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9454:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9454:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9477:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9483:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9473:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9473:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9447:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9447:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9447:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9503:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9637:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_77cbf9fd39f60bad341ce3c780ba8384d54d093463ea9f33c9f1ea5e2cb56381_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9511:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9511:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9503:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_77cbf9fd39f60bad341ce3c780ba8384d54d093463ea9f33c9f1ea5e2cb56381__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9381:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9396:4:12",
														"type": ""
													}
												],
												"src": "9230:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9761:74:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9783:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9791:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9779:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9779:14:12"
																	},
																	{
																		"hexValue": "436c61696d20626c6f636b656420666f7220746869732061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9795:32:12",
																		"type": "",
																		"value": "Claim blocked for this address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9772:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9772:56:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9772:56:12"
														}
													]
												},
												"name": "store_literal_in_memory_c157683f76319e17b2ecf3ad3b64a005df2e617c7482e566664acd2683cbe83f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9753:6:12",
														"type": ""
													}
												],
												"src": "9655:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9987:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9997:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10063:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10068:2:12",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10004:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10004:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9997:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10169:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c157683f76319e17b2ecf3ad3b64a005df2e617c7482e566664acd2683cbe83f",
																	"nodeType": "YulIdentifier",
																	"src": "10080:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10080:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10080:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10182:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10193:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10198:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10189:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10189:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10182:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c157683f76319e17b2ecf3ad3b64a005df2e617c7482e566664acd2683cbe83f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9975:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9983:3:12",
														"type": ""
													}
												],
												"src": "9841:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10384:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10394:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10406:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10417:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10402:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10402:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10394:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10441:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10452:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10437:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10437:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10460:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10466:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10456:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10456:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10430:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10430:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10430:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10486:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10620:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c157683f76319e17b2ecf3ad3b64a005df2e617c7482e566664acd2683cbe83f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10494:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10494:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10486:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c157683f76319e17b2ecf3ad3b64a005df2e617c7482e566664acd2683cbe83f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10364:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10379:4:12",
														"type": ""
													}
												],
												"src": "10213:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10744:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10766:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10774:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10762:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10762:14:12"
																	},
																	{
																		"hexValue": "417070726f76616c20666565206e6f742070616964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10778:23:12",
																		"type": "",
																		"value": "Approval fee not paid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10755:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10755:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10755:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_da6ac7f3115479cdf80fe6763cd7f0188752323abfcf442f06ceefe0e8137a18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10736:6:12",
														"type": ""
													}
												],
												"src": "10638:171:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10961:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10971:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11037:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11042:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10978:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10978:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10971:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11143:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da6ac7f3115479cdf80fe6763cd7f0188752323abfcf442f06ceefe0e8137a18",
																	"nodeType": "YulIdentifier",
																	"src": "11054:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11054:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11054:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11156:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11167:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11172:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11163:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11163:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11156:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da6ac7f3115479cdf80fe6763cd7f0188752323abfcf442f06ceefe0e8137a18_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10949:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10957:3:12",
														"type": ""
													}
												],
												"src": "10815:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11358:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11368:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11380:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11391:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11376:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11376:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11368:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11415:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11426:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11411:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11411:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11434:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11440:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11430:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11430:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11404:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11404:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11404:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11460:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11594:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da6ac7f3115479cdf80fe6763cd7f0188752323abfcf442f06ceefe0e8137a18_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11468:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11468:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11460:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da6ac7f3115479cdf80fe6763cd7f0188752323abfcf442f06ceefe0e8137a18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11338:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11353:4:12",
														"type": ""
													}
												],
												"src": "11187:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11718:72:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11740:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11748:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11736:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11736:14:12"
																	},
																	{
																		"hexValue": "596f752068617665206e6f2062616c616e636520746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11752:30:12",
																		"type": "",
																		"value": "You have no balance to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11729:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11729:54:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11729:54:12"
														}
													]
												},
												"name": "store_literal_in_memory_5f7d0aaffc01656dfd5035f8ff7e371b4518722e7cb53e5b13bdbbf882c62dac",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11710:6:12",
														"type": ""
													}
												],
												"src": "11612:178:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11942:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11952:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12018:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12023:2:12",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11959:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11959:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11952:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12124:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5f7d0aaffc01656dfd5035f8ff7e371b4518722e7cb53e5b13bdbbf882c62dac",
																	"nodeType": "YulIdentifier",
																	"src": "12035:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12035:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12035:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12137:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12148:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12153:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12144:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12144:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12137:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5f7d0aaffc01656dfd5035f8ff7e371b4518722e7cb53e5b13bdbbf882c62dac_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11930:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11938:3:12",
														"type": ""
													}
												],
												"src": "11796:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12339:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12349:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12361:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12372:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12357:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12357:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12349:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12396:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12407:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12392:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12392:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12415:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12421:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12411:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12411:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12385:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12385:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12385:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12441:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12575:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5f7d0aaffc01656dfd5035f8ff7e371b4518722e7cb53e5b13bdbbf882c62dac_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12449:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12449:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12441:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5f7d0aaffc01656dfd5035f8ff7e371b4518722e7cb53e5b13bdbbf882c62dac__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12319:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12334:4:12",
														"type": ""
													}
												],
												"src": "12168:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12636:190:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12646:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12673:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12655:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12655:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12646:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12769:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12771:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12771:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12771:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12694:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12701:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12691:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12691:77:12"
															},
															"nodeType": "YulIf",
															"src": "12688:103:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12800:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12811:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12818:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12807:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12807:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12800:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12622:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12632:3:12",
														"type": ""
													}
												],
												"src": "12593:233:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12876:147:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12886:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12909:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12891:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12891:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12886:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12920:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12943:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12925:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12925:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12920:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12954:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12965:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12968:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12961:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12961:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12954:3:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12994:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12996:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12996:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12996:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12986:1:12"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "12989:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12983:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12983:10:12"
															},
															"nodeType": "YulIf",
															"src": "12980:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12863:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12866:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12872:3:12",
														"type": ""
													}
												],
												"src": "12832:191:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13092:80:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13102:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13117:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13111:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13111:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13102:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13160:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13133:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13133:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13133:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13070:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13078:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13086:5:12",
														"type": ""
													}
												],
												"src": "13029:143:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13255:274:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13301:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13303:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13303:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13303:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13276:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13285:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13272:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13272:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13297:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13268:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13268:32:12"
															},
															"nodeType": "YulIf",
															"src": "13265:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "13394:128:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13409:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13423:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13413:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13438:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13484:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13495:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13480:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13480:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13504:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13448:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13448:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13438:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13225:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13236:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13248:6:12",
														"type": ""
													}
												],
												"src": "13178:351:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13641:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13663:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13671:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13659:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13659:14:12"
																	},
																	{
																		"hexValue": "496e636f72726563742066656520616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13675:22:12",
																		"type": "",
																		"value": "Incorrect fee amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13652:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13652:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13652:46:12"
														}
													]
												},
												"name": "store_literal_in_memory_4ab3f952ba26a94d88e8cd9fe7400356e417913015cdeb4af2c4bbd982e459f1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13633:6:12",
														"type": ""
													}
												],
												"src": "13535:170:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13857:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13867:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13933:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13938:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13874:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13874:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13867:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14039:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4ab3f952ba26a94d88e8cd9fe7400356e417913015cdeb4af2c4bbd982e459f1",
																	"nodeType": "YulIdentifier",
																	"src": "13950:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13950:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13950:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14052:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14063:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14068:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14059:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14059:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14052:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4ab3f952ba26a94d88e8cd9fe7400356e417913015cdeb4af2c4bbd982e459f1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13845:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13853:3:12",
														"type": ""
													}
												],
												"src": "13711:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14254:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14264:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14276:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14287:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14272:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14272:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14264:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14311:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14322:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14307:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14307:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14330:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14336:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14326:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14326:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14300:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14300:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14300:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14356:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14490:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4ab3f952ba26a94d88e8cd9fe7400356e417913015cdeb4af2c4bbd982e459f1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14364:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14364:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14356:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4ab3f952ba26a94d88e8cd9fe7400356e417913015cdeb4af2c4bbd982e459f1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14234:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14249:4:12",
														"type": ""
													}
												],
												"src": "14083:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14614:70:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14636:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14644:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14632:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14632:14:12"
																	},
																	{
																		"hexValue": "4172726179206c656e6774687320646f206e6f74206d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14648:28:12",
																		"type": "",
																		"value": "Array lengths do not match"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14625:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14625:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14625:52:12"
														}
													]
												},
												"name": "store_literal_in_memory_c9fda3bf08e7edf126ed19c887ac2339ed77973707baa0165c9c06cf0e4c6eb7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14606:6:12",
														"type": ""
													}
												],
												"src": "14508:176:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14836:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14846:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14912:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14917:2:12",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14853:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14853:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14846:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15018:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c9fda3bf08e7edf126ed19c887ac2339ed77973707baa0165c9c06cf0e4c6eb7",
																	"nodeType": "YulIdentifier",
																	"src": "14929:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14929:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14929:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15031:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15042:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15047:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15038:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15038:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15031:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c9fda3bf08e7edf126ed19c887ac2339ed77973707baa0165c9c06cf0e4c6eb7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14824:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14832:3:12",
														"type": ""
													}
												],
												"src": "14690:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15233:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15243:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15255:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15266:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15251:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15251:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15243:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15290:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15301:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15286:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15286:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15309:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15315:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15305:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15305:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15279:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15279:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15279:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15335:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15469:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c9fda3bf08e7edf126ed19c887ac2339ed77973707baa0165c9c06cf0e4c6eb7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15343:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15343:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15335:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c9fda3bf08e7edf126ed19c887ac2339ed77973707baa0165c9c06cf0e4c6eb7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15213:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15228:4:12",
														"type": ""
													}
												],
												"src": "15062:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15515:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15532:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15535:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15525:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15525:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15525:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15629:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15632:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15622:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15622:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15622:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15653:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15656:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15646:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15646:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15646:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15487:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15721:362:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15731:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15754:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15736:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15736:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15731:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15765:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15788:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15770:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15770:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15765:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15799:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15822:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15825:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "15818:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15818:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "15803:11:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15836:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "15865:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15847:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15847:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "15836:7:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16054:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16056:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16056:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16056:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15987:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "15980:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15980:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "16010:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "16017:7:12"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "16026:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "16013:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16013:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "16007:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16007:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "15960:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15960:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15940:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15940:113:12"
															},
															"nodeType": "YulIf",
															"src": "15937:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15704:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15707:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "15713:7:12",
														"type": ""
													}
												],
												"src": "15673:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16195:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16217:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16225:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16213:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16213:14:12"
																	},
																	{
																		"hexValue": "43616e6e6f74206265206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16229:22:12",
																		"type": "",
																		"value": "Cannot be a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16206:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16206:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16206:46:12"
														}
													]
												},
												"name": "store_literal_in_memory_47cc3508f6aac3bd824d766ddbb7b6e1aaf29363a0d18fbe33bd1d4f7dad8ff4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16187:6:12",
														"type": ""
													}
												],
												"src": "16089:170:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16411:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16421:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16487:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16492:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16428:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16428:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16421:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16593:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47cc3508f6aac3bd824d766ddbb7b6e1aaf29363a0d18fbe33bd1d4f7dad8ff4",
																	"nodeType": "YulIdentifier",
																	"src": "16504:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16504:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16504:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16606:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16617:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16622:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16613:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16613:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16606:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47cc3508f6aac3bd824d766ddbb7b6e1aaf29363a0d18fbe33bd1d4f7dad8ff4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16399:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16407:3:12",
														"type": ""
													}
												],
												"src": "16265:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16808:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16818:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16830:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16841:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16826:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16826:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16818:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16865:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16876:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16861:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16861:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16884:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16890:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16880:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16880:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16854:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16854:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16854:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16910:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17044:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47cc3508f6aac3bd824d766ddbb7b6e1aaf29363a0d18fbe33bd1d4f7dad8ff4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16918:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16918:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16910:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47cc3508f6aac3bd824d766ddbb7b6e1aaf29363a0d18fbe33bd1d4f7dad8ff4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16788:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16803:4:12",
														"type": ""
													}
												],
												"src": "16637:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17168:76:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17190:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17198:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17186:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17186:14:12"
																	},
																	{
																		"hexValue": "416c6c6f636174696f6e206578636565647320616c6c6f776564206c696d6974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17202:34:12",
																		"type": "",
																		"value": "Allocation exceeds allowed limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17179:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17179:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17179:58:12"
														}
													]
												},
												"name": "store_literal_in_memory_09b028424e7075cc04406e7de0a34b8a92bf5c23491cc707198b52e233f86317",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17160:6:12",
														"type": ""
													}
												],
												"src": "17062:182:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17396:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17406:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17472:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17477:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17413:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17413:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17406:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17578:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_09b028424e7075cc04406e7de0a34b8a92bf5c23491cc707198b52e233f86317",
																	"nodeType": "YulIdentifier",
																	"src": "17489:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17489:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17489:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17591:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17602:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17607:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17598:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17598:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17591:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_09b028424e7075cc04406e7de0a34b8a92bf5c23491cc707198b52e233f86317_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17384:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17392:3:12",
														"type": ""
													}
												],
												"src": "17250:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17793:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17803:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17815:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17826:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17811:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17811:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17803:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17850:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17861:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17846:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17846:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17869:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17875:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17865:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17865:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17839:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17839:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17839:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17895:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18029:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_09b028424e7075cc04406e7de0a34b8a92bf5c23491cc707198b52e233f86317_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17903:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17903:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17895:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_09b028424e7075cc04406e7de0a34b8a92bf5c23491cc707198b52e233f86317__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17773:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17788:4:12",
														"type": ""
													}
												],
												"src": "17622:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18173:206:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18183:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18195:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18206:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18191:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18191:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18183:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18263:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18276:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18287:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18272:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18272:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18219:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18219:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18219:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18344:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18357:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18368:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18353:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18353:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18300:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18300:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18300:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18137:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18149:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18157:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18168:4:12",
														"type": ""
													}
												],
												"src": "18047:332:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18491:125:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18513:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18521:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18509:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18509:14:12"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18525:34:12",
																		"type": "",
																		"value": "Insufficient contract balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18502:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18502:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18502:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18581:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18589:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18577:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18577:15:12"
																	},
																	{
																		"hexValue": "7220616c6c6f636174696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18594:14:12",
																		"type": "",
																		"value": "r allocation"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18570:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18570:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18570:39:12"
														}
													]
												},
												"name": "store_literal_in_memory_f7e30f3b25afa0381893df785dd0991eeb72d50d15b48d0285083bf32818e6eb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18483:6:12",
														"type": ""
													}
												],
												"src": "18385:231:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18768:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18778:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18844:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18849:2:12",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18785:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18785:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18778:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18950:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f7e30f3b25afa0381893df785dd0991eeb72d50d15b48d0285083bf32818e6eb",
																	"nodeType": "YulIdentifier",
																	"src": "18861:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18861:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18861:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18963:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18974:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18979:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18970:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18970:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18963:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f7e30f3b25afa0381893df785dd0991eeb72d50d15b48d0285083bf32818e6eb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18756:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18764:3:12",
														"type": ""
													}
												],
												"src": "18622:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19165:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19175:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19187:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19198:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19183:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19183:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19175:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19222:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19233:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19218:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19218:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19241:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19247:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19237:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19237:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19211:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19211:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19211:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19267:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19401:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f7e30f3b25afa0381893df785dd0991eeb72d50d15b48d0285083bf32818e6eb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19275:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19275:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19267:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f7e30f3b25afa0381893df785dd0991eeb72d50d15b48d0285083bf32818e6eb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19145:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19160:4:12",
														"type": ""
													}
												],
												"src": "18994:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19530:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19547:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19552:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19540:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19540:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19540:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19568:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19587:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19592:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19583:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19583:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "19568:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19502:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19507:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "19518:11:12",
														"type": ""
													}
												],
												"src": "19419:184:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19683:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19693:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "19701:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "19693:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "19670:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "19678:4:12",
														"type": ""
													}
												],
												"src": "19609:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19772:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19789:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19812:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19794:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19794:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19782:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19782:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19782:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19760:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19767:3:12",
														"type": ""
													}
												],
												"src": "19717:108:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19911:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19955:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19963:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "19921:33:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19921:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19921:46:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19976:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19994:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19999:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19990:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19990:14:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "19976:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19884:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19892:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "19900:10:12",
														"type": ""
													}
												],
												"src": "19831:179:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20074:64:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20084:48:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "20114:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "20123:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20128:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20119:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20119:12:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "20093:20:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20093:39:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20084:5:12"
																}
															]
														}
													]
												},
												"name": "calldata_access_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "baseRef",
														"nodeType": "YulTypedName",
														"src": "20051:7:12",
														"type": ""
													},
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "20060:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20068:5:12",
														"type": ""
													}
												],
												"src": "20016:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20221:38:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20231:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "20243:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20248:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20239:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20239:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "20231:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "20208:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "20216:4:12",
														"type": ""
													}
												],
												"src": "20144:115:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20429:565:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20440:93:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20521:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20526:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20447:73:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20447:86:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20440:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20542:73:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20609:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_calldata_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "20557:51:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20557:58:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "20546:7:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20624:21:12",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "20638:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "20628:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20714:255:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "20728:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "baseRef",
																					"nodeType": "YulIdentifier",
																					"src": "20775:7:12"
																				},
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "20784:6:12"
																				}
																			],
																			"functionName": {
																				"name": "calldata_access_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "20749:25:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20749:42:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "20732:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "20804:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "20855:13:12"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "20870:3:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "20811:43:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20811:63:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "20804:3:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "20887:72:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "20952:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_calldata_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "20897:54:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20897:62:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20887:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "20676:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20679:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20673:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20673:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "20687:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "20689:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "20698:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20701:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "20694:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20694:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "20689:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "20658:14:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "20660:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "20669:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "20664:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "20654:315:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20978:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "20985:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20978:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20400:5:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20407:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20415:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20424:3:12",
														"type": ""
													}
												],
												"src": "20295:699:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21111:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21128:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21133:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21121:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21121:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21121:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21149:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21168:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21173:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21164:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21164:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "21149:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21083:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21088:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "21099:11:12",
														"type": ""
													}
												],
												"src": "21000:184:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21279:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21296:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21299:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21289:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21289:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21289:12:12"
														}
													]
												},
												"name": "revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec",
												"nodeType": "YulFunctionDefinition",
												"src": "21190:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21364:47:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "21387:3:12"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "21392:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21397:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "21374:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21374:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21374:30:12"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "21346:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "21351:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21356:6:12",
														"type": ""
													}
												],
												"src": "21313:98:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21579:405:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21589:93:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21670:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21675:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21596:73:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21596:86:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21589:3:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21774:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec",
																				"nodeType": "YulIdentifier",
																				"src": "21776:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21776:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21776:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21698:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21706:66:12",
																		"type": "",
																		"value": "0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21695:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21695:78:12"
															},
															"nodeType": "YulIf",
															"src": "21692:165:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21866:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21880:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21888:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "21876:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21876:17:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "21866:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "21927:5:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21934:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21939:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "21903:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21903:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21903:43:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21955:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21966:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21971:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21962:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21962:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21955:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "21552:5:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21559:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21567:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21575:3:12",
														"type": ""
													}
												],
												"src": "21447:537:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22236:428:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22246:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22258:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22269:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22254:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22254:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22246:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22293:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22304:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22289:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22289:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22312:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22318:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22308:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22308:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22282:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22282:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22282:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22338:126:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22442:6:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22450:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22459:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22346:95:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22346:118:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22338:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22485:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22496:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22481:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22481:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22505:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22511:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22501:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22501:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22474:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22474:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22474:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22531:126:12",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "22635:6:12"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "22643:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22652:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22539:95:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22539:118:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22531:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22184:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "22196:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "22204:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22212:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22220:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22231:4:12",
														"type": ""
													}
												],
												"src": "21990:674:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22776:67:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22798:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22806:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22794:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22794:14:12"
																	},
																	{
																		"hexValue": "436f6e747261637420686173206e6f2062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22810:25:12",
																		"type": "",
																		"value": "Contract has no balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22787:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22787:49:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22787:49:12"
														}
													]
												},
												"name": "store_literal_in_memory_a8b5978deb0070b60a19e8fdeecf8ef51086f86967d5f1f8e0dedc934d5c10bd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22768:6:12",
														"type": ""
													}
												],
												"src": "22670:173:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22995:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23005:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23071:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23076:2:12",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23012:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23012:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23005:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23177:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a8b5978deb0070b60a19e8fdeecf8ef51086f86967d5f1f8e0dedc934d5c10bd",
																	"nodeType": "YulIdentifier",
																	"src": "23088:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23088:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23088:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23190:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23201:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23206:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23197:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23197:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23190:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a8b5978deb0070b60a19e8fdeecf8ef51086f86967d5f1f8e0dedc934d5c10bd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22983:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22991:3:12",
														"type": ""
													}
												],
												"src": "22849:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23392:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23402:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23414:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23425:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23410:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23410:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23402:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23449:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23460:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23445:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23445:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23468:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23474:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23464:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23464:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23438:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23438:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23438:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23494:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23628:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a8b5978deb0070b60a19e8fdeecf8ef51086f86967d5f1f8e0dedc934d5c10bd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23502:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23502:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23494:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a8b5978deb0070b60a19e8fdeecf8ef51086f86967d5f1f8e0dedc934d5c10bd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23372:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23387:4:12",
														"type": ""
													}
												],
												"src": "23221:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23752:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23774:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23782:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23770:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23770:14:12"
																	},
																	{
																		"hexValue": "436f6f6c646f776e20696e2070726f6772657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23786:22:12",
																		"type": "",
																		"value": "Cooldown in progress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23763:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23763:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23763:46:12"
														}
													]
												},
												"name": "store_literal_in_memory_6297d24594bfa03e2a0a0fbc6cd2992fe82d84e656571e892bd1b398a0254eca",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23744:6:12",
														"type": ""
													}
												],
												"src": "23646:170:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23968:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23978:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24044:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24049:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23985:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23985:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23978:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24150:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6297d24594bfa03e2a0a0fbc6cd2992fe82d84e656571e892bd1b398a0254eca",
																	"nodeType": "YulIdentifier",
																	"src": "24061:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24061:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24061:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24163:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24174:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24179:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24170:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24170:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24163:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6297d24594bfa03e2a0a0fbc6cd2992fe82d84e656571e892bd1b398a0254eca_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23956:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23964:3:12",
														"type": ""
													}
												],
												"src": "23822:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24365:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24375:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24387:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24398:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24383:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24383:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24375:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24422:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24433:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24418:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24418:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24441:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24447:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24437:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24437:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24411:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24411:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24411:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24467:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24601:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6297d24594bfa03e2a0a0fbc6cd2992fe82d84e656571e892bd1b398a0254eca_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24475:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24475:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24467:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6297d24594bfa03e2a0a0fbc6cd2992fe82d84e656571e892bd1b398a0254eca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24345:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24360:4:12",
														"type": ""
													}
												],
												"src": "24194:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24725:114:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24747:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24755:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24743:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24743:14:12"
																	},
																	{
																		"hexValue": "4e6f20756e616c6c6f636174656420746f6b656e7320746f2077697468647261",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24759:34:12",
																		"type": "",
																		"value": "No unallocated tokens to withdra"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24736:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24736:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24736:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24815:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24823:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24811:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24811:15:12"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24828:3:12",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24804:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24804:28:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24804:28:12"
														}
													]
												},
												"name": "store_literal_in_memory_e60dd92c4aa53d7953fb339065eb9ffa879f2aff7dc3476c17258b4864fb63c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24717:6:12",
														"type": ""
													}
												],
												"src": "24619:220:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24991:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25001:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25067:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25072:2:12",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25008:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25008:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25001:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25173:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e60dd92c4aa53d7953fb339065eb9ffa879f2aff7dc3476c17258b4864fb63c2",
																	"nodeType": "YulIdentifier",
																	"src": "25084:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25084:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25084:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25186:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25197:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25202:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25193:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25193:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25186:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e60dd92c4aa53d7953fb339065eb9ffa879f2aff7dc3476c17258b4864fb63c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24979:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24987:3:12",
														"type": ""
													}
												],
												"src": "24845:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25388:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25398:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25410:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25421:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25406:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25406:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25398:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25445:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25456:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25441:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25441:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25464:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25470:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25460:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25460:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25434:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25434:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25434:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25490:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25624:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e60dd92c4aa53d7953fb339065eb9ffa879f2aff7dc3476c17258b4864fb63c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25498:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25498:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25490:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e60dd92c4aa53d7953fb339065eb9ffa879f2aff7dc3476c17258b4864fb63c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25368:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25383:4:12",
														"type": ""
													}
												],
												"src": "25217:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25748:121:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25770:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25778:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25766:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25766:14:12"
																	},
																	{
																		"hexValue": "4465706f73697420616d6f756e74206d75737420626520677265617465722074",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25782:34:12",
																		"type": "",
																		"value": "Deposit amount must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25759:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25759:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25759:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25838:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25846:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25834:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25834:15:12"
																	},
																	{
																		"hexValue": "68616e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25851:10:12",
																		"type": "",
																		"value": "han zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25827:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25827:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25827:35:12"
														}
													]
												},
												"name": "store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25740:6:12",
														"type": ""
													}
												],
												"src": "25642:227:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26021:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26031:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26097:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26102:2:12",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26038:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26038:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26031:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26203:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																	"nodeType": "YulIdentifier",
																	"src": "26114:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26114:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26114:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26216:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26227:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26232:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26223:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26223:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26216:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26009:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26017:3:12",
														"type": ""
													}
												],
												"src": "25875:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26418:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26428:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26440:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26451:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26436:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26436:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26428:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26475:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26486:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26471:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26471:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26494:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26500:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26490:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26490:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26464:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26464:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26464:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26520:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26654:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26528:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26528:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26520:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26398:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26413:4:12",
														"type": ""
													}
												],
												"src": "26247:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26778:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26800:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26808:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26796:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26796:14:12"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26812:22:12",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26789:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26789:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26789:46:12"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26770:6:12",
														"type": ""
													}
												],
												"src": "26672:170:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26994:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27004:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27070:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27075:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27011:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27011:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27004:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27176:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nodeType": "YulIdentifier",
																	"src": "27087:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27087:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27087:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27189:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27200:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27205:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27196:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27196:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27189:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26982:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26990:3:12",
														"type": ""
													}
												],
												"src": "26848:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27391:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27401:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27413:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27424:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27409:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27409:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27401:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27448:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27459:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27444:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27444:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27467:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27473:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27463:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27463:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27437:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27437:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27437:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27493:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27627:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27501:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27501:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27493:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27371:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27386:4:12",
														"type": ""
													}
												],
												"src": "27220:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27751:63:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27773:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27781:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27769:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27769:14:12"
																	},
																	{
																		"hexValue": "4e6f206665657320746f207769746864726177",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27785:21:12",
																		"type": "",
																		"value": "No fees to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27762:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27762:45:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27762:45:12"
														}
													]
												},
												"name": "store_literal_in_memory_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27743:6:12",
														"type": ""
													}
												],
												"src": "27645:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27966:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27976:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28042:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28047:2:12",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27983:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27983:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27976:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28148:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c",
																	"nodeType": "YulIdentifier",
																	"src": "28059:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28059:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28059:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28161:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28172:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28177:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28168:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28168:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28161:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27954:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27962:3:12",
														"type": ""
													}
												],
												"src": "27820:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28363:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28373:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28385:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28396:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28381:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28381:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28373:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28420:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28431:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28416:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28416:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28439:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28445:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28435:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28435:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28409:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28409:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28409:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28465:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28599:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28473:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28473:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28465:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28343:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28358:4:12",
														"type": ""
													}
												],
												"src": "28192:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28723:75:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28745:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28753:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28741:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28741:14:12"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28757:33:12",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28734:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28734:57:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28734:57:12"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28715:6:12",
														"type": ""
													}
												],
												"src": "28617:181:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28950:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28960:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29026:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29031:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28967:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28967:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28960:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29132:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "29043:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29043:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29043:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29145:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29156:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29161:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29152:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29152:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "29145:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28938:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28946:3:12",
														"type": ""
													}
												],
												"src": "28804:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29347:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29357:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29369:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29380:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29365:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29365:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29357:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29404:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29415:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29400:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29400:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29423:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29429:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29419:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29419:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29393:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29393:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29393:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29449:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29583:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29457:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29457:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29449:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29327:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29342:4:12",
														"type": ""
													}
												],
												"src": "29176:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29727:206:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29737:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29749:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29760:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29745:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29745:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29737:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "29817:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29830:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29841:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29826:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29826:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29773:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29773:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29773:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "29898:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29911:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29922:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29907:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29907:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29854:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29854:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29854:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29691:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "29703:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "29711:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29722:4:12",
														"type": ""
													}
												],
												"src": "29601:332:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30093:288:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30103:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30115:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30126:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30111:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30111:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30103:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "30183:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30196:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30207:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30192:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30192:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30139:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30139:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30139:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "30264:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30277:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30288:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30273:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30273:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30220:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30220:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30220:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "30346:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30359:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30370:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30355:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30355:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30302:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30302:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30302:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30049:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "30061:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "30069:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "30077:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30088:4:12",
														"type": ""
													}
												],
												"src": "29939:442:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$380_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$380_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_77cbf9fd39f60bad341ce3c780ba8384d54d093463ea9f33c9f1ea5e2cb56381(memPtr) {\n\n        mstore(add(memPtr, 0), \"Claim not enabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_77cbf9fd39f60bad341ce3c780ba8384d54d093463ea9f33c9f1ea5e2cb56381_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_77cbf9fd39f60bad341ce3c780ba8384d54d093463ea9f33c9f1ea5e2cb56381(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_77cbf9fd39f60bad341ce3c780ba8384d54d093463ea9f33c9f1ea5e2cb56381__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_77cbf9fd39f60bad341ce3c780ba8384d54d093463ea9f33c9f1ea5e2cb56381_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c157683f76319e17b2ecf3ad3b64a005df2e617c7482e566664acd2683cbe83f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Claim blocked for this address\")\n\n    }\n\n    function abi_encode_t_stringliteral_c157683f76319e17b2ecf3ad3b64a005df2e617c7482e566664acd2683cbe83f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_c157683f76319e17b2ecf3ad3b64a005df2e617c7482e566664acd2683cbe83f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c157683f76319e17b2ecf3ad3b64a005df2e617c7482e566664acd2683cbe83f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c157683f76319e17b2ecf3ad3b64a005df2e617c7482e566664acd2683cbe83f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_da6ac7f3115479cdf80fe6763cd7f0188752323abfcf442f06ceefe0e8137a18(memPtr) {\n\n        mstore(add(memPtr, 0), \"Approval fee not paid\")\n\n    }\n\n    function abi_encode_t_stringliteral_da6ac7f3115479cdf80fe6763cd7f0188752323abfcf442f06ceefe0e8137a18_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_da6ac7f3115479cdf80fe6763cd7f0188752323abfcf442f06ceefe0e8137a18(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_da6ac7f3115479cdf80fe6763cd7f0188752323abfcf442f06ceefe0e8137a18__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_da6ac7f3115479cdf80fe6763cd7f0188752323abfcf442f06ceefe0e8137a18_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5f7d0aaffc01656dfd5035f8ff7e371b4518722e7cb53e5b13bdbbf882c62dac(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have no balance to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_5f7d0aaffc01656dfd5035f8ff7e371b4518722e7cb53e5b13bdbbf882c62dac_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_5f7d0aaffc01656dfd5035f8ff7e371b4518722e7cb53e5b13bdbbf882c62dac(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5f7d0aaffc01656dfd5035f8ff7e371b4518722e7cb53e5b13bdbbf882c62dac__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5f7d0aaffc01656dfd5035f8ff7e371b4518722e7cb53e5b13bdbbf882c62dac_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_4ab3f952ba26a94d88e8cd9fe7400356e417913015cdeb4af2c4bbd982e459f1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect fee amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_4ab3f952ba26a94d88e8cd9fe7400356e417913015cdeb4af2c4bbd982e459f1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_4ab3f952ba26a94d88e8cd9fe7400356e417913015cdeb4af2c4bbd982e459f1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4ab3f952ba26a94d88e8cd9fe7400356e417913015cdeb4af2c4bbd982e459f1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4ab3f952ba26a94d88e8cd9fe7400356e417913015cdeb4af2c4bbd982e459f1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c9fda3bf08e7edf126ed19c887ac2339ed77973707baa0165c9c06cf0e4c6eb7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Array lengths do not match\")\n\n    }\n\n    function abi_encode_t_stringliteral_c9fda3bf08e7edf126ed19c887ac2339ed77973707baa0165c9c06cf0e4c6eb7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_c9fda3bf08e7edf126ed19c887ac2339ed77973707baa0165c9c06cf0e4c6eb7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c9fda3bf08e7edf126ed19c887ac2339ed77973707baa0165c9c06cf0e4c6eb7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c9fda3bf08e7edf126ed19c887ac2339ed77973707baa0165c9c06cf0e4c6eb7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_47cc3508f6aac3bd824d766ddbb7b6e1aaf29363a0d18fbe33bd1d4f7dad8ff4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot be a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_47cc3508f6aac3bd824d766ddbb7b6e1aaf29363a0d18fbe33bd1d4f7dad8ff4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47cc3508f6aac3bd824d766ddbb7b6e1aaf29363a0d18fbe33bd1d4f7dad8ff4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47cc3508f6aac3bd824d766ddbb7b6e1aaf29363a0d18fbe33bd1d4f7dad8ff4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47cc3508f6aac3bd824d766ddbb7b6e1aaf29363a0d18fbe33bd1d4f7dad8ff4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_09b028424e7075cc04406e7de0a34b8a92bf5c23491cc707198b52e233f86317(memPtr) {\n\n        mstore(add(memPtr, 0), \"Allocation exceeds allowed limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_09b028424e7075cc04406e7de0a34b8a92bf5c23491cc707198b52e233f86317_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_09b028424e7075cc04406e7de0a34b8a92bf5c23491cc707198b52e233f86317(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_09b028424e7075cc04406e7de0a34b8a92bf5c23491cc707198b52e233f86317__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_09b028424e7075cc04406e7de0a34b8a92bf5c23491cc707198b52e233f86317_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_f7e30f3b25afa0381893df785dd0991eeb72d50d15b48d0285083bf32818e6eb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient contract balance fo\")\n\n        mstore(add(memPtr, 32), \"r allocation\")\n\n    }\n\n    function abi_encode_t_stringliteral_f7e30f3b25afa0381893df785dd0991eeb72d50d15b48d0285083bf32818e6eb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_f7e30f3b25afa0381893df785dd0991eeb72d50d15b48d0285083bf32818e6eb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f7e30f3b25afa0381893df785dd0991eeb72d50d15b48d0285083bf32818e6eb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f7e30f3b25afa0381893df785dd0991eeb72d50d15b48d0285083bf32818e6eb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function calldata_access_t_address(baseRef, ptr) -> value {\n        value := abi_decode_t_address(ptr, add(ptr, 32))\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_calldata_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, length, pos)  -> end  {\n\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_calldata_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := calldata_access_t_address(baseRef, srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_calldata_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec() {\n        revert(0, 0)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n\n        if gt(length, 0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec() }\n        length := mul(length, 0x20)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0, value1,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2, value3,  tail)\n\n    }\n\n    function store_literal_in_memory_a8b5978deb0070b60a19e8fdeecf8ef51086f86967d5f1f8e0dedc934d5c10bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract has no balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_a8b5978deb0070b60a19e8fdeecf8ef51086f86967d5f1f8e0dedc934d5c10bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_a8b5978deb0070b60a19e8fdeecf8ef51086f86967d5f1f8e0dedc934d5c10bd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a8b5978deb0070b60a19e8fdeecf8ef51086f86967d5f1f8e0dedc934d5c10bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a8b5978deb0070b60a19e8fdeecf8ef51086f86967d5f1f8e0dedc934d5c10bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6297d24594bfa03e2a0a0fbc6cd2992fe82d84e656571e892bd1b398a0254eca(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cooldown in progress\")\n\n    }\n\n    function abi_encode_t_stringliteral_6297d24594bfa03e2a0a0fbc6cd2992fe82d84e656571e892bd1b398a0254eca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_6297d24594bfa03e2a0a0fbc6cd2992fe82d84e656571e892bd1b398a0254eca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6297d24594bfa03e2a0a0fbc6cd2992fe82d84e656571e892bd1b398a0254eca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6297d24594bfa03e2a0a0fbc6cd2992fe82d84e656571e892bd1b398a0254eca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e60dd92c4aa53d7953fb339065eb9ffa879f2aff7dc3476c17258b4864fb63c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"No unallocated tokens to withdra\")\n\n        mstore(add(memPtr, 32), \"w\")\n\n    }\n\n    function abi_encode_t_stringliteral_e60dd92c4aa53d7953fb339065eb9ffa879f2aff7dc3476c17258b4864fb63c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_e60dd92c4aa53d7953fb339065eb9ffa879f2aff7dc3476c17258b4864fb63c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e60dd92c4aa53d7953fb339065eb9ffa879f2aff7dc3476c17258b4864fb63c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e60dd92c4aa53d7953fb339065eb9ffa879f2aff7dc3476c17258b4864fb63c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit amount must be greater t\")\n\n        mstore(add(memPtr, 32), \"han zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c(memPtr) {\n\n        mstore(add(memPtr, 0), \"No fees to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1131": [
									{
										"length": 32,
										"start": 2871
									},
									{
										"length": 32,
										"start": 3242
									},
									{
										"length": 32,
										"start": 5060
									},
									{
										"length": 32,
										"start": 5381
									},
									{
										"length": 32,
										"start": 5741
									},
									{
										"length": 32,
										"start": 5982
									},
									{
										"length": 32,
										"start": 6205
									},
									{
										"length": 32,
										"start": 6718
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106101cc575f3560e01c80638f060da9116100f6578063d7bebac011610094578063e141316311610063578063e1413163146105fa578063e1ffba6214610610578063f2fde38b14610638578063fc0c546a14610660576101cc565b8063d7bebac01461057e578063db2e21bc146105a6578063dc7f9e34146105bc578063dd49756e146105d2576101cc565b80639e9aed62116100d05780639e9aed62146104e0578063a0470cb41461050a578063bf3506c114610514578063c59d484714610550576101cc565b80638f060da91461044057806392929a091461047c57806394192b9f146104a4576101cc565b80634243fc4e1161016e5780636104f4b51161013d5780636104f4b5146103ac578063715018a6146103d657806386e755c6146103ec5780638da5cb5b14610416576101cc565b80634243fc4e1461030657806345f7f249146103305780634e71d92d1461035a578063522bf1d414610370576101cc565b806326155e53116101aa57806326155e531461025e57806328607bc6146102885780632866ed21146102b25780632bb2ed39146102dc576101cc565b806306def802146101d05780631f3225641461020c5780632019ddf814610236575b5f80fd5b3480156101db575f80fd5b506101f660048036038101906101f19190611e05565b61068a565b6040516102039190611e48565b60405180910390f35b348015610217575f80fd5b506102206106d0565b60405161022d9190611e48565b60405180910390f35b348015610241575f80fd5b5061025c60048036038101906102579190611e96565b6106d6565b005b348015610269575f80fd5b50610272610784565b60405161027f9190611e48565b60405180910390f35b348015610293575f80fd5b5061029c61078a565b6040516102a99190611e48565b60405180910390f35b3480156102bd575f80fd5b506102c6610790565b6040516102d39190611ee3565b60405180910390f35b3480156102e7575f80fd5b506102f06107a2565b6040516102fd9190611e48565b60405180910390f35b348015610311575f80fd5b5061031a6107a8565b6040516103279190611e48565b60405180910390f35b34801561033b575f80fd5b506103446107d8565b6040516103519190611e48565b60405180910390f35b348015610365575f80fd5b5061036e6107de565b005b34801561037b575f80fd5b5061039660048036038101906103919190611e05565b610b86565b6040516103a39190611e48565b60405180910390f35b3480156103b7575f80fd5b506103c0610bcc565b6040516103cd9190611e48565b60405180910390f35b3480156103e1575f80fd5b506103ea610bd2565b005b3480156103f7575f80fd5b50610400610be5565b60405161040d9190611e48565b60405180910390f35b348015610421575f80fd5b5061042a610beb565b6040516104379190611f0b565b60405180910390f35b34801561044b575f80fd5b5061046660048036038101906104619190611e05565b610c12565b6040516104739190611ee3565b60405180910390f35b348015610487575f80fd5b506104a2600480360381019061049d9190611f24565b610c2f565b005b3480156104af575f80fd5b506104ca60048036038101906104c59190611e05565b610c8a565b6040516104d79190611ee3565b60405180910390f35b3480156104eb575f80fd5b506104f4610ca7565b6040516105019190611e48565b60405180910390f35b610512610d45565b005b34801561051f575f80fd5b5061053a60048036038101906105359190611e05565b610e23565b6040516105479190611ee3565b60405180910390f35b34801561055b575f80fd5b50610564610f27565b604051610575959493929190611f4f565b60405180910390f35b348015610589575f80fd5b506105a4600480360381019061059f9190612056565b610f5d565b005b3480156105b1575f80fd5b506105ba6113b1565b005b3480156105c7575f80fd5b506105d06115a9565b005b3480156105dd575f80fd5b506105f860048036038101906105f391906120fe565b611711565b005b348015610605575f80fd5b5061060e6118d3565b005b34801561061b575f80fd5b50610636600480360381019061063191906120fe565b61196f565b005b348015610643575f80fd5b5061065e60048036038101906106599190611e05565b6119b8565b005b34801561066b575f80fd5b50610674611a3c565b6040516106819190612184565b60405180910390f35b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b600e5481565b6106de611a60565b8060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f129e15046dd77be10c4cdac8841646b9f3b6d22a00544b93362e9b84c05e6960826040516107789190611ee3565b60405180910390a25050565b600c5481565b600d5481565b60025f9054906101000a900460ff1681565b60085481565b5f806107b2610ca7565b905060095481116107c3575f6107d2565b600954816107d191906121ca565b5b91505090565b60095481565b6107e6611ae7565b60025f9054906101000a900460ff16610834576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082b90612257565b60405180910390fd5b60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156108be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b5906122bf565b60405180910390fd5b60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093e90612327565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116109ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c19061238f565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f9e09de4b8e45666deb3ec2bc8225f07988e54ef533eec97cb0b4610127183d7982604051610a109190611e48565b60405180910390a25f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060095f828254610a6b91906121ca565b9250508190555060085f815480929190610a84906123ad565b91905055508060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610ad591906123f4565b925050819055505f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610b7b33827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611b369092919063ffffffff16565b50610b84611bb5565b565b5f60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60075481565b610bda611a60565b610be35f611bbe565b565b600b5481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6005602052805f5260405f205f915054906101000a900460ff1681565b610c37611a60565b8060025f6101000a81548160ff0219169083151502179055507f1edd4dc7f91a5992aba0f39c0428bcf4df13d001eebc26eb188307d057f14a0781604051610c7f9190611ee3565b60405180910390a150565b6006602052805f5260405f205f915054906101000a900460ff1681565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d019190611f0b565b602060405180830381865afa158015610d1c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d40919061243b565b905090565b600e543414610d89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d80906124b0565b60405180910390fd5b600160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167fb7fa0f30e1ede3196616147dfdf6c94e47523298677b4f7b0c61027a9f0ebf5460405160405180910390a2565b5f60025f9054906101000a900460ff168015610e86575060055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b8015610ed8575060065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b8015610f2057505f60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054115b9050919050565b5f805f805f60075494506008549350610f3e610ca7565b9250600954915060025f9054906101000a900460ff1690509091929394565b610f65611a60565b818190508484905014610fad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa490612518565b60405180910390fd5b5f805b858590508110156112fd575f868683818110610fcf57610fce612536565b5b9050602002016020810190610fe49190611e05565b90505f670de0b6b3a764000086868581811061100357611002612536565b5b905060200201356110149190612563565b90505f8273ffffffffffffffffffffffffffffffffffffffff163b1461106f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611066906125ee565b60405180910390fd5b600b548160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546110bb91906123f4565b11156110fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f390612656565b60405180910390fd5b600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166111fa576001600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555060075f8154809291906111b1906123ad565b91905055508173ffffffffffffffffffffffffffffffffffffffff167f1837db44f707818dfce8415ef80a201e86882bc1bffabdded272512a96c0799e60405160405180910390a25b8060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461124691906123f4565b92505081905550808461125991906123f4565b93508173ffffffffffffffffffffffffffffffffffffffff167f4885d73252b9e2c420b677d64d50e8a5798773dbb4cb99c5a2ab2824f725d9a88260035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040516112e0929190612674565b60405180910390a2505080806112f5906123ad565b915050610fb0565b508060095461130c91906123f4565b611314610ca7565b1015611355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134c9061270b565b60405180910390fd5b8060095f82825461136691906123f4565b925050819055507ff14d1c8e59d4cd079b88d0e19cf0de41c86b7a761d5032c0947977002b3ad93a858585856040516113a2949392919061285d565b60405180910390a15050505050565b6113b9611a60565b6113c1611ae7565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161141b9190611f0b565b602060405180830381865afa158015611436573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061145a919061243b565b90505f811161149e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611495906128e0565b60405180910390fd5b600d54600c546114ae91906123f4565b4210156114f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e790612948565b60405180910390fd5b42600c81905550611549611502610beb565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611b369092919063ffffffff16565b611551610beb565b73ffffffffffffffffffffffffffffffffffffffff167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695826040516115969190611e48565b60405180910390a2506115a7611bb5565b565b6115b1611a60565b6115b9611ae7565b5f6115c26107a8565b90505f8111611606576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115fd906129d6565b60405180910390fd5b600d54600c5461161691906123f4565b421015611658576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164f90612948565b60405180910390fd5b42600c819055506116b161166a610beb565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611b369092919063ffffffff16565b6116b9610beb565b73ffffffffffffffffffffffffffffffffffffffff167f4f03851532cb76253fe3dddbcbe99f0a83446922731a7bdfd2cb44d35ffcb1d9826040516116fe9190611e48565b60405180910390a25061170f611bb5565b565b611719611a60565b5f811161175b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175290612a64565b60405180910390fd5b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016117b59190611f0b565b602060405180830381865afa1580156117d0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117f4919061243b565b1015611835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182c90612acc565b60405180910390fd5b6118823330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611c7f909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fbc7c8a4d8049a3f99a02f2a20640c206a2e4d3f2fa54fd20da9f01fda3620cda826040516118c89190611e48565b60405180910390a250565b6118db611a60565b5f4790505f8111611921576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191890612b34565b60405180910390fd5b611929610beb565b73ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f1935050505015801561196b573d5f803e3d5ffd5b5050565b611977611a60565b80600e819055507f046767aa5821ba6f1a985f8cf0134cb534cba0b26ff165803d3602c7ff046cd4816040516119ad9190611e48565b60405180910390a150565b6119c0611a60565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a30575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611a279190611f0b565b60405180910390fd5b611a3981611bbe565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b611a68611d01565b73ffffffffffffffffffffffffffffffffffffffff16611a86610beb565b73ffffffffffffffffffffffffffffffffffffffff1614611ae557611aa9611d01565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611adc9190611f0b565b60405180910390fd5b565b600260015403611b2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b2390612b9c565b60405180910390fd5b6002600181905550565b611bb0838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611b69929190612bba565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611d08565b505050565b60018081905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611cfb848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611cb493929190612be1565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611d08565b50505050565b5f33905090565b5f8060205f8451602086015f885af180611d27576040513d5f823e3d81fd5b3d92505f519150505f8214611d40576001811415611d5b565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611d9d57836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611d949190611f0b565b60405180910390fd5b50505050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611dd482611dab565b9050919050565b611de481611dca565b8114611dee575f80fd5b50565b5f81359050611dff81611ddb565b92915050565b5f60208284031215611e1a57611e19611da3565b5b5f611e2784828501611df1565b91505092915050565b5f819050919050565b611e4281611e30565b82525050565b5f602082019050611e5b5f830184611e39565b92915050565b5f8115159050919050565b611e7581611e61565b8114611e7f575f80fd5b50565b5f81359050611e9081611e6c565b92915050565b5f8060408385031215611eac57611eab611da3565b5b5f611eb985828601611df1565b9250506020611eca85828601611e82565b9150509250929050565b611edd81611e61565b82525050565b5f602082019050611ef65f830184611ed4565b92915050565b611f0581611dca565b82525050565b5f602082019050611f1e5f830184611efc565b92915050565b5f60208284031215611f3957611f38611da3565b5b5f611f4684828501611e82565b91505092915050565b5f60a082019050611f625f830188611e39565b611f6f6020830187611e39565b611f7c6040830186611e39565b611f896060830185611e39565b611f966080830184611ed4565b9695505050505050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112611fc157611fc0611fa0565b5b8235905067ffffffffffffffff811115611fde57611fdd611fa4565b5b602083019150836020820283011115611ffa57611ff9611fa8565b5b9250929050565b5f8083601f84011261201657612015611fa0565b5b8235905067ffffffffffffffff81111561203357612032611fa4565b5b60208301915083602082028301111561204f5761204e611fa8565b5b9250929050565b5f805f806040858703121561206e5761206d611da3565b5b5f85013567ffffffffffffffff81111561208b5761208a611da7565b5b61209787828801611fac565b9450945050602085013567ffffffffffffffff8111156120ba576120b9611da7565b5b6120c687828801612001565b925092505092959194509250565b6120dd81611e30565b81146120e7575f80fd5b50565b5f813590506120f8816120d4565b92915050565b5f6020828403121561211357612112611da3565b5b5f612120848285016120ea565b91505092915050565b5f819050919050565b5f61214c61214761214284611dab565b612129565b611dab565b9050919050565b5f61215d82612132565b9050919050565b5f61216e82612153565b9050919050565b61217e81612164565b82525050565b5f6020820190506121975f830184612175565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6121d482611e30565b91506121df83611e30565b92508282039050818111156121f7576121f661219d565b5b92915050565b5f82825260208201905092915050565b7f436c61696d206e6f7420656e61626c65640000000000000000000000000000005f82015250565b5f6122416011836121fd565b915061224c8261220d565b602082019050919050565b5f6020820190508181035f83015261226e81612235565b9050919050565b7f436c61696d20626c6f636b656420666f722074686973206164647265737300005f82015250565b5f6122a9601e836121fd565b91506122b482612275565b602082019050919050565b5f6020820190508181035f8301526122d68161229d565b9050919050565b7f417070726f76616c20666565206e6f74207061696400000000000000000000005f82015250565b5f6123116015836121fd565b915061231c826122dd565b602082019050919050565b5f6020820190508181035f83015261233e81612305565b9050919050565b7f596f752068617665206e6f2062616c616e636520746f20636c61696d000000005f82015250565b5f612379601c836121fd565b915061238482612345565b602082019050919050565b5f6020820190508181035f8301526123a68161236d565b9050919050565b5f6123b782611e30565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123e9576123e861219d565b5b600182019050919050565b5f6123fe82611e30565b915061240983611e30565b92508282019050808211156124215761242061219d565b5b92915050565b5f81519050612435816120d4565b92915050565b5f602082840312156124505761244f611da3565b5b5f61245d84828501612427565b91505092915050565b7f496e636f72726563742066656520616d6f756e740000000000000000000000005f82015250565b5f61249a6014836121fd565b91506124a582612466565b602082019050919050565b5f6020820190508181035f8301526124c78161248e565b9050919050565b7f4172726179206c656e6774687320646f206e6f74206d617463680000000000005f82015250565b5f612502601a836121fd565b915061250d826124ce565b602082019050919050565b5f6020820190508181035f83015261252f816124f6565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61256d82611e30565b915061257883611e30565b925082820261258681611e30565b9150828204841483151761259d5761259c61219d565b5b5092915050565b7f43616e6e6f74206265206120636f6e74726163740000000000000000000000005f82015250565b5f6125d86014836121fd565b91506125e3826125a4565b602082019050919050565b5f6020820190508181035f830152612605816125cc565b9050919050565b7f416c6c6f636174696f6e206578636565647320616c6c6f776564206c696d69745f82015250565b5f6126406020836121fd565b915061264b8261260c565b602082019050919050565b5f6020820190508181035f83015261266d81612634565b9050919050565b5f6040820190506126875f830185611e39565b6126946020830184611e39565b9392505050565b7f496e73756666696369656e7420636f6e74726163742062616c616e636520666f5f8201527f7220616c6c6f636174696f6e0000000000000000000000000000000000000000602082015250565b5f6126f5602c836121fd565b91506127008261269b565b604082019050919050565b5f6020820190508181035f830152612722816126e9565b9050919050565b5f82825260208201905092915050565b5f819050919050565b61274b81611dca565b82525050565b5f61275c8383612742565b60208301905092915050565b5f6127766020840184611df1565b905092915050565b5f602082019050919050565b5f6127958385612729565b93506127a082612739565b805f5b858110156127d8576127b58284612768565b6127bf8882612751565b97506127ca8361277e565b9250506001810190506127a3565b5085925050509392505050565b5f82825260208201905092915050565b5f80fd5b82818337505050565b5f61280d83856127e5565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156128405761283f6127f5565b5b6020830292506128518385846127f9565b82840190509392505050565b5f6040820190508181035f83015261287681868861278a565b9050818103602083015261288b818486612802565b905095945050505050565b7f436f6e747261637420686173206e6f2062616c616e63650000000000000000005f82015250565b5f6128ca6017836121fd565b91506128d582612896565b602082019050919050565b5f6020820190508181035f8301526128f7816128be565b9050919050565b7f436f6f6c646f776e20696e2070726f67726573730000000000000000000000005f82015250565b5f6129326014836121fd565b915061293d826128fe565b602082019050919050565b5f6020820190508181035f83015261295f81612926565b9050919050565b7f4e6f20756e616c6c6f636174656420746f6b656e7320746f20776974686472615f8201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b5f6129c06021836121fd565b91506129cb82612966565b604082019050919050565b5f6020820190508181035f8301526129ed816129b4565b9050919050565b7f4465706f73697420616d6f756e74206d757374206265206772656174657220745f8201527f68616e207a65726f000000000000000000000000000000000000000000000000602082015250565b5f612a4e6028836121fd565b9150612a59826129f4565b604082019050919050565b5f6020820190508181035f830152612a7b81612a42565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f612ab66014836121fd565b9150612ac182612a82565b602082019050919050565b5f6020820190508181035f830152612ae381612aaa565b9050919050565b7f4e6f206665657320746f207769746864726177000000000000000000000000005f82015250565b5f612b1e6013836121fd565b9150612b2982612aea565b602082019050919050565b5f6020820190508181035f830152612b4b81612b12565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612b86601f836121fd565b9150612b9182612b52565b602082019050919050565b5f6020820190508181035f830152612bb381612b7a565b9050919050565b5f604082019050612bcd5f830185611efc565b612bda6020830184611e39565b9392505050565b5f606082019050612bf45f830186611efc565b612c016020830185611efc565b612c0e6040830184611e39565b94935050505056fea2646970667358221220e7a7a609babe201dbbe8b61ac15a22f53f3651e2ee2299d4b4a287940e6ff8c964736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F060DA9 GT PUSH2 0xF6 JUMPI DUP1 PUSH4 0xD7BEBAC0 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xE1413163 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xE1413163 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xE1FFBA62 EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x638 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x660 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0xD7BEBAC0 EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xDC7F9E34 EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0xDD49756E EQ PUSH2 0x5D2 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x9E9AED62 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x9E9AED62 EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0xA0470CB4 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0xBF3506C1 EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0xC59D4847 EQ PUSH2 0x550 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x8F060DA9 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x92929A09 EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x94192B9F EQ PUSH2 0x4A4 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x4243FC4E GT PUSH2 0x16E JUMPI DUP1 PUSH4 0x6104F4B5 GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x6104F4B5 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x86E755C6 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x416 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x4243FC4E EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x45F7F249 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x522BF1D4 EQ PUSH2 0x370 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x26155E53 GT PUSH2 0x1AA JUMPI DUP1 PUSH4 0x26155E53 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x28607BC6 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x2866ED21 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x2BB2ED39 EQ PUSH2 0x2DC JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x6DEF802 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x1F322564 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x2019DDF8 EQ PUSH2 0x236 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x78A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH2 0x7A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31A PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x344 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x365 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x36E PUSH2 0x7DE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x396 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C0 PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EA PUSH2 0xBD2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x400 PUSH2 0xBE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x421 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x437 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x466 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x487 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0xC2F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F4 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x512 PUSH2 0xD45 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x53A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x535 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x564 PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x575 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x589 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0xF5D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BA PUSH2 0x13B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D0 PUSH2 0x15A9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x1711 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x605 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x60E PUSH2 0x18D3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x636 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x196F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x643 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x65E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x659 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x19B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x674 PUSH2 0x1A3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x681 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6DE PUSH2 0x1A60 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x129E15046DD77BE10C4CDAC8841646B9F3B6D22A00544B93362E9B84C05E6960 DUP3 PUSH1 0x40 MLOAD PUSH2 0x778 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7B2 PUSH2 0xCA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 GT PUSH2 0x7C3 JUMPI PUSH0 PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 PUSH2 0x7D1 SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7E6 PUSH2 0x1AE7 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x834 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82B SWAP1 PUSH2 0x2257 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B5 SWAP1 PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x947 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93E SWAP1 PUSH2 0x2327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x9CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C1 SWAP1 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E09DE4B8E45666DEB3EC2BC8225F07988E54EF533EEC97CB0B4610127183D79 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA10 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA84 SWAP1 PUSH2 0x23AD JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB7B CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B36 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xB84 PUSH2 0x1BB5 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBDA PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0xBE3 PUSH0 PUSH2 0x1BBE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xC37 PUSH2 0x1A60 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x1EDD4DC7F91A5992ABA0F39C0428BCF4DF13D001EEBC26EB188307D057F14A07 DUP2 PUSH1 0x40 MLOAD PUSH2 0xC7F SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD01 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD1C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD40 SWAP2 SWAP1 PUSH2 0x243B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD CALLVALUE EQ PUSH2 0xD89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD80 SWAP1 PUSH2 0x24B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB7FA0F30E1EDE3196616147DFDF6C94E47523298677B4F7B0C61027A9F0EBF54 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xE86 JUMPI POP PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xED8 JUMPI POP PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0xF20 JUMPI POP PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x7 SLOAD SWAP5 POP PUSH1 0x8 SLOAD SWAP4 POP PUSH2 0xF3E PUSH2 0xCA7 JUMP JUMPDEST SWAP3 POP PUSH1 0x9 SLOAD SWAP2 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST PUSH2 0xF65 PUSH2 0x1A60 JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0xFAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA4 SWAP1 PUSH2 0x2518 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 JUMPDEST DUP6 DUP6 SWAP1 POP DUP2 LT ISZERO PUSH2 0x12FD JUMPI PUSH0 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0xFCF JUMPI PUSH2 0xFCE PUSH2 0x2536 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xFE4 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x1003 JUMPI PUSH2 0x1002 PUSH2 0x2536 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1014 SWAP2 SWAP1 PUSH2 0x2563 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0x106F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1066 SWAP1 PUSH2 0x25EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x10BB SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST GT ISZERO PUSH2 0x10FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F3 SWAP1 PUSH2 0x2656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11FA JUMPI PUSH1 0x1 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x11B1 SWAP1 PUSH2 0x23AD JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1837DB44F707818DFCE8415EF80A201E86882BC1BFFABDDED272512A96C0799E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1246 SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP5 PUSH2 0x1259 SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP4 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4885D73252B9E2C420B677D64D50E8A5798773DBB4CB99C5A2AB2824F725D9A8 DUP3 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x12E0 SWAP3 SWAP2 SWAP1 PUSH2 0x2674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP DUP1 DUP1 PUSH2 0x12F5 SWAP1 PUSH2 0x23AD JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFB0 JUMP JUMPDEST POP DUP1 PUSH1 0x9 SLOAD PUSH2 0x130C SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST PUSH2 0x1314 PUSH2 0xCA7 JUMP JUMPDEST LT ISZERO PUSH2 0x1355 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134C SWAP1 PUSH2 0x270B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1366 SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xF14D1C8E59D4CD079B88D0E19CF0DE41C86B7A761D5032C0947977002B3AD93A DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x13A2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x285D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13B9 PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0x13C1 PUSH2 0x1AE7 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141B SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1436 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x145A SWAP2 SWAP1 PUSH2 0x243B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x149E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1495 SWAP1 PUSH2 0x28E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD SLOAD PUSH1 0xC SLOAD PUSH2 0x14AE SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x14F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E7 SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH2 0x1549 PUSH2 0x1502 PUSH2 0xBEB JUMP JUMPDEST DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B36 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1551 PUSH2 0xBEB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1596 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x15A7 PUSH2 0x1BB5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x15B1 PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0x15B9 PUSH2 0x1AE7 JUMP JUMPDEST PUSH0 PUSH2 0x15C2 PUSH2 0x7A8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1606 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FD SWAP1 PUSH2 0x29D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD SLOAD PUSH1 0xC SLOAD PUSH2 0x1616 SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1658 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164F SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH2 0x16B1 PUSH2 0x166A PUSH2 0xBEB JUMP JUMPDEST DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B36 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16B9 PUSH2 0xBEB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4F03851532CB76253FE3DDDBCBE99F0A83446922731A7BDFD2CB44D35FFCB1D9 DUP3 PUSH1 0x40 MLOAD PUSH2 0x16FE SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x170F PUSH2 0x1BB5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1719 PUSH2 0x1A60 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x175B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1752 SWAP1 PUSH2 0x2A64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17B5 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17D0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17F4 SWAP2 SWAP1 PUSH2 0x243B JUMP JUMPDEST LT ISZERO PUSH2 0x1835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182C SWAP1 PUSH2 0x2ACC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1882 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C7F SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7C8A4D8049A3F99A02F2A20640C206A2E4D3F2FA54FD20DA9F01FDA3620CDA DUP3 PUSH1 0x40 MLOAD PUSH2 0x18C8 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x18DB PUSH2 0x1A60 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1921 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1918 SWAP1 PUSH2 0x2B34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1929 PUSH2 0xBEB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x196B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1977 PUSH2 0x1A60 JUMP JUMPDEST DUP1 PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH32 0x46767AA5821BA6F1A985F8CF0134CB534CBA0B26FF165803D3602C7FF046CD4 DUP2 PUSH1 0x40 MLOAD PUSH2 0x19AD SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x19C0 PUSH2 0x1A60 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A30 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A27 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A39 DUP2 PUSH2 0x1BBE JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1A68 PUSH2 0x1D01 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A86 PUSH2 0xBEB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AE5 JUMPI PUSH2 0x1AA9 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ADC SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1B2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B23 SWAP1 PUSH2 0x2B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1BB0 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B69 SWAP3 SWAP2 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1D08 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1CFB DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1CB4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1D08 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1D27 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1D40 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1D5B JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1D9D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D94 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DD4 DUP3 PUSH2 0x1DAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DE4 DUP2 PUSH2 0x1DCA JUMP JUMPDEST DUP2 EQ PUSH2 0x1DEE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DFF DUP2 PUSH2 0x1DDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E1A JUMPI PUSH2 0x1E19 PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E27 DUP5 DUP3 DUP6 ADD PUSH2 0x1DF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E42 DUP2 PUSH2 0x1E30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E5B PUSH0 DUP4 ADD DUP5 PUSH2 0x1E39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E75 DUP2 PUSH2 0x1E61 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E7F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E90 DUP2 PUSH2 0x1E6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EAC JUMPI PUSH2 0x1EAB PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EB9 DUP6 DUP3 DUP7 ADD PUSH2 0x1DF1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ECA DUP6 DUP3 DUP7 ADD PUSH2 0x1E82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EDD DUP2 PUSH2 0x1E61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EF6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1ED4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F05 DUP2 PUSH2 0x1DCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F1E PUSH0 DUP4 ADD DUP5 PUSH2 0x1EFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F39 JUMPI PUSH2 0x1F38 PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F46 DUP5 DUP3 DUP6 ADD PUSH2 0x1E82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1F62 PUSH0 DUP4 ADD DUP9 PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x1F6F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x1F7C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x1F89 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x1F96 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1ED4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1FC1 JUMPI PUSH2 0x1FC0 PUSH2 0x1FA0 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FDE JUMPI PUSH2 0x1FDD PUSH2 0x1FA4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1FFA JUMPI PUSH2 0x1FF9 PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2016 JUMPI PUSH2 0x2015 PUSH2 0x1FA0 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2033 JUMPI PUSH2 0x2032 PUSH2 0x1FA4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x204F JUMPI PUSH2 0x204E PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x206E JUMPI PUSH2 0x206D PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x208B JUMPI PUSH2 0x208A PUSH2 0x1DA7 JUMP JUMPDEST JUMPDEST PUSH2 0x2097 DUP8 DUP3 DUP9 ADD PUSH2 0x1FAC JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20BA JUMPI PUSH2 0x20B9 PUSH2 0x1DA7 JUMP JUMPDEST JUMPDEST PUSH2 0x20C6 DUP8 DUP3 DUP9 ADD PUSH2 0x2001 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x20DD DUP2 PUSH2 0x1E30 JUMP JUMPDEST DUP2 EQ PUSH2 0x20E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20F8 DUP2 PUSH2 0x20D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2113 JUMPI PUSH2 0x2112 PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2120 DUP5 DUP3 DUP6 ADD PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x214C PUSH2 0x2147 PUSH2 0x2142 DUP5 PUSH2 0x1DAB JUMP JUMPDEST PUSH2 0x2129 JUMP JUMPDEST PUSH2 0x1DAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x215D DUP3 PUSH2 0x2132 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x216E DUP3 PUSH2 0x2153 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x217E DUP2 PUSH2 0x2164 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2197 PUSH0 DUP4 ADD DUP5 PUSH2 0x2175 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21D4 DUP3 PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP PUSH2 0x21DF DUP4 PUSH2 0x1E30 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x21F7 JUMPI PUSH2 0x21F6 PUSH2 0x219D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436C61696D206E6F7420656E61626C6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2241 PUSH1 0x11 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x224C DUP3 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x226E DUP2 PUSH2 0x2235 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436C61696D20626C6F636B656420666F72207468697320616464726573730000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22A9 PUSH1 0x1E DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x22B4 DUP3 PUSH2 0x2275 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22D6 DUP2 PUSH2 0x229D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x417070726F76616C20666565206E6F7420706169640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2311 PUSH1 0x15 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x231C DUP3 PUSH2 0x22DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x233E DUP2 PUSH2 0x2305 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F2062616C616E636520746F20636C61696D00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2379 PUSH1 0x1C DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x2384 DUP3 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23A6 DUP2 PUSH2 0x236D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23B7 DUP3 PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x23E9 JUMPI PUSH2 0x23E8 PUSH2 0x219D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23FE DUP3 PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP PUSH2 0x2409 DUP4 PUSH2 0x1E30 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2421 JUMPI PUSH2 0x2420 PUSH2 0x219D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2435 DUP2 PUSH2 0x20D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2450 JUMPI PUSH2 0x244F PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x245D DUP5 DUP3 DUP6 ADD PUSH2 0x2427 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E636F72726563742066656520616D6F756E74000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x249A PUSH1 0x14 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x24A5 DUP3 PUSH2 0x2466 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24C7 DUP2 PUSH2 0x248E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172726179206C656E6774687320646F206E6F74206D61746368000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2502 PUSH1 0x1A DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x250D DUP3 PUSH2 0x24CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x252F DUP2 PUSH2 0x24F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x256D DUP3 PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP PUSH2 0x2578 DUP4 PUSH2 0x1E30 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2586 DUP2 PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x259D JUMPI PUSH2 0x259C PUSH2 0x219D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206265206120636F6E7472616374000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25D8 PUSH1 0x14 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x25E3 DUP3 PUSH2 0x25A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2605 DUP2 PUSH2 0x25CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C6C6F636174696F6E206578636565647320616C6C6F776564206C696D6974 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2640 PUSH1 0x20 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x264B DUP3 PUSH2 0x260C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x266D DUP2 PUSH2 0x2634 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2687 PUSH0 DUP4 ADD DUP6 PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x2694 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E39 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E636520666F PUSH0 DUP3 ADD MSTORE PUSH32 0x7220616C6C6F636174696F6E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26F5 PUSH1 0x2C DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x2700 DUP3 PUSH2 0x269B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2722 DUP2 PUSH2 0x26E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x274B DUP2 PUSH2 0x1DCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x275C DUP4 DUP4 PUSH2 0x2742 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2776 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x1DF1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2795 DUP4 DUP6 PUSH2 0x2729 JUMP JUMPDEST SWAP4 POP PUSH2 0x27A0 DUP3 PUSH2 0x2739 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x27D8 JUMPI PUSH2 0x27B5 DUP3 DUP5 PUSH2 0x2768 JUMP JUMPDEST PUSH2 0x27BF DUP9 DUP3 PUSH2 0x2751 JUMP JUMPDEST SWAP8 POP PUSH2 0x27CA DUP4 PUSH2 0x277E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27A3 JUMP JUMPDEST POP DUP6 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x280D DUP4 DUP6 PUSH2 0x27E5 JUMP JUMPDEST SWAP4 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x2840 JUMPI PUSH2 0x283F PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 MUL SWAP3 POP PUSH2 0x2851 DUP4 DUP6 DUP5 PUSH2 0x27F9 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2876 DUP2 DUP7 DUP9 PUSH2 0x278A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x288B DUP2 DUP5 DUP7 PUSH2 0x2802 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x436F6E747261637420686173206E6F2062616C616E6365000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28CA PUSH1 0x17 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x28D5 DUP3 PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28F7 DUP2 PUSH2 0x28BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6F6C646F776E20696E2070726F6772657373000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2932 PUSH1 0x14 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x293D DUP3 PUSH2 0x28FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x295F DUP2 PUSH2 0x2926 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20756E616C6C6F636174656420746F6B656E7320746F2077697468647261 PUSH0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29C0 PUSH1 0x21 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x29CB DUP3 PUSH2 0x2966 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29ED DUP2 PUSH2 0x29B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A4E PUSH1 0x28 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x2A59 DUP3 PUSH2 0x29F4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A7B DUP2 PUSH2 0x2A42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AB6 PUSH1 0x14 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x2AC1 DUP3 PUSH2 0x2A82 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AE3 DUP2 PUSH2 0x2AAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206665657320746F20776974686472617700000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B1E PUSH1 0x13 DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x2B29 DUP3 PUSH2 0x2AEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B4B DUP2 PUSH2 0x2B12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B86 PUSH1 0x1F DUP4 PUSH2 0x21FD JUMP JUMPDEST SWAP2 POP PUSH2 0x2B91 DUP3 PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BB3 DUP2 PUSH2 0x2B7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BCD PUSH0 DUP4 ADD DUP6 PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x2BDA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E39 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2BF4 PUSH0 DUP4 ADD DUP7 PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x2C01 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x2C0E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E39 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xA7 0xA6 MULMOD 0xBA 0xBE KECCAK256 SAR 0xBB 0xE8 0xB6 BYTE 0xC1 GAS 0x22 CREATE2 EXTCODEHASH CALLDATASIZE MLOAD 0xE2 0xEE 0x22 SWAP10 0xD4 0xB4 LOG2 DUP8 SWAP5 0xE PUSH16 0xF8C964736F6C63430008140033000000 ",
							"sourceMap": "1830:10440:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10953:130;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3286:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5500:194;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3070:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3151:50;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2066:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2622:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9265:215;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2696:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7946:694;;;;;;;;;;;;;:::i;:::-;;11224:124;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2547:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;2961:69:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2354:44:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5086:136;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2457:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9049:116;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4772:205;;;:::i;:::-;;11478:195;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11759:509;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;6481:1348;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9582:507;;;;;;;;;;;;;:::i;:::-;;10205:534;;;;;;;;;;;;;:::i;:::-;;5853:341;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8735:228;;;;;;;;;;;;;:::i;:::-;;4521:146;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1975:29:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10953:130;11023:7;11049:17;:27;11067:8;11049:27;;;;;;;;;;;;;;;;11042:34;;10953:130;;;:::o;3286:31::-;;;;:::o;5500:194::-;1531:13:0;:11;:13::i;:::-;5622:8:11::1;5597:12;:22;5610:8;5597:22;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;5668:8;5645:42;;;5678:8;5645:42;;;;;;:::i;:::-;;;;;;;;5500:194:::0;;:::o;3070:36::-;;;;:::o;3151:50::-;;;;:::o;2066:24::-;;;;;;;;;;;;;:::o;2622:36::-;;;;:::o;9265:215::-;9318:7;9337:23;9363:22;:20;:22::i;:::-;9337:48;;9420:14;;9402:15;:32;:71;;9472:1;9402:71;;;9455:14;;9437:15;:32;;;;:::i;:::-;9402:71;9395:78;;;9265:215;:::o;2696:29::-;;;;:::o;7946:694::-;2261:21:4;:19;:21::i;:::-;8003:12:11::1;;;;;;;;;;;7995:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;8056:12;:24;8069:10;8056:24;;;;;;;;;;;;;;;;;;;;;;;;;8055:25;8047:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8133:16;:28;8150:10;8133:28;;;;;;;;;;;;;;;;;;;;;;;;;8125:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;8197:14;8214:17;:29;8232:10;8214:29;;;;;;;;;;;;;;;;8197:46;;8270:1;8261:6;:10;8253:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;8330:10;8320:29;;;8342:6;8320:29;;;;;;:::i;:::-;;;;;;;;8392:1;8360:17;:29;8378:10;8360:29;;;;;;;;;;;;;;;:33;;;;8421:6;8403:14;;:24;;;;;;;:::i;:::-;;;;;;;;8437:21;;:23;;;;;;;;;:::i;:::-;;;;;;8501:6;8470:15;:27;8486:10;8470:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;8549:5;8518:16;:28;8535:10;8518:28;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;8595:38;8614:10;8626:6;8595:5;:18;;;;:38;;;;;:::i;:::-;7985:655;2303:20:4::0;:18;:20::i;:::-;7946:694:11:o;11224:124::-;11290:7;11316:15;:25;11332:8;11316:25;;;;;;;;;;;;;;;;11309:32;;11224:124;;;:::o;2547:39::-;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2961:69:11:-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2354:44:11:-;;;;;;;;;;;;;;;;;;;;;;:::o;5086:136::-;1531:13:0;:11;:13::i;:::-;5170:8:11::1;5155:12;;:23;;;;;;;;;;;;;;;;;;5193:22;5206:8;5193:22;;;;;;:::i;:::-;;;;;;;;5086:136:::0;:::o;2457:48::-;;;;;;;;;;;;;;;;;;;;;;:::o;9049:116::-;9102:7;9128:5;:15;;;9152:4;9128:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9121:37;;9049:116;:::o;4772:205::-;4844:16;;4831:9;:29;4823:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4926:4;4895:16;:28;4912:10;4895:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;4959:10;4945:25;;;;;;;;;;;;4772:205::o;11478:195::-;11537:4;11561:12;;;;;;;;;;;:39;;;;;11578:12;:22;11591:8;11578:22;;;;;;;;;;;;;;;;;;;;;;;;;11577:23;11561:39;:69;;;;;11604:16;:26;11621:8;11604:26;;;;;;;;;;;;;;;;;;;;;;;;;11561:69;:104;;;;;11664:1;11634:17;:27;11652:8;11634:27;;;;;;;;;;;;;;;;:31;11561:104;11553:113;;11478:195;;;:::o;11759:509::-;11839:24;11877:21;11912:29;11955:23;11992:18;12054:24;;12035:43;;12104:21;;12088:37;;12159:22;:20;:22::i;:::-;12135:46;;12209:14;;12191:32;;12249:12;;;;;;;;;;;12233:28;;11759:509;;;;;:::o;6481:1348::-;1531:13:0;:11;:13::i;:::-;6659:8:11::1;;:15;;6639:9;;:16;;:35;6618:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;6737:26;6783:9:::0;6778:779:::1;6802:9;;:16;;6798:1;:20;6778:779;;;6839:15;6857:9;;6867:1;6857:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;6839:30;;6883:14;2917:8;6900;;6909:1;6900:11;;;;;;;:::i;:::-;;;;;;;;:33;;;;:::i;:::-;6883:50;;6979:1;6956:7;:19;;;:24;6948:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;7083:23;;7073:6;7044:17;:26;7062:7;7044:26;;;;;;;;;;;;;;;;:35;;;;:::i;:::-;:62;;7019:153;;;;;;;;;;;;:::i;:::-;;;;;;;;;7192:13;:22;7206:7;7192:22;;;;;;;;;;;;;;;;;;;;;;;;;7187:187;;7259:4;7234:13;:22;7248:7;7234:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;7281:24;;:26;;;;;;;;;:::i;:::-;;;;;;7351:7;7330:29;;;;;;;;;;;;7187:187;7418:6;7388:17;:26;7406:7;7388:26;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;7460:6;7438:28;;;;;:::i;:::-;;;7502:7;7486:60;;;7511:6;7519:17;:26;7537:7;7519:26;;;;;;;;;;;;;;;;7486:60;;;;;;;:::i;:::-;;;;;;;;6825:732;;6820:3;;;;;:::i;:::-;;;;6778:779;;;;7631:18;7614:14;;:35;;;;:::i;:::-;7588:22;:20;:22::i;:::-;:61;;7567:152;;;;;;;;;;;;:::i;:::-;;;;;;;;;7748:18;7730:14;;:36;;;;;;;:::i;:::-;;;;;;;;7782:40;7802:9;;7813:8;;7782:40;;;;;;;;;:::i;:::-;;;;;;;;6608:1221;6481:1348:::0;;;;:::o;9582:507::-;1531:13:0;:11;:13::i;:::-;2261:21:4::1;:19;:21::i;:::-;9653:23:11::2;9679:5;:15;;;9703:4;9679:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9653:56;;9745:1;9727:15;:19;9719:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;9848:25;;9824:21;;:49;;;;:::i;:::-;9805:15;:68;;9784:135;;;;;;;;;;;;:::i;:::-;;;;;;;;;9954:15;9930:21;:39;;;;9979:44;9998:7;:5;:7::i;:::-;10007:15;9979:5;:18;;;;:44;;;;;:::i;:::-;10057:7;:5;:7::i;:::-;10039:43;;;10066:15;10039:43;;;;;;:::i;:::-;;;;;;;;9643:446;2303:20:4::1;:18;:20::i;:::-;9582:507:11:o:0;10205:534::-;1531:13:0;:11;:13::i;:::-;2261:21:4::1;:19;:21::i;:::-;10284:25:11::2;10312:22;:20;:22::i;:::-;10284:50;;10372:1;10352:17;:21;10344:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;10485:25;;10461:21;;:49;;;;:::i;:::-;10442:15;:68;;10421:135;;;;;;;;;;;;:::i;:::-;;;;;;;;;10591:15;10567:21;:39;;;;10616:46;10635:7;:5;:7::i;:::-;10644:17;10616:5;:18;;;;:46;;;;;:::i;:::-;10705:7;:5;:7::i;:::-;10678:54;;;10714:17;10678:54;;;;;;:::i;:::-;;;;;;;;10274:465;2303:20:4::1;:18;:20::i;:::-;10205:534:11:o:0;5853:341::-;1531:13:0;:11;:13::i;:::-;5940:1:11::1;5930:7;:11;5922:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;6035:7;6004:5;:15;;;6020:10;6004:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;5996:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;6078:58;6101:10;6121:4;6128:7;6078:5;:22;;;;:58;;;;;;:::i;:::-;6167:10;6152:35;;;6179:7;6152:35;;;;;;:::i;:::-;;;;;;;;5853:341:::0;:::o;8735:228::-;1531:13:0;:11;:13::i;:::-;8796:23:11::1;8822:21;8796:47;;8879:1;8861:15;:19;8853:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;8922:7;:5;:7::i;:::-;8914:25;;:42;8940:15;8914:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;8786:177;8735:228::o:0;4521:146::-;1531:13:0;:11;:13::i;:::-;4612:4:11::1;4593:16;:23;;;;4631:29;4655:4;4631:29;;;;;;:::i;:::-;;;;;;;;4521:146:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1975:29:11:-;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1271:160:6:-;1353:71;1373:5;1395;:14;;;1412:2;1416:5;1380:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:19;:71::i;:::-;1271:160;;;:::o;2629:209:4:-;1716:1;2809:7;:22;;;;2629:209::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1670:188:6:-;1770:81;1790:5;1812;:18;;;1833:4;1839:2;1843:5;1797:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1770:19;:81::i;:::-;1670:188;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;7738:720:6:-;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;8234:16;8220:30;;8284:1;8278:8;8263:23;;7900:396;8324:1;8310:10;:15;:68;;8377:1;8362:11;:16;;8310:68;;;8358:1;8336:5;8328:26;;;:31;8310:68;8306:146;;;8434:5;8401:40;;;;;;;;;;;:::i;:::-;;;;;;;;8306:146;7808:650;;7738:720;;:::o;88:117:12:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:90::-;1645:7;1688:5;1681:13;1674:21;1663:32;;1611:90;;;:::o;1707:116::-;1777:21;1792:5;1777:21;:::i;:::-;1770:5;1767:32;1757:60;;1813:1;1810;1803:12;1757:60;1707:116;:::o;1829:133::-;1872:5;1910:6;1897:20;1888:29;;1926:30;1950:5;1926:30;:::i;:::-;1829:133;;;;:::o;1968:468::-;2033:6;2041;2090:2;2078:9;2069:7;2065:23;2061:32;2058:119;;;2096:79;;:::i;:::-;2058:119;2216:1;2241:53;2286:7;2277:6;2266:9;2262:22;2241:53;:::i;:::-;2231:63;;2187:117;2343:2;2369:50;2411:7;2402:6;2391:9;2387:22;2369:50;:::i;:::-;2359:60;;2314:115;1968:468;;;;;:::o;2442:109::-;2523:21;2538:5;2523:21;:::i;:::-;2518:3;2511:34;2442:109;;:::o;2557:210::-;2644:4;2682:2;2671:9;2667:18;2659:26;;2695:65;2757:1;2746:9;2742:17;2733:6;2695:65;:::i;:::-;2557:210;;;;:::o;2773:118::-;2860:24;2878:5;2860:24;:::i;:::-;2855:3;2848:37;2773:118;;:::o;2897:222::-;2990:4;3028:2;3017:9;3013:18;3005:26;;3041:71;3109:1;3098:9;3094:17;3085:6;3041:71;:::i;:::-;2897:222;;;;:::o;3125:323::-;3181:6;3230:2;3218:9;3209:7;3205:23;3201:32;3198:119;;;3236:79;;:::i;:::-;3198:119;3356:1;3381:50;3423:7;3414:6;3403:9;3399:22;3381:50;:::i;:::-;3371:60;;3327:114;3125:323;;;;:::o;3454:652::-;3653:4;3691:3;3680:9;3676:19;3668:27;;3705:71;3773:1;3762:9;3758:17;3749:6;3705:71;:::i;:::-;3786:72;3854:2;3843:9;3839:18;3830:6;3786:72;:::i;:::-;3868;3936:2;3925:9;3921:18;3912:6;3868:72;:::i;:::-;3950;4018:2;4007:9;4003:18;3994:6;3950:72;:::i;:::-;4032:67;4094:3;4083:9;4079:19;4070:6;4032:67;:::i;:::-;3454:652;;;;;;;;:::o;4112:117::-;4221:1;4218;4211:12;4235:117;4344:1;4341;4334:12;4358:117;4467:1;4464;4457:12;4498:568;4571:8;4581:6;4631:3;4624:4;4616:6;4612:17;4608:27;4598:122;;4639:79;;:::i;:::-;4598:122;4752:6;4739:20;4729:30;;4782:18;4774:6;4771:30;4768:117;;;4804:79;;:::i;:::-;4768:117;4918:4;4910:6;4906:17;4894:29;;4972:3;4964:4;4956:6;4952:17;4942:8;4938:32;4935:41;4932:128;;;4979:79;;:::i;:::-;4932:128;4498:568;;;;;:::o;5089:::-;5162:8;5172:6;5222:3;5215:4;5207:6;5203:17;5199:27;5189:122;;5230:79;;:::i;:::-;5189:122;5343:6;5330:20;5320:30;;5373:18;5365:6;5362:30;5359:117;;;5395:79;;:::i;:::-;5359:117;5509:4;5501:6;5497:17;5485:29;;5563:3;5555:4;5547:6;5543:17;5533:8;5529:32;5526:41;5523:128;;;5570:79;;:::i;:::-;5523:128;5089:568;;;;;:::o;5663:934::-;5785:6;5793;5801;5809;5858:2;5846:9;5837:7;5833:23;5829:32;5826:119;;;5864:79;;:::i;:::-;5826:119;6012:1;6001:9;5997:17;5984:31;6042:18;6034:6;6031:30;6028:117;;;6064:79;;:::i;:::-;6028:117;6177:80;6249:7;6240:6;6229:9;6225:22;6177:80;:::i;:::-;6159:98;;;;5955:312;6334:2;6323:9;6319:18;6306:32;6365:18;6357:6;6354:30;6351:117;;;6387:79;;:::i;:::-;6351:117;6500:80;6572:7;6563:6;6552:9;6548:22;6500:80;:::i;:::-;6482:98;;;;6277:313;5663:934;;;;;;;:::o;6603:122::-;6676:24;6694:5;6676:24;:::i;:::-;6669:5;6666:35;6656:63;;6715:1;6712;6705:12;6656:63;6603:122;:::o;6731:139::-;6777:5;6815:6;6802:20;6793:29;;6831:33;6858:5;6831:33;:::i;:::-;6731:139;;;;:::o;6876:329::-;6935:6;6984:2;6972:9;6963:7;6959:23;6955:32;6952:119;;;6990:79;;:::i;:::-;6952:119;7110:1;7135:53;7180:7;7171:6;7160:9;7156:22;7135:53;:::i;:::-;7125:63;;7081:117;6876:329;;;;:::o;7211:60::-;7239:3;7260:5;7253:12;;7211:60;;;:::o;7277:142::-;7327:9;7360:53;7378:34;7387:24;7405:5;7387:24;:::i;:::-;7378:34;:::i;:::-;7360:53;:::i;:::-;7347:66;;7277:142;;;:::o;7425:126::-;7475:9;7508:37;7539:5;7508:37;:::i;:::-;7495:50;;7425:126;;;:::o;7557:140::-;7621:9;7654:37;7685:5;7654:37;:::i;:::-;7641:50;;7557:140;;;:::o;7703:159::-;7804:51;7849:5;7804:51;:::i;:::-;7799:3;7792:64;7703:159;;:::o;7868:250::-;7975:4;8013:2;8002:9;7998:18;7990:26;;8026:85;8108:1;8097:9;8093:17;8084:6;8026:85;:::i;:::-;7868:250;;;;:::o;8124:180::-;8172:77;8169:1;8162:88;8269:4;8266:1;8259:15;8293:4;8290:1;8283:15;8310:194;8350:4;8370:20;8388:1;8370:20;:::i;:::-;8365:25;;8404:20;8422:1;8404:20;:::i;:::-;8399:25;;8448:1;8445;8441:9;8433:17;;8472:1;8466:4;8463:11;8460:37;;;8477:18;;:::i;:::-;8460:37;8310:194;;;;:::o;8510:169::-;8594:11;8628:6;8623:3;8616:19;8668:4;8663:3;8659:14;8644:29;;8510:169;;;;:::o;8685:167::-;8825:19;8821:1;8813:6;8809:14;8802:43;8685:167;:::o;8858:366::-;9000:3;9021:67;9085:2;9080:3;9021:67;:::i;:::-;9014:74;;9097:93;9186:3;9097:93;:::i;:::-;9215:2;9210:3;9206:12;9199:19;;8858:366;;;:::o;9230:419::-;9396:4;9434:2;9423:9;9419:18;9411:26;;9483:9;9477:4;9473:20;9469:1;9458:9;9454:17;9447:47;9511:131;9637:4;9511:131;:::i;:::-;9503:139;;9230:419;;;:::o;9655:180::-;9795:32;9791:1;9783:6;9779:14;9772:56;9655:180;:::o;9841:366::-;9983:3;10004:67;10068:2;10063:3;10004:67;:::i;:::-;9997:74;;10080:93;10169:3;10080:93;:::i;:::-;10198:2;10193:3;10189:12;10182:19;;9841:366;;;:::o;10213:419::-;10379:4;10417:2;10406:9;10402:18;10394:26;;10466:9;10460:4;10456:20;10452:1;10441:9;10437:17;10430:47;10494:131;10620:4;10494:131;:::i;:::-;10486:139;;10213:419;;;:::o;10638:171::-;10778:23;10774:1;10766:6;10762:14;10755:47;10638:171;:::o;10815:366::-;10957:3;10978:67;11042:2;11037:3;10978:67;:::i;:::-;10971:74;;11054:93;11143:3;11054:93;:::i;:::-;11172:2;11167:3;11163:12;11156:19;;10815:366;;;:::o;11187:419::-;11353:4;11391:2;11380:9;11376:18;11368:26;;11440:9;11434:4;11430:20;11426:1;11415:9;11411:17;11404:47;11468:131;11594:4;11468:131;:::i;:::-;11460:139;;11187:419;;;:::o;11612:178::-;11752:30;11748:1;11740:6;11736:14;11729:54;11612:178;:::o;11796:366::-;11938:3;11959:67;12023:2;12018:3;11959:67;:::i;:::-;11952:74;;12035:93;12124:3;12035:93;:::i;:::-;12153:2;12148:3;12144:12;12137:19;;11796:366;;;:::o;12168:419::-;12334:4;12372:2;12361:9;12357:18;12349:26;;12421:9;12415:4;12411:20;12407:1;12396:9;12392:17;12385:47;12449:131;12575:4;12449:131;:::i;:::-;12441:139;;12168:419;;;:::o;12593:233::-;12632:3;12655:24;12673:5;12655:24;:::i;:::-;12646:33;;12701:66;12694:5;12691:77;12688:103;;12771:18;;:::i;:::-;12688:103;12818:1;12811:5;12807:13;12800:20;;12593:233;;;:::o;12832:191::-;12872:3;12891:20;12909:1;12891:20;:::i;:::-;12886:25;;12925:20;12943:1;12925:20;:::i;:::-;12920:25;;12968:1;12965;12961:9;12954:16;;12989:3;12986:1;12983:10;12980:36;;;12996:18;;:::i;:::-;12980:36;12832:191;;;;:::o;13029:143::-;13086:5;13117:6;13111:13;13102:22;;13133:33;13160:5;13133:33;:::i;:::-;13029:143;;;;:::o;13178:351::-;13248:6;13297:2;13285:9;13276:7;13272:23;13268:32;13265:119;;;13303:79;;:::i;:::-;13265:119;13423:1;13448:64;13504:7;13495:6;13484:9;13480:22;13448:64;:::i;:::-;13438:74;;13394:128;13178:351;;;;:::o;13535:170::-;13675:22;13671:1;13663:6;13659:14;13652:46;13535:170;:::o;13711:366::-;13853:3;13874:67;13938:2;13933:3;13874:67;:::i;:::-;13867:74;;13950:93;14039:3;13950:93;:::i;:::-;14068:2;14063:3;14059:12;14052:19;;13711:366;;;:::o;14083:419::-;14249:4;14287:2;14276:9;14272:18;14264:26;;14336:9;14330:4;14326:20;14322:1;14311:9;14307:17;14300:47;14364:131;14490:4;14364:131;:::i;:::-;14356:139;;14083:419;;;:::o;14508:176::-;14648:28;14644:1;14636:6;14632:14;14625:52;14508:176;:::o;14690:366::-;14832:3;14853:67;14917:2;14912:3;14853:67;:::i;:::-;14846:74;;14929:93;15018:3;14929:93;:::i;:::-;15047:2;15042:3;15038:12;15031:19;;14690:366;;;:::o;15062:419::-;15228:4;15266:2;15255:9;15251:18;15243:26;;15315:9;15309:4;15305:20;15301:1;15290:9;15286:17;15279:47;15343:131;15469:4;15343:131;:::i;:::-;15335:139;;15062:419;;;:::o;15487:180::-;15535:77;15532:1;15525:88;15632:4;15629:1;15622:15;15656:4;15653:1;15646:15;15673:410;15713:7;15736:20;15754:1;15736:20;:::i;:::-;15731:25;;15770:20;15788:1;15770:20;:::i;:::-;15765:25;;15825:1;15822;15818:9;15847:30;15865:11;15847:30;:::i;:::-;15836:41;;16026:1;16017:7;16013:15;16010:1;16007:22;15987:1;15980:9;15960:83;15937:139;;16056:18;;:::i;:::-;15937:139;15721:362;15673:410;;;;:::o;16089:170::-;16229:22;16225:1;16217:6;16213:14;16206:46;16089:170;:::o;16265:366::-;16407:3;16428:67;16492:2;16487:3;16428:67;:::i;:::-;16421:74;;16504:93;16593:3;16504:93;:::i;:::-;16622:2;16617:3;16613:12;16606:19;;16265:366;;;:::o;16637:419::-;16803:4;16841:2;16830:9;16826:18;16818:26;;16890:9;16884:4;16880:20;16876:1;16865:9;16861:17;16854:47;16918:131;17044:4;16918:131;:::i;:::-;16910:139;;16637:419;;;:::o;17062:182::-;17202:34;17198:1;17190:6;17186:14;17179:58;17062:182;:::o;17250:366::-;17392:3;17413:67;17477:2;17472:3;17413:67;:::i;:::-;17406:74;;17489:93;17578:3;17489:93;:::i;:::-;17607:2;17602:3;17598:12;17591:19;;17250:366;;;:::o;17622:419::-;17788:4;17826:2;17815:9;17811:18;17803:26;;17875:9;17869:4;17865:20;17861:1;17850:9;17846:17;17839:47;17903:131;18029:4;17903:131;:::i;:::-;17895:139;;17622:419;;;:::o;18047:332::-;18168:4;18206:2;18195:9;18191:18;18183:26;;18219:71;18287:1;18276:9;18272:17;18263:6;18219:71;:::i;:::-;18300:72;18368:2;18357:9;18353:18;18344:6;18300:72;:::i;:::-;18047:332;;;;;:::o;18385:231::-;18525:34;18521:1;18513:6;18509:14;18502:58;18594:14;18589:2;18581:6;18577:15;18570:39;18385:231;:::o;18622:366::-;18764:3;18785:67;18849:2;18844:3;18785:67;:::i;:::-;18778:74;;18861:93;18950:3;18861:93;:::i;:::-;18979:2;18974:3;18970:12;18963:19;;18622:366;;;:::o;18994:419::-;19160:4;19198:2;19187:9;19183:18;19175:26;;19247:9;19241:4;19237:20;19233:1;19222:9;19218:17;19211:47;19275:131;19401:4;19275:131;:::i;:::-;19267:139;;18994:419;;;:::o;19419:184::-;19518:11;19552:6;19547:3;19540:19;19592:4;19587:3;19583:14;19568:29;;19419:184;;;;:::o;19609:102::-;19678:4;19701:3;19693:11;;19609:102;;;:::o;19717:108::-;19794:24;19812:5;19794:24;:::i;:::-;19789:3;19782:37;19717:108;;:::o;19831:179::-;19900:10;19921:46;19963:3;19955:6;19921:46;:::i;:::-;19999:4;19994:3;19990:14;19976:28;;19831:179;;;;:::o;20016:122::-;20068:5;20093:39;20128:2;20123:3;20119:12;20114:3;20093:39;:::i;:::-;20084:48;;20016:122;;;;:::o;20144:115::-;20216:4;20248;20243:3;20239:14;20231:22;;20144:115;;;:::o;20295:699::-;20424:3;20447:86;20526:6;20521:3;20447:86;:::i;:::-;20440:93;;20557:58;20609:5;20557:58;:::i;:::-;20638:7;20669:1;20654:315;20679:6;20676:1;20673:13;20654:315;;;20749:42;20784:6;20775:7;20749:42;:::i;:::-;20811:63;20870:3;20855:13;20811:63;:::i;:::-;20804:70;;20897:62;20952:6;20897:62;:::i;:::-;20887:72;;20714:255;20701:1;20698;20694:9;20689:14;;20654:315;;;20658:14;20985:3;20978:10;;20429:565;;20295:699;;;;;:::o;21000:184::-;21099:11;21133:6;21128:3;21121:19;21173:4;21168:3;21164:14;21149:29;;21000:184;;;;:::o;21190:117::-;21299:1;21296;21289:12;21313:98;21397:6;21392:3;21387;21374:30;21313:98;;;:::o;21447:537::-;21575:3;21596:86;21675:6;21670:3;21596:86;:::i;:::-;21589:93;;21706:66;21698:6;21695:78;21692:165;;;21776:79;;:::i;:::-;21692:165;21888:4;21880:6;21876:17;21866:27;;21903:43;21939:6;21934:3;21927:5;21903:43;:::i;:::-;21971:6;21966:3;21962:16;21955:23;;21447:537;;;;;:::o;21990:674::-;22231:4;22269:2;22258:9;22254:18;22246:26;;22318:9;22312:4;22308:20;22304:1;22293:9;22289:17;22282:47;22346:118;22459:4;22450:6;22442;22346:118;:::i;:::-;22338:126;;22511:9;22505:4;22501:20;22496:2;22485:9;22481:18;22474:48;22539:118;22652:4;22643:6;22635;22539:118;:::i;:::-;22531:126;;21990:674;;;;;;;:::o;22670:173::-;22810:25;22806:1;22798:6;22794:14;22787:49;22670:173;:::o;22849:366::-;22991:3;23012:67;23076:2;23071:3;23012:67;:::i;:::-;23005:74;;23088:93;23177:3;23088:93;:::i;:::-;23206:2;23201:3;23197:12;23190:19;;22849:366;;;:::o;23221:419::-;23387:4;23425:2;23414:9;23410:18;23402:26;;23474:9;23468:4;23464:20;23460:1;23449:9;23445:17;23438:47;23502:131;23628:4;23502:131;:::i;:::-;23494:139;;23221:419;;;:::o;23646:170::-;23786:22;23782:1;23774:6;23770:14;23763:46;23646:170;:::o;23822:366::-;23964:3;23985:67;24049:2;24044:3;23985:67;:::i;:::-;23978:74;;24061:93;24150:3;24061:93;:::i;:::-;24179:2;24174:3;24170:12;24163:19;;23822:366;;;:::o;24194:419::-;24360:4;24398:2;24387:9;24383:18;24375:26;;24447:9;24441:4;24437:20;24433:1;24422:9;24418:17;24411:47;24475:131;24601:4;24475:131;:::i;:::-;24467:139;;24194:419;;;:::o;24619:220::-;24759:34;24755:1;24747:6;24743:14;24736:58;24828:3;24823:2;24815:6;24811:15;24804:28;24619:220;:::o;24845:366::-;24987:3;25008:67;25072:2;25067:3;25008:67;:::i;:::-;25001:74;;25084:93;25173:3;25084:93;:::i;:::-;25202:2;25197:3;25193:12;25186:19;;24845:366;;;:::o;25217:419::-;25383:4;25421:2;25410:9;25406:18;25398:26;;25470:9;25464:4;25460:20;25456:1;25445:9;25441:17;25434:47;25498:131;25624:4;25498:131;:::i;:::-;25490:139;;25217:419;;;:::o;25642:227::-;25782:34;25778:1;25770:6;25766:14;25759:58;25851:10;25846:2;25838:6;25834:15;25827:35;25642:227;:::o;25875:366::-;26017:3;26038:67;26102:2;26097:3;26038:67;:::i;:::-;26031:74;;26114:93;26203:3;26114:93;:::i;:::-;26232:2;26227:3;26223:12;26216:19;;25875:366;;;:::o;26247:419::-;26413:4;26451:2;26440:9;26436:18;26428:26;;26500:9;26494:4;26490:20;26486:1;26475:9;26471:17;26464:47;26528:131;26654:4;26528:131;:::i;:::-;26520:139;;26247:419;;;:::o;26672:170::-;26812:22;26808:1;26800:6;26796:14;26789:46;26672:170;:::o;26848:366::-;26990:3;27011:67;27075:2;27070:3;27011:67;:::i;:::-;27004:74;;27087:93;27176:3;27087:93;:::i;:::-;27205:2;27200:3;27196:12;27189:19;;26848:366;;;:::o;27220:419::-;27386:4;27424:2;27413:9;27409:18;27401:26;;27473:9;27467:4;27463:20;27459:1;27448:9;27444:17;27437:47;27501:131;27627:4;27501:131;:::i;:::-;27493:139;;27220:419;;;:::o;27645:169::-;27785:21;27781:1;27773:6;27769:14;27762:45;27645:169;:::o;27820:366::-;27962:3;27983:67;28047:2;28042:3;27983:67;:::i;:::-;27976:74;;28059:93;28148:3;28059:93;:::i;:::-;28177:2;28172:3;28168:12;28161:19;;27820:366;;;:::o;28192:419::-;28358:4;28396:2;28385:9;28381:18;28373:26;;28445:9;28439:4;28435:20;28431:1;28420:9;28416:17;28409:47;28473:131;28599:4;28473:131;:::i;:::-;28465:139;;28192:419;;;:::o;28617:181::-;28757:33;28753:1;28745:6;28741:14;28734:57;28617:181;:::o;28804:366::-;28946:3;28967:67;29031:2;29026:3;28967:67;:::i;:::-;28960:74;;29043:93;29132:3;29043:93;:::i;:::-;29161:2;29156:3;29152:12;29145:19;;28804:366;;;:::o;29176:419::-;29342:4;29380:2;29369:9;29365:18;29357:26;;29429:9;29423:4;29419:20;29415:1;29404:9;29400:17;29393:47;29457:131;29583:4;29457:131;:::i;:::-;29449:139;;29176:419;;;:::o;29601:332::-;29722:4;29760:2;29749:9;29745:18;29737:26;;29773:71;29841:1;29830:9;29826:17;29817:6;29773:71;:::i;:::-;29854:72;29922:2;29911:9;29907:18;29898:6;29854:72;:::i;:::-;29601:332;;;;;:::o;29939:442::-;30088:4;30126:2;30115:9;30111:18;30103:26;;30139:71;30207:1;30196:9;30192:17;30183:6;30139:71;:::i;:::-;30220:72;30288:2;30277:9;30273:18;30264:6;30220:72;:::i;:::-;30302;30370:2;30359:9;30355:18;30346:6;30302:72;:::i;:::-;29939:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2268000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addClaimableBatch(address[],uint256[])": "infinite",
								"approveClaim()": "27821",
								"approvedForClaim(address)": "2923",
								"canClaim(address)": "9588",
								"claim()": "infinite",
								"claimApprovalFee()": "2494",
								"claimBlocked(address)": "2879",
								"claimEnabled()": "2556",
								"contractTokenBalance()": "infinite",
								"depositTokens(uint256)": "infinite",
								"emergencyWithdraw()": "infinite",
								"emergencyWithdrawCooldown()": "2493",
								"getClaimableBalance(address)": "2876",
								"getStats()": "infinite",
								"getTotalClaimed(address)": "2941",
								"getUnallocatedTokens()": "infinite",
								"lastEmergencyWithdraw()": "2471",
								"maxAllocationPerAddress()": "2514",
								"owner()": "2626",
								"renounceOwnership()": "infinite",
								"setClaimApprovalFee(uint256)": "infinite",
								"setClaimBlockedForAddress(address,bool)": "infinite",
								"setClaimEnabled(bool)": "infinite",
								"token()": "infinite",
								"totalAddressesClaimed()": "2537",
								"totalAllocated()": "2493",
								"totalRegisteredAddresses()": "2470",
								"transferOwnership(address)": "infinite",
								"withdrawApprovalFees()": "infinite",
								"withdrawUnallocatedTokens()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1830,
									"end": 12270,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 1830,
									"end": 12270,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1830,
									"end": 12270,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2917,
									"end": 2925,
									"name": "PUSH",
									"source": 11,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "PUSH",
									"source": 11,
									"value": "7A120"
								},
								{
									"begin": 3002,
									"end": 3030,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3002,
									"end": 3030,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3002,
									"end": 3030,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3002,
									"end": 3030,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 3002,
									"end": 3030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3002,
									"end": 3030,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3002,
									"end": 3030,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2961,
									"end": 3030,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 2961,
									"end": 3030,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3194,
									"end": 3201,
									"name": "PUSH",
									"source": 11,
									"value": "93A80"
								},
								{
									"begin": 3151,
									"end": 3201,
									"name": "PUSH",
									"source": 11,
									"value": "D"
								},
								{
									"begin": 3151,
									"end": 3201,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 4225,
									"end": 4398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "tag",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4260,
									"end": 4270,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4317,
									"end": 4318,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4290,
									"end": 4319,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4290,
									"end": 4319,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4298,
									"end": 4304,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4290,
									"end": 4319,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4290,
									"end": 4319,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4290,
									"end": 4319,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 4282,
									"end": 4337,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 4282,
									"end": 4337,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4355,
									"end": 4361,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4347,
									"end": 4361,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4347,
									"end": 4361,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4347,
									"end": 4361,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 4347,
									"end": 4361,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4347,
									"end": 4361,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4347,
									"end": 4361,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4347,
									"end": 4361,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4347,
									"end": 4361,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4347,
									"end": 4361,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4347,
									"end": 4361,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4386,
									"end": 4391,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4371,
									"end": 4383,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 4371,
									"end": 4383,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4371,
									"end": 4391,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 4371,
									"end": 4391,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 4371,
									"end": 4391,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4371,
									"end": 4391,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 4371,
									"end": 4391,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4371,
									"end": 4391,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 4371,
									"end": 4391,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4371,
									"end": 4391,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4371,
									"end": 4391,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4371,
									"end": 4391,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4371,
									"end": 4391,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4371,
									"end": 4391,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4371,
									"end": 4391,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4371,
									"end": 4391,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4371,
									"end": 4391,
									"modifierDepth": 1,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 4371,
									"end": 4391,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4371,
									"end": 4391,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 4371,
									"end": 4391,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4225,
									"end": 4398,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1830,
									"end": 12270,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1830,
									"end": 12270,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 84,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 84,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 78,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 62,
									"end": 78,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 62,
									"end": 78,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 84,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 84,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 90,
									"end": 270,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 90,
									"end": 270,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 138,
									"end": 215,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 136,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 216,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 232,
									"end": 233,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 225,
									"end": 240,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 259,
									"end": 263,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 256,
									"end": 257,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 264,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 276,
									"end": 686,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 276,
									"end": 686,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 316,
									"end": 323,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 359,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 357,
									"end": 358,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 339,
									"end": 359,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 339,
									"end": 359,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 339,
									"end": 359,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 339,
									"end": 359,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 334,
									"end": 359,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 359,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 373,
									"end": 393,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 391,
									"end": 392,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 373,
									"end": 393,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 373,
									"end": 393,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 373,
									"end": 393,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 373,
									"end": 393,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 368,
									"end": 393,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 368,
									"end": 393,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 428,
									"end": 429,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 425,
									"end": 426,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 421,
									"end": 430,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 450,
									"end": 480,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 468,
									"end": 479,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 450,
									"end": 480,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 450,
									"end": 480,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 450,
									"end": 480,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 450,
									"end": 480,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 439,
									"end": 480,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 439,
									"end": 480,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 629,
									"end": 630,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 620,
									"end": 627,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 616,
									"end": 631,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 613,
									"end": 614,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 610,
									"end": 632,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 590,
									"end": 591,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 583,
									"end": 592,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 563,
									"end": 646,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 540,
									"end": 679,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 540,
									"end": 679,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 659,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 659,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 659,
									"end": 677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 659,
									"end": 677,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 659,
									"end": 677,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 540,
									"end": 679,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 540,
									"end": 679,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 324,
									"end": 686,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 276,
									"end": 686,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 276,
									"end": 686,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 276,
									"end": 686,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 276,
									"end": 686,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 276,
									"end": 686,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 773,
									"end": 890,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 773,
									"end": 890,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 882,
									"end": 883,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 879,
									"end": 880,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 872,
									"end": 884,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1019,
									"end": 1145,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 1019,
									"end": 1145,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1063,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1096,
									"end": 1138,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1085,
									"end": 1139,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1074,
									"end": 1139,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1074,
									"end": 1139,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1019,
									"end": 1145,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1019,
									"end": 1145,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1019,
									"end": 1145,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1019,
									"end": 1145,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1151,
									"end": 1247,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 1151,
									"end": 1247,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1217,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1235,
									"end": 1240,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1217,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 1217,
									"end": 1241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1217,
									"end": 1241,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1217,
									"end": 1241,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1206,
									"end": 1241,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1206,
									"end": 1241,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1151,
									"end": 1247,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1151,
									"end": 1247,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1151,
									"end": 1247,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1151,
									"end": 1247,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1253,
									"end": 1363,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 1253,
									"end": 1363,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1304,
									"end": 1311,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1333,
									"end": 1357,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 1351,
									"end": 1356,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1333,
									"end": 1357,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 1333,
									"end": 1357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1333,
									"end": 1357,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 1333,
									"end": 1357,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1357,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1357,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1253,
									"end": 1363,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1253,
									"end": 1363,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1253,
									"end": 1363,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1253,
									"end": 1363,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1369,
									"end": 1519,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1369,
									"end": 1519,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1456,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 1488,
									"end": 1493,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1456,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 1456,
									"end": 1494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1456,
									"end": 1494,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 1456,
									"end": 1494,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1449,
									"end": 1454,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1446,
									"end": 1495,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1436,
									"end": 1513,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1436,
									"end": 1513,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1509,
									"end": 1510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1499,
									"end": 1511,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1436,
									"end": 1513,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1436,
									"end": 1513,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1369,
									"end": 1519,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1369,
									"end": 1519,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1525,
									"end": 1696,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1525,
									"end": 1696,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1596,
									"end": 1601,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1627,
									"end": 1633,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1621,
									"end": 1634,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1612,
									"end": 1634,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1612,
									"end": 1634,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1643,
									"end": 1690,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1684,
									"end": 1689,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1643,
									"end": 1690,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1643,
									"end": 1690,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1643,
									"end": 1690,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1643,
									"end": 1690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1525,
									"end": 1696,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1525,
									"end": 1696,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1525,
									"end": 1696,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1525,
									"end": 1696,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1525,
									"end": 1696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1702,
									"end": 2081,
									"name": "tag",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 1702,
									"end": 2081,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1786,
									"end": 1792,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1837,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1814,
									"end": 1821,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1810,
									"end": 1833,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1806,
									"end": 1838,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 1803,
									"end": 1922,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1803,
									"end": 1922,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1803,
									"end": 1922,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1841,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1841,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 1841,
									"end": 1920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1841,
									"end": 1920,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1841,
									"end": 1920,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1803,
									"end": 1922,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1803,
									"end": 1922,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1961,
									"end": 1962,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1986,
									"end": 2064,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 2056,
									"end": 2063,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2047,
									"end": 2053,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2036,
									"end": 2045,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2032,
									"end": 2054,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1986,
									"end": 2064,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1986,
									"end": 2064,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1986,
									"end": 2064,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1986,
									"end": 2064,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 2064,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 2064,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1932,
									"end": 2074,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1702,
									"end": 2081,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1702,
									"end": 2081,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1702,
									"end": 2081,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1702,
									"end": 2081,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1702,
									"end": 2081,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2087,
									"end": 2205,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 2087,
									"end": 2205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2174,
									"end": 2198,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 2192,
									"end": 2197,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2174,
									"end": 2198,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 2174,
									"end": 2198,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2174,
									"end": 2198,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 2174,
									"end": 2198,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2169,
									"end": 2172,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2162,
									"end": 2199,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2087,
									"end": 2205,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2087,
									"end": 2205,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2087,
									"end": 2205,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2211,
									"end": 2433,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 2211,
									"end": 2433,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2304,
									"end": 2308,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2342,
									"end": 2344,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2331,
									"end": 2340,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2327,
									"end": 2345,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2319,
									"end": 2345,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2319,
									"end": 2345,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2355,
									"end": 2426,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 2423,
									"end": 2424,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2412,
									"end": 2421,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2408,
									"end": 2425,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2405,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2355,
									"end": 2426,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 2355,
									"end": 2426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2355,
									"end": 2426,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 2355,
									"end": 2426,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2211,
									"end": 2433,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2211,
									"end": 2433,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2211,
									"end": 2433,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2211,
									"end": 2433,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2211,
									"end": 2433,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2439,
									"end": 2608,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 2439,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2523,
									"end": 2534,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2557,
									"end": 2563,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2552,
									"end": 2555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2545,
									"end": 2564,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2597,
									"end": 2601,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2592,
									"end": 2595,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2588,
									"end": 2602,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2573,
									"end": 2602,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2573,
									"end": 2602,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2439,
									"end": 2608,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2439,
									"end": 2608,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2439,
									"end": 2608,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2439,
									"end": 2608,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2439,
									"end": 2608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2614,
									"end": 2777,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 2614,
									"end": 2777,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2754,
									"end": 2769,
									"name": "PUSH",
									"source": 12,
									"value": "496E76616C696420746F6B656E00000000000000000000000000000000000000"
								},
								{
									"begin": 2750,
									"end": 2751,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2742,
									"end": 2748,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2738,
									"end": 2752,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2731,
									"end": 2770,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2614,
									"end": 2777,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2614,
									"end": 2777,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2783,
									"end": 3149,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 2783,
									"end": 3149,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2925,
									"end": 2928,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2946,
									"end": 3013,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 3010,
									"end": 3012,
									"name": "PUSH",
									"source": 12,
									"value": "D"
								},
								{
									"begin": 3005,
									"end": 3008,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2946,
									"end": 3013,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 2946,
									"end": 3013,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2946,
									"end": 3013,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2946,
									"end": 3013,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2939,
									"end": 3013,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2939,
									"end": 3013,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3022,
									"end": 3115,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 3111,
									"end": 3114,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3022,
									"end": 3115,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 3022,
									"end": 3115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3022,
									"end": 3115,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 3022,
									"end": 3115,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3140,
									"end": 3142,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3135,
									"end": 3138,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3131,
									"end": 3143,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3124,
									"end": 3143,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3124,
									"end": 3143,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2783,
									"end": 3149,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2783,
									"end": 3149,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2783,
									"end": 3149,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2783,
									"end": 3149,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3155,
									"end": 3574,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 3155,
									"end": 3574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3321,
									"end": 3325,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3359,
									"end": 3361,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3348,
									"end": 3357,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3344,
									"end": 3362,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3336,
									"end": 3362,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3336,
									"end": 3362,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3408,
									"end": 3417,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3402,
									"end": 3406,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3398,
									"end": 3418,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3394,
									"end": 3395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3383,
									"end": 3392,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3379,
									"end": 3396,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3372,
									"end": 3419,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3567,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 3562,
									"end": 3566,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3567,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 3436,
									"end": 3567,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3567,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 3436,
									"end": 3567,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3428,
									"end": 3567,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3428,
									"end": 3567,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3155,
									"end": 3574,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3155,
									"end": 3574,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3155,
									"end": 3574,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3155,
									"end": 3574,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1830,
									"end": 12270,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1830,
									"end": 12270,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1830,
									"end": 12270,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 1830,
									"end": 12270,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1830,
									"end": 12270,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1830,
									"end": 12270,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1830,
									"end": 12270,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1830,
									"end": 12270,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1830,
									"end": 12270,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1830,
									"end": 12270,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "1131"
								},
								{
									"begin": 1830,
									"end": 12270,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1830,
									"end": 12270,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1830,
									"end": 12270,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e7a7a609babe201dbbe8b61ac15a22f53f3651e2ee2299d4b4a287940e6ff8c964736f6c63430008140033",
									".code": [
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "8F060DA9"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "D7BEBAC0"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "E1413163"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "E1413163"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "E1FFBA62"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "FC0C546A"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "D7BEBAC0"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "DB2E21BC"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "DC7F9E34"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "DD49756E"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "9E9AED62"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "9E9AED62"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "A0470CB4"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "BF3506C1"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "C59D4847"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "8F060DA9"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "92929A09"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "94192B9F"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "4243FC4E"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "6104F4B5"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "6104F4B5"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "86E755C6"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "4243FC4E"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "45F7F249"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "4E71D92D"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "522BF1D4"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "26155E53"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "26155E53"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "28607BC6"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "2866ED21"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "2BB2ED39"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "6DEF802"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "1F322564"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "2019DDF8"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 12270,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 10953,
											"end": 11083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 10953,
											"end": 11083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 10953,
											"end": 11083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 3286,
											"end": 3317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 3286,
											"end": 3317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 5500,
											"end": 5694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 5500,
											"end": 5694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 3070,
											"end": 3106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 3070,
											"end": 3106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 3151,
											"end": 3201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 3151,
											"end": 3201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2066,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2066,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 2622,
											"end": 2658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2622,
											"end": 2658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 9265,
											"end": 9480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 9265,
											"end": 9480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 2696,
											"end": 2725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2696,
											"end": 2725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 7946,
											"end": 8640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 11224,
											"end": 11348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 11224,
											"end": 11348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 11224,
											"end": 11348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 2547,
											"end": 2586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2547,
											"end": 2586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 2961,
											"end": 3030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2961,
											"end": 3030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 2354,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 2354,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2354,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 5086,
											"end": 5222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 5086,
											"end": 5222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 2457,
											"end": 2505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 2457,
											"end": 2505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2457,
											"end": 2505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 9049,
											"end": 9165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 9049,
											"end": 9165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4772,
											"end": 4977,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 4772,
											"end": 4977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4772,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 4772,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 4772,
											"end": 4977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4772,
											"end": 4977,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 4772,
											"end": 4977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4772,
											"end": 4977,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 11478,
											"end": 11673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 11478,
											"end": 11673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 11478,
											"end": 11673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 11759,
											"end": 12268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 11759,
											"end": 12268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 6481,
											"end": 7829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 6481,
											"end": 7829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 9582,
											"end": 10089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 10205,
											"end": 10739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 5853,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 5853,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 8735,
											"end": 8963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 4521,
											"end": 4667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 4521,
											"end": 4667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 1975,
											"end": 2004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 1975,
											"end": 2004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11023,
											"end": 11030,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11049,
											"end": 11066,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 11049,
											"end": 11076,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11067,
											"end": 11075,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11049,
											"end": 11076,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11049,
											"end": 11076,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11049,
											"end": 11076,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11049,
											"end": 11076,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11049,
											"end": 11076,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11049,
											"end": 11076,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11049,
											"end": 11076,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11049,
											"end": 11076,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11049,
											"end": 11076,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11049,
											"end": 11076,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11049,
											"end": 11076,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11049,
											"end": 11076,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11049,
											"end": 11076,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11049,
											"end": 11076,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11049,
											"end": 11076,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11049,
											"end": 11076,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11042,
											"end": 11076,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11042,
											"end": 11076,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 11083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5622,
											"end": 5630,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5597,
											"end": 5619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5618,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5597,
											"end": 5619,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5597,
											"end": 5619,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5619,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5597,
											"end": 5619,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5619,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5597,
											"end": 5619,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5597,
											"end": 5619,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5597,
											"end": 5630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5597,
											"end": 5630,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5630,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5630,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5630,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5597,
											"end": 5630,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5630,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5630,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5630,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5630,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5630,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5630,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5630,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5630,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5630,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5676,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5645,
											"end": 5687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5645,
											"end": 5687,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5645,
											"end": 5687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "129E15046DD77BE10C4CDAC8841646B9F3B6D22A00544B93362E9B84C05E6960"
										},
										{
											"begin": 5678,
											"end": 5686,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5645,
											"end": 5687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5645,
											"end": 5687,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5645,
											"end": 5687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 5645,
											"end": 5687,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5645,
											"end": 5687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5645,
											"end": 5687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 5645,
											"end": 5687,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5645,
											"end": 5687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 5645,
											"end": 5687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5645,
											"end": 5687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5645,
											"end": 5687,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5645,
											"end": 5687,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5645,
											"end": 5687,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5645,
											"end": 5687,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5645,
											"end": 5687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5645,
											"end": 5687,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9318,
											"end": 9325,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9337,
											"end": 9360,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9363,
											"end": 9385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 9363,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 9363,
											"end": 9385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9363,
											"end": 9385,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 9363,
											"end": 9385,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9337,
											"end": 9385,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9337,
											"end": 9385,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9420,
											"end": 9434,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 9420,
											"end": 9434,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9402,
											"end": 9417,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9402,
											"end": 9434,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9402,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 9402,
											"end": 9473,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9472,
											"end": 9473,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9402,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 9402,
											"end": 9473,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9402,
											"end": 9473,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 9402,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9455,
											"end": 9469,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 9455,
											"end": 9469,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9437,
											"end": 9452,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9437,
											"end": 9469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 9437,
											"end": 9469,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9437,
											"end": 9469,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9437,
											"end": 9469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 9437,
											"end": 9469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9437,
											"end": 9469,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 9437,
											"end": 9469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9402,
											"end": 9473,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 9402,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9395,
											"end": 9473,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9395,
											"end": 9473,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9395,
											"end": 9473,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9265,
											"end": 9480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 7946,
											"end": 8640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8003,
											"end": 8015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 8003,
											"end": 8015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8003,
											"end": 8015,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8003,
											"end": 8015,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8003,
											"end": 8015,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8003,
											"end": 8015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 8003,
											"end": 8015,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 8003,
											"end": 8015,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8003,
											"end": 8015,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 8003,
											"end": 8015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 8003,
											"end": 8015,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 7995,
											"end": 8037,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 7995,
											"end": 8037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8056,
											"end": 8068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8069,
											"end": 8079,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 8056,
											"end": 8080,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8055,
											"end": 8080,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 8047,
											"end": 8115,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 8047,
											"end": 8115,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8150,
											"end": 8160,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 8133,
											"end": 8161,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 8125,
											"end": 8187,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 8125,
											"end": 8187,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8197,
											"end": 8211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8214,
											"end": 8231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 8214,
											"end": 8243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8242,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 8214,
											"end": 8243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8214,
											"end": 8243,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8214,
											"end": 8243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8214,
											"end": 8243,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8214,
											"end": 8243,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8214,
											"end": 8243,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8214,
											"end": 8243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8214,
											"end": 8243,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8214,
											"end": 8243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8214,
											"end": 8243,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8214,
											"end": 8243,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8214,
											"end": 8243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8214,
											"end": 8243,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8214,
											"end": 8243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8214,
											"end": 8243,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8214,
											"end": 8243,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8197,
											"end": 8243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8197,
											"end": 8243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8261,
											"end": 8267,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8261,
											"end": 8271,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 8253,
											"end": 8304,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 8253,
											"end": 8304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8330,
											"end": 8340,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 8320,
											"end": 8349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8320,
											"end": 8349,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8320,
											"end": 8349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9E09DE4B8E45666DEB3EC2BC8225F07988E54EF533EEC97CB0B4610127183D79"
										},
										{
											"begin": 8342,
											"end": 8348,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8320,
											"end": 8349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8320,
											"end": 8349,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8320,
											"end": 8349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 8320,
											"end": 8349,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8320,
											"end": 8349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8320,
											"end": 8349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 8320,
											"end": 8349,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8320,
											"end": 8349,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 8320,
											"end": 8349,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8320,
											"end": 8349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8320,
											"end": 8349,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8320,
											"end": 8349,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8320,
											"end": 8349,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8320,
											"end": 8349,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8320,
											"end": 8349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8320,
											"end": 8349,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 8392,
											"end": 8393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8360,
											"end": 8377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 8360,
											"end": 8389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8378,
											"end": 8388,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 8360,
											"end": 8389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8360,
											"end": 8389,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8360,
											"end": 8389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8360,
											"end": 8389,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8360,
											"end": 8389,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8360,
											"end": 8389,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8360,
											"end": 8389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8360,
											"end": 8389,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8360,
											"end": 8389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8360,
											"end": 8389,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8360,
											"end": 8389,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8360,
											"end": 8389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8360,
											"end": 8389,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8360,
											"end": 8389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8360,
											"end": 8389,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8360,
											"end": 8393,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8360,
											"end": 8393,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8360,
											"end": 8393,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8360,
											"end": 8393,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8421,
											"end": 8427,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8403,
											"end": 8417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 8403,
											"end": 8417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8403,
											"end": 8427,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8403,
											"end": 8427,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8403,
											"end": 8427,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8403,
											"end": 8427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 8403,
											"end": 8427,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8403,
											"end": 8427,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8403,
											"end": 8427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 8403,
											"end": 8427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8403,
											"end": 8427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 8403,
											"end": 8427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8403,
											"end": 8427,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8403,
											"end": 8427,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8403,
											"end": 8427,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8403,
											"end": 8427,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8403,
											"end": 8427,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8403,
											"end": 8427,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8403,
											"end": 8427,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8437,
											"end": 8458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 8437,
											"end": 8458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8437,
											"end": 8460,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8437,
											"end": 8460,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8437,
											"end": 8460,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8437,
											"end": 8460,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8437,
											"end": 8460,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8437,
											"end": 8460,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8437,
											"end": 8460,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 8437,
											"end": 8460,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8437,
											"end": 8460,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 8437,
											"end": 8460,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8437,
											"end": 8460,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 8437,
											"end": 8460,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8437,
											"end": 8460,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8437,
											"end": 8460,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8437,
											"end": 8460,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8437,
											"end": 8460,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8437,
											"end": 8460,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8501,
											"end": 8507,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8485,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8470,
											"end": 8497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8496,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8470,
											"end": 8497,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8470,
											"end": 8497,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8497,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8470,
											"end": 8497,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8497,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8470,
											"end": 8497,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8470,
											"end": 8497,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8470,
											"end": 8507,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8507,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8507,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 8470,
											"end": 8507,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8507,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 8470,
											"end": 8507,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8507,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 8470,
											"end": 8507,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8507,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8507,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8507,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8507,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8507,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8507,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8507,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8549,
											"end": 8554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8518,
											"end": 8534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 8518,
											"end": 8546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8535,
											"end": 8545,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8518,
											"end": 8546,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8518,
											"end": 8546,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8546,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8518,
											"end": 8546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8546,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8546,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8518,
											"end": 8546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8518,
											"end": 8546,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8518,
											"end": 8554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 8518,
											"end": 8554,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8554,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8554,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8554,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 8518,
											"end": 8554,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8554,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8554,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8554,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8554,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8554,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8554,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8554,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8554,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8554,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8554,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8554,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 8633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 8614,
											"end": 8624,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 8626,
											"end": 8632,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 8600,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1131"
										},
										{
											"begin": 8595,
											"end": 8613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8595,
											"end": 8613,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 8613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 8595,
											"end": 8613,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 8633,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 8633,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 8633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 8633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8595,
											"end": 8633,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 8633,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 8633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 8595,
											"end": 8633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7985,
											"end": 8640,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 8640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11290,
											"end": 11297,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11316,
											"end": 11331,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11316,
											"end": 11341,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11332,
											"end": 11340,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11316,
											"end": 11341,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11316,
											"end": 11341,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11316,
											"end": 11341,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11316,
											"end": 11341,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11316,
											"end": 11341,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11316,
											"end": 11341,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11316,
											"end": 11341,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11316,
											"end": 11341,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11316,
											"end": 11341,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11316,
											"end": 11341,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11316,
											"end": 11341,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11316,
											"end": 11341,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11316,
											"end": 11341,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11316,
											"end": 11341,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11316,
											"end": 11341,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11316,
											"end": 11341,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11309,
											"end": 11341,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11309,
											"end": 11341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5170,
											"end": 5178,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5155,
											"end": 5167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5155,
											"end": 5178,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5178,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5155,
											"end": 5178,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5178,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5178,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5178,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5178,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5178,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5178,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5178,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5178,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5193,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1EDD4DC7F91A5992ABA0F39C0428BCF4DF13D001EEBC26EB188307D057F14A07"
										},
										{
											"begin": 5206,
											"end": 5214,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5193,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5193,
											"end": 5215,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5193,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 5193,
											"end": 5215,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5193,
											"end": 5215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5193,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 5193,
											"end": 5215,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5193,
											"end": 5215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 5193,
											"end": 5215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5193,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5193,
											"end": 5215,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5193,
											"end": 5215,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5193,
											"end": 5215,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5193,
											"end": 5215,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5193,
											"end": 5215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5193,
											"end": 5215,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9102,
											"end": 9109,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9128,
											"end": 9133,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1131"
										},
										{
											"begin": 9128,
											"end": 9143,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9128,
											"end": 9143,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9143,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 9152,
											"end": 9156,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 9128,
											"end": 9158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 9128,
											"end": 9158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9121,
											"end": 9158,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9121,
											"end": 9158,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9049,
											"end": 9165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4772,
											"end": 4977,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 4772,
											"end": 4977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4844,
											"end": 4860,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 4844,
											"end": 4860,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4831,
											"end": 4840,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 4831,
											"end": 4860,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 4823,
											"end": 4885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 4823,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4926,
											"end": 4930,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4895,
											"end": 4911,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 4895,
											"end": 4923,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4912,
											"end": 4922,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4923,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4895,
											"end": 4923,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4923,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4895,
											"end": 4923,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4923,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4923,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4923,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4895,
											"end": 4923,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4923,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4923,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4923,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4923,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4895,
											"end": 4923,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4923,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4895,
											"end": 4923,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4923,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4895,
											"end": 4930,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4895,
											"end": 4930,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4930,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4930,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4930,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4930,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4895,
											"end": 4930,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4930,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4930,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4930,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4930,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4930,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4930,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4930,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4930,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4930,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4930,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4930,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4959,
											"end": 4969,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4945,
											"end": 4970,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4945,
											"end": 4970,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4945,
											"end": 4970,
											"name": "PUSH",
											"source": 11,
											"value": "B7FA0F30E1EDE3196616147DFDF6C94E47523298677B4F7B0C61027A9F0EBF54"
										},
										{
											"begin": 4945,
											"end": 4970,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4945,
											"end": 4970,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4945,
											"end": 4970,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4945,
											"end": 4970,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4945,
											"end": 4970,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4945,
											"end": 4970,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4945,
											"end": 4970,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4945,
											"end": 4970,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4945,
											"end": 4970,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 4772,
											"end": 4977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11537,
											"end": 11541,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11561,
											"end": 11573,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 11561,
											"end": 11573,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11561,
											"end": 11573,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11573,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11573,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11573,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 11561,
											"end": 11573,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11573,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11573,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11573,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 11561,
											"end": 11573,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11600,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11600,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11600,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 11561,
											"end": 11600,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11578,
											"end": 11590,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11591,
											"end": 11599,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 11578,
											"end": 11600,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11577,
											"end": 11600,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11600,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 11561,
											"end": 11600,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11630,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11630,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 11561,
											"end": 11630,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11630,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11620,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11621,
											"end": 11629,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 11604,
											"end": 11630,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11630,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 11561,
											"end": 11630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11665,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11665,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11665,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 11561,
											"end": 11665,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11664,
											"end": 11665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11634,
											"end": 11651,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 11634,
											"end": 11661,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11652,
											"end": 11660,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11661,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11634,
											"end": 11661,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11661,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11634,
											"end": 11661,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11661,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11661,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11661,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11634,
											"end": 11661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11661,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11661,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11661,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11634,
											"end": 11661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11661,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11634,
											"end": 11661,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11661,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11665,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11665,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 11561,
											"end": 11665,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11553,
											"end": 11666,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11553,
											"end": 11666,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11839,
											"end": 11863,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11877,
											"end": 11898,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11912,
											"end": 11941,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11955,
											"end": 11978,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11992,
											"end": 12010,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12054,
											"end": 12078,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 12054,
											"end": 12078,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12035,
											"end": 12078,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 12035,
											"end": 12078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12104,
											"end": 12125,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 12104,
											"end": 12125,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12088,
											"end": 12125,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 12088,
											"end": 12125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12159,
											"end": 12181,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 12159,
											"end": 12179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 12159,
											"end": 12181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12159,
											"end": 12181,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 12159,
											"end": 12181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12135,
											"end": 12181,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12135,
											"end": 12181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12209,
											"end": 12223,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 12209,
											"end": 12223,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12191,
											"end": 12223,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12191,
											"end": 12223,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12249,
											"end": 12261,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 12249,
											"end": 12261,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12249,
											"end": 12261,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12249,
											"end": 12261,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12249,
											"end": 12261,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12249,
											"end": 12261,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 12249,
											"end": 12261,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 12249,
											"end": 12261,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12249,
											"end": 12261,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12249,
											"end": 12261,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 12249,
											"end": 12261,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12233,
											"end": 12261,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12233,
											"end": 12261,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 11759,
											"end": 12268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6659,
											"end": 6667,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6659,
											"end": 6667,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6659,
											"end": 6674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6659,
											"end": 6674,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6639,
											"end": 6648,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6639,
											"end": 6648,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6639,
											"end": 6655,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6639,
											"end": 6655,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6639,
											"end": 6674,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 6618,
											"end": 6726,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 6618,
											"end": 6726,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6737,
											"end": 6763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6783,
											"end": 6792,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6778,
											"end": 7557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 6778,
											"end": 7557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6802,
											"end": 6811,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6802,
											"end": 6811,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6802,
											"end": 6818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6802,
											"end": 6818,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6798,
											"end": 6799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6798,
											"end": 6818,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6778,
											"end": 7557,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6778,
											"end": 7557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 6778,
											"end": 7557,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6839,
											"end": 6854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6857,
											"end": 6866,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6866,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6867,
											"end": 6868,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 6857,
											"end": 6869,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 6857,
											"end": 6869,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 6857,
											"end": 6869,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6839,
											"end": 6869,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6839,
											"end": 6869,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6883,
											"end": 6897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 2925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6900,
											"end": 6908,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6908,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6909,
											"end": 6910,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6911,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 6900,
											"end": 6911,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 6900,
											"end": 6911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 6900,
											"end": 6911,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 6900,
											"end": 6911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 6900,
											"end": 6911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6900,
											"end": 6911,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6911,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6933,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 6900,
											"end": 6933,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6933,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6933,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 6900,
											"end": 6933,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6933,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 6900,
											"end": 6933,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6883,
											"end": 6933,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6883,
											"end": 6933,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6979,
											"end": 6980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6956,
											"end": 6963,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6956,
											"end": 6975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6956,
											"end": 6975,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6956,
											"end": 6975,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 6956,
											"end": 6980,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 6948,
											"end": 7005,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 6948,
											"end": 7005,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7083,
											"end": 7106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 7083,
											"end": 7106,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7073,
											"end": 7079,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7062,
											"end": 7069,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 7044,
											"end": 7079,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7079,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 7044,
											"end": 7079,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7079,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 7044,
											"end": 7079,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7106,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7106,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 7019,
											"end": 7172,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 7019,
											"end": 7172,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7206,
											"end": 7213,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7192,
											"end": 7214,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7187,
											"end": 7374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 7187,
											"end": 7374,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7259,
											"end": 7263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7234,
											"end": 7247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 7234,
											"end": 7256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7255,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7234,
											"end": 7256,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7234,
											"end": 7256,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7256,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7256,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7234,
											"end": 7256,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7256,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7256,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7256,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7234,
											"end": 7256,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7234,
											"end": 7256,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7234,
											"end": 7263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7234,
											"end": 7263,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7263,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7263,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7263,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7234,
											"end": 7263,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7263,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7263,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7263,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7263,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7263,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7263,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7263,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7263,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7263,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7263,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7263,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 7281,
											"end": 7305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7281,
											"end": 7307,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7307,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7307,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7307,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7307,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7307,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7307,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 7281,
											"end": 7307,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7307,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 7281,
											"end": 7307,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7307,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 7281,
											"end": 7307,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7307,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7307,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7307,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7307,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7307,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7351,
											"end": 7358,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7330,
											"end": 7359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7330,
											"end": 7359,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7330,
											"end": 7359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1837DB44F707818DFCE8415EF80A201E86882BC1BFFABDDED272512A96C0799E"
										},
										{
											"begin": 7330,
											"end": 7359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7330,
											"end": 7359,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7330,
											"end": 7359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7330,
											"end": 7359,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7330,
											"end": 7359,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7330,
											"end": 7359,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7330,
											"end": 7359,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7330,
											"end": 7359,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7330,
											"end": 7359,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 7187,
											"end": 7374,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 7187,
											"end": 7374,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7418,
											"end": 7424,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 7388,
											"end": 7414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7406,
											"end": 7413,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7388,
											"end": 7414,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7388,
											"end": 7414,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7414,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7414,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7388,
											"end": 7414,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7414,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7414,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7388,
											"end": 7414,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7388,
											"end": 7414,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7388,
											"end": 7424,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7424,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7424,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 7388,
											"end": 7424,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 7388,
											"end": 7424,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7424,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 7388,
											"end": 7424,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7424,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7424,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7424,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7424,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7424,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7424,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7460,
											"end": 7466,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 7438,
											"end": 7466,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 7438,
											"end": 7466,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 7438,
											"end": 7466,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7502,
											"end": 7509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7486,
											"end": 7546,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4885D73252B9E2C420B677D64D50E8A5798773DBB4CB99C5A2AB2824F725D9A8"
										},
										{
											"begin": 7511,
											"end": 7517,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 7519,
											"end": 7545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7537,
											"end": 7544,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7545,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7545,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7545,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7545,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7519,
											"end": 7545,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7545,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7545,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7519,
											"end": 7545,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7519,
											"end": 7545,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7545,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7486,
											"end": 7546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 7486,
											"end": 7546,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7546,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7546,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 7486,
											"end": 7546,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7546,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 7486,
											"end": 7546,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7486,
											"end": 7546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7546,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7546,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7546,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7546,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7546,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 6825,
											"end": 7557,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6825,
											"end": 7557,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6820,
											"end": 6823,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6820,
											"end": 6823,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6820,
											"end": 6823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 6820,
											"end": 6823,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6820,
											"end": 6823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 6820,
											"end": 6823,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6820,
											"end": 6823,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 6820,
											"end": 6823,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6820,
											"end": 6823,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6820,
											"end": 6823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6820,
											"end": 6823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6778,
											"end": 7557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 6778,
											"end": 7557,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6778,
											"end": 7557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 6778,
											"end": 7557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6778,
											"end": 7557,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7631,
											"end": 7649,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7614,
											"end": 7628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 7614,
											"end": 7628,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7614,
											"end": 7649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 7614,
											"end": 7649,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7614,
											"end": 7649,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7614,
											"end": 7649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 7614,
											"end": 7649,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7614,
											"end": 7649,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 7614,
											"end": 7649,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7588,
											"end": 7610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 7588,
											"end": 7608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 7588,
											"end": 7610,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7588,
											"end": 7610,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 7588,
											"end": 7610,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7588,
											"end": 7649,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7588,
											"end": 7649,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 7567,
											"end": 7719,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 7567,
											"end": 7719,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7766,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7730,
											"end": 7744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 7730,
											"end": 7744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7730,
											"end": 7766,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7730,
											"end": 7766,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7730,
											"end": 7766,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7730,
											"end": 7766,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 7730,
											"end": 7766,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7730,
											"end": 7766,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7730,
											"end": 7766,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 7730,
											"end": 7766,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7730,
											"end": 7766,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 7730,
											"end": 7766,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7730,
											"end": 7766,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7730,
											"end": 7766,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7730,
											"end": 7766,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7730,
											"end": 7766,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7730,
											"end": 7766,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7730,
											"end": 7766,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7730,
											"end": 7766,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F14D1C8E59D4CD079B88D0E19CF0DE41C86B7A761D5032C0947977002B3AD93A"
										},
										{
											"begin": 7802,
											"end": 7811,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7802,
											"end": 7811,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7813,
											"end": 7821,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7813,
											"end": 7821,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7782,
											"end": 7822,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 7782,
											"end": 7822,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7822,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7822,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7822,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 7782,
											"end": 7822,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7822,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 7782,
											"end": 7822,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7782,
											"end": 7822,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7822,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7822,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7822,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7822,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 6608,
											"end": 7829,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6481,
											"end": 7829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 9582,
											"end": 10089,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9653,
											"end": 9676,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9679,
											"end": 9684,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1131"
										},
										{
											"begin": 9679,
											"end": 9694,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9679,
											"end": 9694,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9694,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 9703,
											"end": 9707,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 9679,
											"end": 9709,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9679,
											"end": 9709,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 9679,
											"end": 9709,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 9679,
											"end": 9709,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9653,
											"end": 9709,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9653,
											"end": 9709,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9745,
											"end": 9746,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9727,
											"end": 9742,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9727,
											"end": 9746,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 9719,
											"end": 9774,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 9719,
											"end": 9774,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9848,
											"end": 9873,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 9848,
											"end": 9873,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9824,
											"end": 9845,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 9824,
											"end": 9845,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9824,
											"end": 9873,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 9824,
											"end": 9873,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9824,
											"end": 9873,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9824,
											"end": 9873,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 9824,
											"end": 9873,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9824,
											"end": 9873,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 9824,
											"end": 9873,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9805,
											"end": 9820,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 9805,
											"end": 9873,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 9805,
											"end": 9873,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 9784,
											"end": 9919,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 9784,
											"end": 9919,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9954,
											"end": 9969,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 9930,
											"end": 9951,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 9930,
											"end": 9969,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9930,
											"end": 9969,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9930,
											"end": 9969,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 9930,
											"end": 9969,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9979,
											"end": 10023,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 9998,
											"end": 10005,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 9998,
											"end": 10003,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 9998,
											"end": 10005,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10005,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 9998,
											"end": 10005,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10007,
											"end": 10022,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9979,
											"end": 9984,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1131"
										},
										{
											"begin": 9979,
											"end": 9997,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9979,
											"end": 9997,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9979,
											"end": 9997,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 9979,
											"end": 9997,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9979,
											"end": 10023,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9979,
											"end": 10023,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9979,
											"end": 10023,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9979,
											"end": 10023,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9979,
											"end": 10023,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9979,
											"end": 10023,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9979,
											"end": 10023,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 9979,
											"end": 10023,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10057,
											"end": 10064,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 10057,
											"end": 10062,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 10057,
											"end": 10064,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10057,
											"end": 10064,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 10057,
											"end": 10064,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10039,
											"end": 10082,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10039,
											"end": 10082,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10039,
											"end": 10082,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695"
										},
										{
											"begin": 10066,
											"end": 10081,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10039,
											"end": 10082,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10039,
											"end": 10082,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10039,
											"end": 10082,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 10039,
											"end": 10082,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10039,
											"end": 10082,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10039,
											"end": 10082,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 10039,
											"end": 10082,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10039,
											"end": 10082,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 10039,
											"end": 10082,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10039,
											"end": 10082,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10039,
											"end": 10082,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10039,
											"end": 10082,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10039,
											"end": 10082,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10039,
											"end": 10082,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10039,
											"end": 10082,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10039,
											"end": 10082,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 9643,
											"end": 10089,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9582,
											"end": 10089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 10205,
											"end": 10739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10284,
											"end": 10309,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10312,
											"end": 10334,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 10312,
											"end": 10332,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 10312,
											"end": 10334,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10312,
											"end": 10334,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 10312,
											"end": 10334,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10284,
											"end": 10334,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10284,
											"end": 10334,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10372,
											"end": 10373,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10352,
											"end": 10369,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10352,
											"end": 10373,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 10344,
											"end": 10411,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 10344,
											"end": 10411,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10485,
											"end": 10510,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 10485,
											"end": 10510,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10461,
											"end": 10482,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 10461,
											"end": 10482,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10461,
											"end": 10510,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 10461,
											"end": 10510,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10461,
											"end": 10510,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10461,
											"end": 10510,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 10461,
											"end": 10510,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10461,
											"end": 10510,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 10461,
											"end": 10510,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10442,
											"end": 10457,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 10442,
											"end": 10510,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10442,
											"end": 10510,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 10421,
											"end": 10556,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 10421,
											"end": 10556,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10591,
											"end": 10606,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 10567,
											"end": 10588,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 10567,
											"end": 10606,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10567,
											"end": 10606,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10567,
											"end": 10606,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10567,
											"end": 10606,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10616,
											"end": 10662,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 10635,
											"end": 10642,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 10635,
											"end": 10640,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 10635,
											"end": 10642,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10635,
											"end": 10642,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 10635,
											"end": 10642,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10661,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10616,
											"end": 10621,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1131"
										},
										{
											"begin": 10616,
											"end": 10634,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10616,
											"end": 10634,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10616,
											"end": 10634,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 10616,
											"end": 10634,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10616,
											"end": 10662,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10616,
											"end": 10662,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10616,
											"end": 10662,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10616,
											"end": 10662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10616,
											"end": 10662,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10616,
											"end": 10662,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10616,
											"end": 10662,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 10616,
											"end": 10662,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10705,
											"end": 10712,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 10705,
											"end": 10710,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 10705,
											"end": 10712,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10705,
											"end": 10712,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 10705,
											"end": 10712,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10678,
											"end": 10732,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10678,
											"end": 10732,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10678,
											"end": 10732,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4F03851532CB76253FE3DDDBCBE99F0A83446922731A7BDFD2CB44D35FFCB1D9"
										},
										{
											"begin": 10714,
											"end": 10731,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10678,
											"end": 10732,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10678,
											"end": 10732,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10678,
											"end": 10732,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 10678,
											"end": 10732,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10678,
											"end": 10732,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10678,
											"end": 10732,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 10678,
											"end": 10732,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10678,
											"end": 10732,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 10678,
											"end": 10732,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10678,
											"end": 10732,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10678,
											"end": 10732,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10678,
											"end": 10732,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10678,
											"end": 10732,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10678,
											"end": 10732,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10678,
											"end": 10732,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10678,
											"end": 10732,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 10274,
											"end": 10739,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10205,
											"end": 10739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5930,
											"end": 5937,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5930,
											"end": 5941,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 5922,
											"end": 5986,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 5922,
											"end": 5986,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6035,
											"end": 6042,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6009,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1131"
										},
										{
											"begin": 6004,
											"end": 6019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6004,
											"end": 6019,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 6020,
											"end": 6030,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 6004,
											"end": 6031,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6004,
											"end": 6031,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 6004,
											"end": 6031,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 6004,
											"end": 6031,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6042,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6042,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 5996,
											"end": 6067,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 5996,
											"end": 6067,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6078,
											"end": 6136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 6101,
											"end": 6111,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6121,
											"end": 6125,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6135,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6078,
											"end": 6083,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1131"
										},
										{
											"begin": 6078,
											"end": 6100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6100,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6078,
											"end": 6100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 6078,
											"end": 6100,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6078,
											"end": 6136,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6078,
											"end": 6136,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6078,
											"end": 6136,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6078,
											"end": 6136,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6078,
											"end": 6136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6136,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6078,
											"end": 6136,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6078,
											"end": 6136,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 6078,
											"end": 6136,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6167,
											"end": 6177,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6152,
											"end": 6187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6152,
											"end": 6187,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6152,
											"end": 6187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "BC7C8A4D8049A3F99A02F2A20640C206A2E4D3F2FA54FD20DA9F01FDA3620CDA"
										},
										{
											"begin": 6179,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6152,
											"end": 6187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6152,
											"end": 6187,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6152,
											"end": 6187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 6152,
											"end": 6187,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6152,
											"end": 6187,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6152,
											"end": 6187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 6152,
											"end": 6187,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6152,
											"end": 6187,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 6152,
											"end": 6187,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6152,
											"end": 6187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6152,
											"end": 6187,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6152,
											"end": 6187,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6152,
											"end": 6187,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6152,
											"end": 6187,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6152,
											"end": 6187,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6152,
											"end": 6187,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 8735,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8796,
											"end": 8819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8822,
											"end": 8843,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 11
										},
										{
											"begin": 8796,
											"end": 8843,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8796,
											"end": 8843,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8879,
											"end": 8880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8861,
											"end": 8876,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8861,
											"end": 8880,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 8853,
											"end": 8904,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 8853,
											"end": 8904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8922,
											"end": 8929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 8922,
											"end": 8927,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 8922,
											"end": 8929,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8922,
											"end": 8929,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 8922,
											"end": 8929,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8914,
											"end": 8939,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8FC"
										},
										{
											"begin": 8940,
											"end": 8955,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8914,
											"end": 8956,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8956,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8786,
											"end": 8963,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8735,
											"end": 8963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4616,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4593,
											"end": 4609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 4593,
											"end": 4616,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4593,
											"end": 4616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4593,
											"end": 4616,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4593,
											"end": 4616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4631,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "46767AA5821BA6F1A985F8CF0134CB534CBA0B26FF165803D3602C7FF046CD4"
										},
										{
											"begin": 4655,
											"end": 4659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4631,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4631,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 4631,
											"end": 4660,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4631,
											"end": 4660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4631,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 4631,
											"end": 4660,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4631,
											"end": 4660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 4631,
											"end": 4660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4631,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4631,
											"end": 4660,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4631,
											"end": 4660,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4631,
											"end": 4660,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4631,
											"end": 4660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4631,
											"end": 4660,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1131"
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 1380,
											"end": 1423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 1353,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1817,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1833,
											"end": 1837,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 1797,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 1770,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 8296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8320,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8341,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8434,
											"end": 8439,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 8401,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1645,
											"end": 1652,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 1694,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1674,
											"end": 1695,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1823,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 1707,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 1777,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1770,
											"end": 1775,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1799,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 1815,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1823,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1877,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1917,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1888,
											"end": 1917,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1888,
											"end": 1917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 1950,
											"end": 1955,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 1926,
											"end": 1956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2039,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2090,
											"end": 2092,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2087,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2069,
											"end": 2076,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2088,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2061,
											"end": 2093,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 2096,
											"end": 2175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2216,
											"end": 2217,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 2286,
											"end": 2293,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2277,
											"end": 2283,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2266,
											"end": 2275,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2262,
											"end": 2284,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2241,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 2241,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2241,
											"end": 2294,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 2241,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2231,
											"end": 2294,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2231,
											"end": 2294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2304,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2343,
											"end": 2345,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 2411,
											"end": 2418,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2391,
											"end": 2400,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2409,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2369,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 2369,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2369,
											"end": 2419,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 2369,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2359,
											"end": 2419,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2359,
											"end": 2419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2314,
											"end": 2429,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 2436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2442,
											"end": 2551,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 2442,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2523,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 2538,
											"end": 2543,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2523,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 2523,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2523,
											"end": 2544,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 2523,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2518,
											"end": 2521,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 2545,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2442,
											"end": 2551,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2442,
											"end": 2551,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2442,
											"end": 2551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2648,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2684,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2667,
											"end": 2685,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2659,
											"end": 2685,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2659,
											"end": 2685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 2757,
											"end": 2758,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2755,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2742,
											"end": 2759,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2733,
											"end": 2739,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 2695,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2760,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 2695,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2557,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2773,
											"end": 2891,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 2773,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 2878,
											"end": 2883,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 2860,
											"end": 2884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2884,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 2860,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2858,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2848,
											"end": 2885,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2773,
											"end": 2891,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2773,
											"end": 2891,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2773,
											"end": 2891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 3119,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 2897,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2990,
											"end": 2994,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3030,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3017,
											"end": 3026,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3013,
											"end": 3031,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3005,
											"end": 3031,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3005,
											"end": 3031,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3041,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 3109,
											"end": 3110,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3107,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3094,
											"end": 3111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3085,
											"end": 3091,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3041,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 3041,
											"end": 3112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3041,
											"end": 3112,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 3041,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 3119,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 3119,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 3119,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 3119,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 3119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3125,
											"end": 3448,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 3125,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3181,
											"end": 3187,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3230,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3218,
											"end": 3227,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3216,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3205,
											"end": 3228,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3233,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3198,
											"end": 3317,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3198,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 3198,
											"end": 3317,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3236,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 3236,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 3236,
											"end": 3315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3236,
											"end": 3315,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 3236,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3198,
											"end": 3317,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 3198,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3356,
											"end": 3357,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 3423,
											"end": 3430,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3414,
											"end": 3420,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3403,
											"end": 3412,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3399,
											"end": 3421,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3381,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 3381,
											"end": 3431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3381,
											"end": 3431,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 3381,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3371,
											"end": 3431,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3371,
											"end": 3431,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3125,
											"end": 3448,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3125,
											"end": 3448,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3125,
											"end": 3448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3125,
											"end": 3448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3125,
											"end": 3448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3454,
											"end": 4106,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 3454,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3657,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3691,
											"end": 3694,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 3680,
											"end": 3689,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3676,
											"end": 3695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3668,
											"end": 3695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3668,
											"end": 3695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3705,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 3773,
											"end": 3774,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3771,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3758,
											"end": 3775,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3755,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3705,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 3705,
											"end": 3776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3705,
											"end": 3776,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 3705,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3786,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 3854,
											"end": 3856,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3843,
											"end": 3852,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3839,
											"end": 3857,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3830,
											"end": 3836,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3786,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 3786,
											"end": 3858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3786,
											"end": 3858,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 3786,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 3936,
											"end": 3938,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3925,
											"end": 3934,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3921,
											"end": 3939,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3912,
											"end": 3918,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 3868,
											"end": 3940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3940,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 3868,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3950,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 4018,
											"end": 4020,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4007,
											"end": 4016,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4003,
											"end": 4021,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4000,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3950,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 3950,
											"end": 4022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3950,
											"end": 4022,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 3950,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4032,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 4094,
											"end": 4097,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4083,
											"end": 4092,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4079,
											"end": 4098,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4070,
											"end": 4076,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4032,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 4032,
											"end": 4099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4032,
											"end": 4099,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 4032,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3454,
											"end": 4106,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 3454,
											"end": 4106,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3454,
											"end": 4106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3454,
											"end": 4106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3454,
											"end": 4106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3454,
											"end": 4106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3454,
											"end": 4106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3454,
											"end": 4106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3454,
											"end": 4106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4229,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 4112,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4221,
											"end": 4222,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4219,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4211,
											"end": 4223,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4235,
											"end": 4352,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 4235,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4344,
											"end": 4345,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4341,
											"end": 4342,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4334,
											"end": 4346,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4475,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 4358,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4467,
											"end": 4468,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4465,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4457,
											"end": 4469,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4498,
											"end": 5066,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 4498,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4571,
											"end": 4579,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4581,
											"end": 4587,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4634,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4624,
											"end": 4628,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4616,
											"end": 4622,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4629,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4639,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 4639,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 4639,
											"end": 4718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4639,
											"end": 4718,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 4639,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4752,
											"end": 4758,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4739,
											"end": 4759,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4729,
											"end": 4759,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4729,
											"end": 4759,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4782,
											"end": 4800,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4774,
											"end": 4780,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4771,
											"end": 4801,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4768,
											"end": 4885,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4768,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 4768,
											"end": 4885,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 4804,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 4804,
											"end": 4883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 4883,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 4804,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4768,
											"end": 4885,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 4768,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4918,
											"end": 4922,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4910,
											"end": 4916,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4906,
											"end": 4923,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4894,
											"end": 4923,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4894,
											"end": 4923,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4964,
											"end": 4968,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4956,
											"end": 4962,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4952,
											"end": 4969,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4942,
											"end": 4950,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4938,
											"end": 4970,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 4976,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4932,
											"end": 5060,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4932,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 4932,
											"end": 5060,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4979,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 4979,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 4979,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4979,
											"end": 5058,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 4979,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4932,
											"end": 5060,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 4932,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4498,
											"end": 5066,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4498,
											"end": 5066,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4498,
											"end": 5066,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4498,
											"end": 5066,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4498,
											"end": 5066,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4498,
											"end": 5066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5089,
											"end": 5657,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 5089,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5162,
											"end": 5170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5178,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5222,
											"end": 5225,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5215,
											"end": 5219,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5207,
											"end": 5213,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5203,
											"end": 5220,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5199,
											"end": 5226,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 5189,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 5230,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 5230,
											"end": 5309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5309,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 5230,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5311,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 5189,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5343,
											"end": 5349,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5330,
											"end": 5350,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5320,
											"end": 5350,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5320,
											"end": 5350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5391,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5365,
											"end": 5371,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5359,
											"end": 5476,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5359,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 5359,
											"end": 5476,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5395,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 5395,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 5395,
											"end": 5474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5395,
											"end": 5474,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 5395,
											"end": 5474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5359,
											"end": 5476,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 5359,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5509,
											"end": 5513,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5497,
											"end": 5514,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5485,
											"end": 5514,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5485,
											"end": 5514,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5566,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5559,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5547,
											"end": 5553,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5543,
											"end": 5560,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5533,
											"end": 5541,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5526,
											"end": 5567,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5523,
											"end": 5651,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5523,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 5523,
											"end": 5651,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 5570,
											"end": 5649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5523,
											"end": 5651,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 5523,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5089,
											"end": 5657,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5089,
											"end": 5657,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5089,
											"end": 5657,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5089,
											"end": 5657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5089,
											"end": 5657,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5089,
											"end": 5657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 6597,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 5663,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5785,
											"end": 5791,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5793,
											"end": 5799,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5801,
											"end": 5807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5809,
											"end": 5815,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5858,
											"end": 5860,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5846,
											"end": 5855,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5837,
											"end": 5844,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5833,
											"end": 5856,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5829,
											"end": 5861,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5826,
											"end": 5945,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5826,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 5826,
											"end": 5945,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5864,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 5864,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 5864,
											"end": 5943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5864,
											"end": 5943,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 5864,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5826,
											"end": 5945,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 5826,
											"end": 5945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6012,
											"end": 6013,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6010,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5997,
											"end": 6014,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5984,
											"end": 6015,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6060,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6040,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6031,
											"end": 6061,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6028,
											"end": 6145,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6028,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 6028,
											"end": 6145,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6064,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 6064,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 6064,
											"end": 6143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6064,
											"end": 6143,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 6064,
											"end": 6143,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6028,
											"end": 6145,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 6028,
											"end": 6145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6177,
											"end": 6257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 6249,
											"end": 6256,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6240,
											"end": 6246,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6229,
											"end": 6238,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6177,
											"end": 6257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 6177,
											"end": 6257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6177,
											"end": 6257,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 6177,
											"end": 6257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6159,
											"end": 6257,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6159,
											"end": 6257,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6159,
											"end": 6257,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6159,
											"end": 6257,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5955,
											"end": 6267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6334,
											"end": 6336,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6323,
											"end": 6332,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6306,
											"end": 6338,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6365,
											"end": 6383,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6357,
											"end": 6363,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6354,
											"end": 6384,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6351,
											"end": 6468,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6351,
											"end": 6468,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 6351,
											"end": 6468,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6387,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 6387,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 6387,
											"end": 6466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6387,
											"end": 6466,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 6387,
											"end": 6466,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6351,
											"end": 6468,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 6351,
											"end": 6468,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6500,
											"end": 6580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 6572,
											"end": 6579,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6563,
											"end": 6569,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6548,
											"end": 6570,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6500,
											"end": 6580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 6500,
											"end": 6580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6500,
											"end": 6580,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 6500,
											"end": 6580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6482,
											"end": 6580,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6482,
											"end": 6580,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6482,
											"end": 6580,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6482,
											"end": 6580,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6277,
											"end": 6590,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 6597,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 6597,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 6597,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 6597,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 6597,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 6597,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 6597,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 6597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6603,
											"end": 6725,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 6603,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6676,
											"end": 6700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 6694,
											"end": 6699,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6676,
											"end": 6700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 6676,
											"end": 6700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6676,
											"end": 6700,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 6676,
											"end": 6700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6669,
											"end": 6674,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6666,
											"end": 6701,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6656,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 6656,
											"end": 6719,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6715,
											"end": 6716,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6713,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6705,
											"end": 6717,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6656,
											"end": 6719,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 6656,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6603,
											"end": 6725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6603,
											"end": 6725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6731,
											"end": 6870,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 6731,
											"end": 6870,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6777,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6815,
											"end": 6821,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6802,
											"end": 6822,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6793,
											"end": 6822,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6793,
											"end": 6822,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6831,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 6858,
											"end": 6863,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6831,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 6831,
											"end": 6864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6831,
											"end": 6864,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 6831,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6731,
											"end": 6870,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6731,
											"end": 6870,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6731,
											"end": 6870,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6731,
											"end": 6870,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6731,
											"end": 6870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6876,
											"end": 7205,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 6876,
											"end": 7205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6935,
											"end": 6941,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6984,
											"end": 6986,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6972,
											"end": 6981,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6963,
											"end": 6970,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6959,
											"end": 6982,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6955,
											"end": 6987,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6952,
											"end": 7071,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6952,
											"end": 7071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 6952,
											"end": 7071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6990,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 6990,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 6990,
											"end": 7069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6990,
											"end": 7069,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 6990,
											"end": 7069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6952,
											"end": 7071,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 6952,
											"end": 7071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7110,
											"end": 7111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 7180,
											"end": 7187,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7171,
											"end": 7177,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7160,
											"end": 7169,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7178,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 7135,
											"end": 7188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7188,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 7135,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7125,
											"end": 7188,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7125,
											"end": 7188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7081,
											"end": 7198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6876,
											"end": 7205,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6876,
											"end": 7205,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6876,
											"end": 7205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6876,
											"end": 7205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6876,
											"end": 7205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7211,
											"end": 7271,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 7211,
											"end": 7271,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7239,
											"end": 7242,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7260,
											"end": 7265,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7253,
											"end": 7265,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7253,
											"end": 7265,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7211,
											"end": 7271,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7211,
											"end": 7271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7211,
											"end": 7271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7211,
											"end": 7271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7277,
											"end": 7419,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 7277,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7327,
											"end": 7336,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7360,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 7378,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 7387,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 7405,
											"end": 7410,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7387,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 7387,
											"end": 7411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7387,
											"end": 7411,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 7387,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 7378,
											"end": 7412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7412,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 7378,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7360,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 7360,
											"end": 7413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7360,
											"end": 7413,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 7360,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7347,
											"end": 7413,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7347,
											"end": 7413,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7277,
											"end": 7419,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7277,
											"end": 7419,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7277,
											"end": 7419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7277,
											"end": 7419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7425,
											"end": 7551,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 7425,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7475,
											"end": 7484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 7539,
											"end": 7544,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 7508,
											"end": 7545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7495,
											"end": 7545,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7495,
											"end": 7545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7425,
											"end": 7551,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7425,
											"end": 7551,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7425,
											"end": 7551,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7425,
											"end": 7551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7557,
											"end": 7697,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 7557,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7621,
											"end": 7630,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7654,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 7685,
											"end": 7690,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7654,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 7654,
											"end": 7691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7654,
											"end": 7691,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 7654,
											"end": 7691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7691,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7557,
											"end": 7697,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7557,
											"end": 7697,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7557,
											"end": 7697,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7557,
											"end": 7697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7703,
											"end": 7862,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 7703,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7804,
											"end": 7855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 7849,
											"end": 7854,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7804,
											"end": 7855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 7804,
											"end": 7855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7804,
											"end": 7855,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 7804,
											"end": 7855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7799,
											"end": 7802,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7792,
											"end": 7856,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7703,
											"end": 7862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7703,
											"end": 7862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7703,
											"end": 7862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7868,
											"end": 8118,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 7868,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7975,
											"end": 7979,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8013,
											"end": 8015,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8002,
											"end": 8011,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7998,
											"end": 8016,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7990,
											"end": 8016,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7990,
											"end": 8016,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8026,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 8108,
											"end": 8109,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8106,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8093,
											"end": 8110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8084,
											"end": 8090,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8026,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 8026,
											"end": 8111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8026,
											"end": 8111,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 8026,
											"end": 8111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7868,
											"end": 8118,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7868,
											"end": 8118,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7868,
											"end": 8118,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7868,
											"end": 8118,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7868,
											"end": 8118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8124,
											"end": 8304,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 8124,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8172,
											"end": 8249,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8169,
											"end": 8170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8162,
											"end": 8250,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8269,
											"end": 8273,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 8266,
											"end": 8267,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8259,
											"end": 8274,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8293,
											"end": 8297,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8290,
											"end": 8291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8310,
											"end": 8504,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 8310,
											"end": 8504,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8350,
											"end": 8354,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8370,
											"end": 8390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 8370,
											"end": 8390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8370,
											"end": 8390,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 8370,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8390,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8390,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 8422,
											"end": 8423,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 8404,
											"end": 8424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8399,
											"end": 8424,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8399,
											"end": 8424,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8448,
											"end": 8449,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8445,
											"end": 8446,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8441,
											"end": 8450,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8433,
											"end": 8450,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8433,
											"end": 8450,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8472,
											"end": 8473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8466,
											"end": 8470,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8463,
											"end": 8474,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8497,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8497,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 8460,
											"end": 8497,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8477,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 8477,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 8477,
											"end": 8495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8477,
											"end": 8495,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 8477,
											"end": 8495,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8497,
											"name": "tag",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 8460,
											"end": 8497,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8310,
											"end": 8504,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8310,
											"end": 8504,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8310,
											"end": 8504,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8310,
											"end": 8504,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8310,
											"end": 8504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8510,
											"end": 8679,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 8510,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8594,
											"end": 8605,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8628,
											"end": 8634,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8623,
											"end": 8626,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8616,
											"end": 8635,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8668,
											"end": 8672,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8663,
											"end": 8666,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8659,
											"end": 8673,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8644,
											"end": 8673,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8644,
											"end": 8673,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8510,
											"end": 8679,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8510,
											"end": 8679,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8510,
											"end": 8679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8510,
											"end": 8679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8510,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8685,
											"end": 8852,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 8685,
											"end": 8852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8825,
											"end": 8844,
											"name": "PUSH",
											"source": 12,
											"value": "436C61696D206E6F7420656E61626C6564000000000000000000000000000000"
										},
										{
											"begin": 8821,
											"end": 8822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8819,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8823,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8802,
											"end": 8845,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8685,
											"end": 8852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8685,
											"end": 8852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8858,
											"end": 9224,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 8858,
											"end": 9224,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9000,
											"end": 9003,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9021,
											"end": 9088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 9085,
											"end": 9087,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 9080,
											"end": 9083,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9021,
											"end": 9088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 9021,
											"end": 9088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9021,
											"end": 9088,
											"name": "tag",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 9021,
											"end": 9088,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9014,
											"end": 9088,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9014,
											"end": 9088,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9097,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 9186,
											"end": 9189,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9097,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 9097,
											"end": 9190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9097,
											"end": 9190,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 9097,
											"end": 9190,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9215,
											"end": 9217,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9206,
											"end": 9218,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9199,
											"end": 9218,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9199,
											"end": 9218,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8858,
											"end": 9224,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8858,
											"end": 9224,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8858,
											"end": 9224,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8858,
											"end": 9224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9230,
											"end": 9649,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 9230,
											"end": 9649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9396,
											"end": 9400,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9434,
											"end": 9436,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9423,
											"end": 9432,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9411,
											"end": 9437,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9411,
											"end": 9437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9483,
											"end": 9492,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9477,
											"end": 9481,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9473,
											"end": 9493,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9469,
											"end": 9470,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9458,
											"end": 9467,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9454,
											"end": 9471,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9447,
											"end": 9494,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9511,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 9637,
											"end": 9641,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9511,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 9511,
											"end": 9642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9511,
											"end": 9642,
											"name": "tag",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 9511,
											"end": 9642,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9503,
											"end": 9642,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9503,
											"end": 9642,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9230,
											"end": 9649,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9230,
											"end": 9649,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9230,
											"end": 9649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9230,
											"end": 9649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9655,
											"end": 9835,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 9655,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9795,
											"end": 9827,
											"name": "PUSH",
											"source": 12,
											"value": "436C61696D20626C6F636B656420666F72207468697320616464726573730000"
										},
										{
											"begin": 9791,
											"end": 9792,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9783,
											"end": 9789,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9779,
											"end": 9793,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9772,
											"end": 9828,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9655,
											"end": 9835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9655,
											"end": 9835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9841,
											"end": 10207,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 9841,
											"end": 10207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 9986,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10004,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 10068,
											"end": 10070,
											"name": "PUSH",
											"source": 12,
											"value": "1E"
										},
										{
											"begin": 10063,
											"end": 10066,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10004,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 10004,
											"end": 10071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10004,
											"end": 10071,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 10004,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9997,
											"end": 10071,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9997,
											"end": 10071,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10080,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 10169,
											"end": 10172,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10080,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 10080,
											"end": 10173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10080,
											"end": 10173,
											"name": "tag",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 10080,
											"end": 10173,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10198,
											"end": 10200,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10193,
											"end": 10196,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10189,
											"end": 10201,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10182,
											"end": 10201,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10182,
											"end": 10201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9841,
											"end": 10207,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9841,
											"end": 10207,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9841,
											"end": 10207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9841,
											"end": 10207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10213,
											"end": 10632,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 10213,
											"end": 10632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10379,
											"end": 10383,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10417,
											"end": 10419,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10406,
											"end": 10415,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10402,
											"end": 10420,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10420,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10420,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10466,
											"end": 10475,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10460,
											"end": 10464,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10456,
											"end": 10476,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10452,
											"end": 10453,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10441,
											"end": 10450,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10437,
											"end": 10454,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10430,
											"end": 10477,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10494,
											"end": 10625,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 10620,
											"end": 10624,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10494,
											"end": 10625,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 10494,
											"end": 10625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10494,
											"end": 10625,
											"name": "tag",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 10494,
											"end": 10625,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10486,
											"end": 10625,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10486,
											"end": 10625,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10213,
											"end": 10632,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10213,
											"end": 10632,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10213,
											"end": 10632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10213,
											"end": 10632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10638,
											"end": 10809,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 10638,
											"end": 10809,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10778,
											"end": 10801,
											"name": "PUSH",
											"source": 12,
											"value": "417070726F76616C20666565206E6F7420706169640000000000000000000000"
										},
										{
											"begin": 10774,
											"end": 10775,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10766,
											"end": 10772,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10762,
											"end": 10776,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10755,
											"end": 10802,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10638,
											"end": 10809,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10638,
											"end": 10809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10815,
											"end": 11181,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 10815,
											"end": 11181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10957,
											"end": 10960,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10978,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 11042,
											"end": 11044,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 11037,
											"end": 11040,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10978,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 10978,
											"end": 11045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10978,
											"end": 11045,
											"name": "tag",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 10978,
											"end": 11045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10971,
											"end": 11045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10971,
											"end": 11045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11054,
											"end": 11147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 11143,
											"end": 11146,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11054,
											"end": 11147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 11054,
											"end": 11147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11054,
											"end": 11147,
											"name": "tag",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 11054,
											"end": 11147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11172,
											"end": 11174,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11167,
											"end": 11170,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11163,
											"end": 11175,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11156,
											"end": 11175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11156,
											"end": 11175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10815,
											"end": 11181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10815,
											"end": 11181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10815,
											"end": 11181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10815,
											"end": 11181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11187,
											"end": 11606,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 11187,
											"end": 11606,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11353,
											"end": 11357,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11391,
											"end": 11393,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11380,
											"end": 11389,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11376,
											"end": 11394,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11368,
											"end": 11394,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11368,
											"end": 11394,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11440,
											"end": 11449,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11434,
											"end": 11438,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11430,
											"end": 11450,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11426,
											"end": 11427,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11415,
											"end": 11424,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11411,
											"end": 11428,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11404,
											"end": 11451,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11468,
											"end": 11599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 11594,
											"end": 11598,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11468,
											"end": 11599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 11468,
											"end": 11599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11468,
											"end": 11599,
											"name": "tag",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 11468,
											"end": 11599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11460,
											"end": 11599,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11460,
											"end": 11599,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11187,
											"end": 11606,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11187,
											"end": 11606,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11187,
											"end": 11606,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11187,
											"end": 11606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11612,
											"end": 11790,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 11612,
											"end": 11790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11752,
											"end": 11782,
											"name": "PUSH",
											"source": 12,
											"value": "596F752068617665206E6F2062616C616E636520746F20636C61696D00000000"
										},
										{
											"begin": 11748,
											"end": 11749,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11740,
											"end": 11746,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11736,
											"end": 11750,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11729,
											"end": 11783,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11612,
											"end": 11790,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11612,
											"end": 11790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11796,
											"end": 12162,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 11796,
											"end": 12162,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11938,
											"end": 11941,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11959,
											"end": 12026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 12023,
											"end": 12025,
											"name": "PUSH",
											"source": 12,
											"value": "1C"
										},
										{
											"begin": 12018,
											"end": 12021,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11959,
											"end": 12026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 11959,
											"end": 12026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11959,
											"end": 12026,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 11959,
											"end": 12026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11952,
											"end": 12026,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11952,
											"end": 12026,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12035,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 12124,
											"end": 12127,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12035,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 12035,
											"end": 12128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12035,
											"end": 12128,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 12035,
											"end": 12128,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12153,
											"end": 12155,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12148,
											"end": 12151,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12144,
											"end": 12156,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12137,
											"end": 12156,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12137,
											"end": 12156,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11796,
											"end": 12162,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11796,
											"end": 12162,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11796,
											"end": 12162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11796,
											"end": 12162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12587,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 12168,
											"end": 12587,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12334,
											"end": 12338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12372,
											"end": 12374,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12361,
											"end": 12370,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12357,
											"end": 12375,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12349,
											"end": 12375,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12349,
											"end": 12375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12421,
											"end": 12430,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12415,
											"end": 12419,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12411,
											"end": 12431,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12407,
											"end": 12408,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12396,
											"end": 12405,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12392,
											"end": 12409,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12385,
											"end": 12432,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12449,
											"end": 12580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 12575,
											"end": 12579,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12449,
											"end": 12580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 12449,
											"end": 12580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12449,
											"end": 12580,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 12449,
											"end": 12580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12441,
											"end": 12580,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12441,
											"end": 12580,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12587,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12587,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12593,
											"end": 12826,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 12593,
											"end": 12826,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12632,
											"end": 12635,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12655,
											"end": 12679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 12673,
											"end": 12678,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12655,
											"end": 12679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 12655,
											"end": 12679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12655,
											"end": 12679,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 12655,
											"end": 12679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12646,
											"end": 12679,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12646,
											"end": 12679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12701,
											"end": 12767,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12694,
											"end": 12699,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12691,
											"end": 12768,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12688,
											"end": 12791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 12688,
											"end": 12791,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12771,
											"end": 12789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 12771,
											"end": 12789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 12771,
											"end": 12789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12771,
											"end": 12789,
											"name": "tag",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 12771,
											"end": 12789,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12688,
											"end": 12791,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 12688,
											"end": 12791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12818,
											"end": 12819,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12811,
											"end": 12816,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12807,
											"end": 12820,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12800,
											"end": 12820,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12800,
											"end": 12820,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12593,
											"end": 12826,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12593,
											"end": 12826,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12593,
											"end": 12826,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12593,
											"end": 12826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12832,
											"end": 13023,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 12832,
											"end": 13023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12872,
											"end": 12875,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12891,
											"end": 12911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 12909,
											"end": 12910,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12891,
											"end": 12911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 12891,
											"end": 12911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12891,
											"end": 12911,
											"name": "tag",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 12891,
											"end": 12911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12886,
											"end": 12911,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12886,
											"end": 12911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12925,
											"end": 12945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 12943,
											"end": 12944,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12925,
											"end": 12945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 12925,
											"end": 12945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12925,
											"end": 12945,
											"name": "tag",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 12925,
											"end": 12945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12920,
											"end": 12945,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12920,
											"end": 12945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12968,
											"end": 12969,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12965,
											"end": 12966,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12961,
											"end": 12970,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12954,
											"end": 12970,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12954,
											"end": 12970,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12989,
											"end": 12992,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12986,
											"end": 12987,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12983,
											"end": 12993,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12980,
											"end": 13016,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12980,
											"end": 13016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 12980,
											"end": 13016,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12996,
											"end": 13014,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 12996,
											"end": 13014,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 12996,
											"end": 13014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12996,
											"end": 13014,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 12996,
											"end": 13014,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12980,
											"end": 13016,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 12980,
											"end": 13016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12832,
											"end": 13023,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12832,
											"end": 13023,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12832,
											"end": 13023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12832,
											"end": 13023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12832,
											"end": 13023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13029,
											"end": 13172,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 13029,
											"end": 13172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13086,
											"end": 13091,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13111,
											"end": 13124,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13102,
											"end": 13124,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13102,
											"end": 13124,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13133,
											"end": 13166,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 13160,
											"end": 13165,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13133,
											"end": 13166,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 13133,
											"end": 13166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13133,
											"end": 13166,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 13133,
											"end": 13166,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13029,
											"end": 13172,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13029,
											"end": 13172,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13029,
											"end": 13172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13029,
											"end": 13172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13029,
											"end": 13172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13178,
											"end": 13529,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 13178,
											"end": 13529,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13248,
											"end": 13254,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13297,
											"end": 13299,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13285,
											"end": 13294,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13276,
											"end": 13283,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13272,
											"end": 13295,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13268,
											"end": 13300,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 13265,
											"end": 13384,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13265,
											"end": 13384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 13265,
											"end": 13384,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13303,
											"end": 13382,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 13303,
											"end": 13382,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 13303,
											"end": 13382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13303,
											"end": 13382,
											"name": "tag",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 13303,
											"end": 13382,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13265,
											"end": 13384,
											"name": "tag",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 13265,
											"end": 13384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13423,
											"end": 13424,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13448,
											"end": 13512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 13504,
											"end": 13511,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13495,
											"end": 13501,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13484,
											"end": 13493,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13480,
											"end": 13502,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13448,
											"end": 13512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 13448,
											"end": 13512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13448,
											"end": 13512,
											"name": "tag",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 13448,
											"end": 13512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13438,
											"end": 13512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13438,
											"end": 13512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13394,
											"end": 13522,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13178,
											"end": 13529,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13178,
											"end": 13529,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13178,
											"end": 13529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13178,
											"end": 13529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13178,
											"end": 13529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13535,
											"end": 13705,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 13535,
											"end": 13705,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13675,
											"end": 13697,
											"name": "PUSH",
											"source": 12,
											"value": "496E636F72726563742066656520616D6F756E74000000000000000000000000"
										},
										{
											"begin": 13671,
											"end": 13672,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13663,
											"end": 13669,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13659,
											"end": 13673,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13652,
											"end": 13698,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13535,
											"end": 13705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13535,
											"end": 13705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13711,
											"end": 14077,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 13711,
											"end": 14077,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13853,
											"end": 13856,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13874,
											"end": 13941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 13938,
											"end": 13940,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 13933,
											"end": 13936,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13874,
											"end": 13941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 13874,
											"end": 13941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13874,
											"end": 13941,
											"name": "tag",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 13874,
											"end": 13941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13867,
											"end": 13941,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13867,
											"end": 13941,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13950,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 14039,
											"end": 14042,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13950,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 13950,
											"end": 14043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13950,
											"end": 14043,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 13950,
											"end": 14043,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14068,
											"end": 14070,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14063,
											"end": 14066,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14059,
											"end": 14071,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14052,
											"end": 14071,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14052,
											"end": 14071,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13711,
											"end": 14077,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13711,
											"end": 14077,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13711,
											"end": 14077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13711,
											"end": 14077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14083,
											"end": 14502,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 14083,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14249,
											"end": 14253,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14287,
											"end": 14289,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14276,
											"end": 14285,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14272,
											"end": 14290,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14264,
											"end": 14290,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14264,
											"end": 14290,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14336,
											"end": 14345,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14330,
											"end": 14334,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14326,
											"end": 14346,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14322,
											"end": 14323,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14311,
											"end": 14320,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14307,
											"end": 14324,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14300,
											"end": 14347,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14364,
											"end": 14495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 14490,
											"end": 14494,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14364,
											"end": 14495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 14364,
											"end": 14495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14364,
											"end": 14495,
											"name": "tag",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 14364,
											"end": 14495,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14356,
											"end": 14495,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14356,
											"end": 14495,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14083,
											"end": 14502,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14083,
											"end": 14502,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14083,
											"end": 14502,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14083,
											"end": 14502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14508,
											"end": 14684,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 14508,
											"end": 14684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14648,
											"end": 14676,
											"name": "PUSH",
											"source": 12,
											"value": "4172726179206C656E6774687320646F206E6F74206D61746368000000000000"
										},
										{
											"begin": 14644,
											"end": 14645,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14636,
											"end": 14642,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14632,
											"end": 14646,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14625,
											"end": 14677,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14508,
											"end": 14684,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14508,
											"end": 14684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14690,
											"end": 15056,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 14690,
											"end": 15056,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14832,
											"end": 14835,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14853,
											"end": 14920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 14917,
											"end": 14919,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 14912,
											"end": 14915,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14853,
											"end": 14920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 14853,
											"end": 14920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14853,
											"end": 14920,
											"name": "tag",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 14853,
											"end": 14920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14846,
											"end": 14920,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14846,
											"end": 14920,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14929,
											"end": 15022,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "598"
										},
										{
											"begin": 15018,
											"end": 15021,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14929,
											"end": 15022,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 14929,
											"end": 15022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14929,
											"end": 15022,
											"name": "tag",
											"source": 12,
											"value": "598"
										},
										{
											"begin": 14929,
											"end": 15022,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15047,
											"end": 15049,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15042,
											"end": 15045,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15038,
											"end": 15050,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15031,
											"end": 15050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15031,
											"end": 15050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14690,
											"end": 15056,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14690,
											"end": 15056,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14690,
											"end": 15056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14690,
											"end": 15056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15062,
											"end": 15481,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 15062,
											"end": 15481,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15228,
											"end": 15232,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15266,
											"end": 15268,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15255,
											"end": 15264,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15251,
											"end": 15269,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15243,
											"end": 15269,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15243,
											"end": 15269,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15315,
											"end": 15324,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15309,
											"end": 15313,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15305,
											"end": 15325,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15301,
											"end": 15302,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15290,
											"end": 15299,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15286,
											"end": 15303,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15279,
											"end": 15326,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15343,
											"end": 15474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 15469,
											"end": 15473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15343,
											"end": 15474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 15343,
											"end": 15474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15343,
											"end": 15474,
											"name": "tag",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 15343,
											"end": 15474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15335,
											"end": 15474,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15335,
											"end": 15474,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15062,
											"end": 15481,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15062,
											"end": 15481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15062,
											"end": 15481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15062,
											"end": 15481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15487,
											"end": 15667,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 15487,
											"end": 15667,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15535,
											"end": 15612,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15532,
											"end": 15533,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15525,
											"end": 15613,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15632,
											"end": 15636,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 15629,
											"end": 15630,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15622,
											"end": 15637,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15656,
											"end": 15660,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15653,
											"end": 15654,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15646,
											"end": 15661,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 15673,
											"end": 16083,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 15673,
											"end": 16083,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15713,
											"end": 15720,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15736,
											"end": 15756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 15754,
											"end": 15755,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15736,
											"end": 15756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 15736,
											"end": 15756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15736,
											"end": 15756,
											"name": "tag",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 15736,
											"end": 15756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15731,
											"end": 15756,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15731,
											"end": 15756,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15770,
											"end": 15790,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 15788,
											"end": 15789,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15770,
											"end": 15790,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 15770,
											"end": 15790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15770,
											"end": 15790,
											"name": "tag",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 15770,
											"end": 15790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15765,
											"end": 15790,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15765,
											"end": 15790,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15825,
											"end": 15826,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15822,
											"end": 15823,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15818,
											"end": 15827,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 15847,
											"end": 15877,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 15865,
											"end": 15876,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15847,
											"end": 15877,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 15847,
											"end": 15877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15847,
											"end": 15877,
											"name": "tag",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 15847,
											"end": 15877,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15836,
											"end": 15877,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15836,
											"end": 15877,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16026,
											"end": 16027,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16017,
											"end": 16024,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16013,
											"end": 16028,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 16010,
											"end": 16011,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16007,
											"end": 16029,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 15987,
											"end": 15988,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15980,
											"end": 15989,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15960,
											"end": 16043,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 15937,
											"end": 16076,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 15937,
											"end": 16076,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16056,
											"end": 16074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 16056,
											"end": 16074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 16056,
											"end": 16074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16056,
											"end": 16074,
											"name": "tag",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 16056,
											"end": 16074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15937,
											"end": 16076,
											"name": "tag",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 15937,
											"end": 16076,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15721,
											"end": 16083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15673,
											"end": 16083,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15673,
											"end": 16083,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15673,
											"end": 16083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15673,
											"end": 16083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15673,
											"end": 16083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16089,
											"end": 16259,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 16089,
											"end": 16259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16229,
											"end": 16251,
											"name": "PUSH",
											"source": 12,
											"value": "43616E6E6F74206265206120636F6E7472616374000000000000000000000000"
										},
										{
											"begin": 16225,
											"end": 16226,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16217,
											"end": 16223,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16213,
											"end": 16227,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16206,
											"end": 16252,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16089,
											"end": 16259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16089,
											"end": 16259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16265,
											"end": 16631,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 16265,
											"end": 16631,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16407,
											"end": 16410,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16428,
											"end": 16495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 16492,
											"end": 16494,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 16487,
											"end": 16490,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16428,
											"end": 16495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 16428,
											"end": 16495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16428,
											"end": 16495,
											"name": "tag",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 16428,
											"end": 16495,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16421,
											"end": 16495,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16421,
											"end": 16495,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16504,
											"end": 16597,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 16593,
											"end": 16596,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16504,
											"end": 16597,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 16504,
											"end": 16597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16504,
											"end": 16597,
											"name": "tag",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 16504,
											"end": 16597,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16622,
											"end": 16624,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16617,
											"end": 16620,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16613,
											"end": 16625,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16606,
											"end": 16625,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16606,
											"end": 16625,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16265,
											"end": 16631,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16265,
											"end": 16631,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16265,
											"end": 16631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16265,
											"end": 16631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16637,
											"end": 17056,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 16637,
											"end": 17056,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16803,
											"end": 16807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16841,
											"end": 16843,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16830,
											"end": 16839,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16826,
											"end": 16844,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16818,
											"end": 16844,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16818,
											"end": 16844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16890,
											"end": 16899,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16884,
											"end": 16888,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16880,
											"end": 16900,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16876,
											"end": 16877,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16865,
											"end": 16874,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16861,
											"end": 16878,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16854,
											"end": 16901,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16918,
											"end": 17049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 17044,
											"end": 17048,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16918,
											"end": 17049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 16918,
											"end": 17049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16918,
											"end": 17049,
											"name": "tag",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 16918,
											"end": 17049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16910,
											"end": 17049,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16910,
											"end": 17049,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16637,
											"end": 17056,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16637,
											"end": 17056,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16637,
											"end": 17056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16637,
											"end": 17056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17062,
											"end": 17244,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 17062,
											"end": 17244,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17202,
											"end": 17236,
											"name": "PUSH",
											"source": 12,
											"value": "416C6C6F636174696F6E206578636565647320616C6C6F776564206C696D6974"
										},
										{
											"begin": 17198,
											"end": 17199,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17186,
											"end": 17200,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17179,
											"end": 17237,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17062,
											"end": 17244,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17062,
											"end": 17244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17250,
											"end": 17616,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 17250,
											"end": 17616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17392,
											"end": 17395,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17413,
											"end": 17480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 17477,
											"end": 17479,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17472,
											"end": 17475,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17413,
											"end": 17480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 17413,
											"end": 17480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17413,
											"end": 17480,
											"name": "tag",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 17413,
											"end": 17480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17406,
											"end": 17480,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17406,
											"end": 17480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17489,
											"end": 17582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "617"
										},
										{
											"begin": 17578,
											"end": 17581,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17489,
											"end": 17582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 17489,
											"end": 17582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17489,
											"end": 17582,
											"name": "tag",
											"source": 12,
											"value": "617"
										},
										{
											"begin": 17489,
											"end": 17582,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17607,
											"end": 17609,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17602,
											"end": 17605,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17598,
											"end": 17610,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17591,
											"end": 17610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17591,
											"end": 17610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17250,
											"end": 17616,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17250,
											"end": 17616,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17250,
											"end": 17616,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17250,
											"end": 17616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17622,
											"end": 18041,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 17622,
											"end": 18041,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17788,
											"end": 17792,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17826,
											"end": 17828,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17815,
											"end": 17824,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17803,
											"end": 17829,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17803,
											"end": 17829,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17875,
											"end": 17884,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17869,
											"end": 17873,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17865,
											"end": 17885,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17861,
											"end": 17862,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17850,
											"end": 17859,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17846,
											"end": 17863,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17839,
											"end": 17886,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17903,
											"end": 18034,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 18029,
											"end": 18033,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17903,
											"end": 18034,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 17903,
											"end": 18034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17903,
											"end": 18034,
											"name": "tag",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 17903,
											"end": 18034,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17895,
											"end": 18034,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17895,
											"end": 18034,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17622,
											"end": 18041,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17622,
											"end": 18041,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17622,
											"end": 18041,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17622,
											"end": 18041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18047,
											"end": 18379,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 18047,
											"end": 18379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18168,
											"end": 18172,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18206,
											"end": 18208,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18195,
											"end": 18204,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18191,
											"end": 18209,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18183,
											"end": 18209,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18183,
											"end": 18209,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18219,
											"end": 18290,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 18287,
											"end": 18288,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18276,
											"end": 18285,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18272,
											"end": 18289,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18263,
											"end": 18269,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18219,
											"end": 18290,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 18219,
											"end": 18290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18219,
											"end": 18290,
											"name": "tag",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 18219,
											"end": 18290,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18300,
											"end": 18372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 18368,
											"end": 18370,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18357,
											"end": 18366,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18353,
											"end": 18371,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18344,
											"end": 18350,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18300,
											"end": 18372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 18300,
											"end": 18372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18300,
											"end": 18372,
											"name": "tag",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 18300,
											"end": 18372,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18047,
											"end": 18379,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 18047,
											"end": 18379,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18047,
											"end": 18379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18047,
											"end": 18379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18047,
											"end": 18379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18047,
											"end": 18379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18385,
											"end": 18616,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 18385,
											"end": 18616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18525,
											"end": 18559,
											"name": "PUSH",
											"source": 12,
											"value": "496E73756666696369656E7420636F6E74726163742062616C616E636520666F"
										},
										{
											"begin": 18521,
											"end": 18522,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18513,
											"end": 18519,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18509,
											"end": 18523,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18502,
											"end": 18560,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18594,
											"end": 18608,
											"name": "PUSH",
											"source": 12,
											"value": "7220616C6C6F636174696F6E0000000000000000000000000000000000000000"
										},
										{
											"begin": 18589,
											"end": 18591,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18581,
											"end": 18587,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18577,
											"end": 18592,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18570,
											"end": 18609,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18385,
											"end": 18616,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18385,
											"end": 18616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18622,
											"end": 18988,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 18622,
											"end": 18988,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18764,
											"end": 18767,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18785,
											"end": 18852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 18849,
											"end": 18851,
											"name": "PUSH",
											"source": 12,
											"value": "2C"
										},
										{
											"begin": 18844,
											"end": 18847,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18785,
											"end": 18852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 18785,
											"end": 18852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18785,
											"end": 18852,
											"name": "tag",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 18785,
											"end": 18852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18778,
											"end": 18852,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18778,
											"end": 18852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18861,
											"end": 18954,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "626"
										},
										{
											"begin": 18950,
											"end": 18953,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18861,
											"end": 18954,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 18861,
											"end": 18954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18861,
											"end": 18954,
											"name": "tag",
											"source": 12,
											"value": "626"
										},
										{
											"begin": 18861,
											"end": 18954,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18979,
											"end": 18981,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18974,
											"end": 18977,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18970,
											"end": 18982,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18963,
											"end": 18982,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18963,
											"end": 18982,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18622,
											"end": 18988,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18622,
											"end": 18988,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18622,
											"end": 18988,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18622,
											"end": 18988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18994,
											"end": 19413,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 18994,
											"end": 19413,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19160,
											"end": 19164,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19198,
											"end": 19200,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19187,
											"end": 19196,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19183,
											"end": 19201,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19175,
											"end": 19201,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19175,
											"end": 19201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19247,
											"end": 19256,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19241,
											"end": 19245,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19237,
											"end": 19257,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19233,
											"end": 19234,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19222,
											"end": 19231,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19218,
											"end": 19235,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19211,
											"end": 19258,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19275,
											"end": 19406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "628"
										},
										{
											"begin": 19401,
											"end": 19405,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19275,
											"end": 19406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 19275,
											"end": 19406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19275,
											"end": 19406,
											"name": "tag",
											"source": 12,
											"value": "628"
										},
										{
											"begin": 19275,
											"end": 19406,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19267,
											"end": 19406,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19267,
											"end": 19406,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18994,
											"end": 19413,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18994,
											"end": 19413,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18994,
											"end": 19413,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18994,
											"end": 19413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19419,
											"end": 19603,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 19419,
											"end": 19603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19518,
											"end": 19529,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19552,
											"end": 19558,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19547,
											"end": 19550,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19540,
											"end": 19559,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19592,
											"end": 19596,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19587,
											"end": 19590,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19583,
											"end": 19597,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19568,
											"end": 19597,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19568,
											"end": 19597,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19419,
											"end": 19603,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19419,
											"end": 19603,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19419,
											"end": 19603,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19419,
											"end": 19603,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19419,
											"end": 19603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19609,
											"end": 19711,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 19609,
											"end": 19711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19678,
											"end": 19682,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19701,
											"end": 19704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19693,
											"end": 19704,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19693,
											"end": 19704,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19609,
											"end": 19711,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19609,
											"end": 19711,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19609,
											"end": 19711,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19609,
											"end": 19711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19717,
											"end": 19825,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 19717,
											"end": 19825,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19794,
											"end": 19818,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "632"
										},
										{
											"begin": 19812,
											"end": 19817,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19794,
											"end": 19818,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 19794,
											"end": 19818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19794,
											"end": 19818,
											"name": "tag",
											"source": 12,
											"value": "632"
										},
										{
											"begin": 19794,
											"end": 19818,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19789,
											"end": 19792,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19782,
											"end": 19819,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19717,
											"end": 19825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19717,
											"end": 19825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19717,
											"end": 19825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19831,
											"end": 20010,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 19831,
											"end": 20010,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19900,
											"end": 19910,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19921,
											"end": 19967,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "634"
										},
										{
											"begin": 19963,
											"end": 19966,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19955,
											"end": 19961,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19921,
											"end": 19967,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 19921,
											"end": 19967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19921,
											"end": 19967,
											"name": "tag",
											"source": 12,
											"value": "634"
										},
										{
											"begin": 19921,
											"end": 19967,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19999,
											"end": 20003,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19994,
											"end": 19997,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19990,
											"end": 20004,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19976,
											"end": 20004,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19976,
											"end": 20004,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19831,
											"end": 20010,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19831,
											"end": 20010,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19831,
											"end": 20010,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19831,
											"end": 20010,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19831,
											"end": 20010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20016,
											"end": 20138,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 20016,
											"end": 20138,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20068,
											"end": 20073,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20093,
											"end": 20132,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 20128,
											"end": 20130,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20123,
											"end": 20126,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20119,
											"end": 20131,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20114,
											"end": 20117,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20093,
											"end": 20132,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 20093,
											"end": 20132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20093,
											"end": 20132,
											"name": "tag",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 20093,
											"end": 20132,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20084,
											"end": 20132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20084,
											"end": 20132,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20016,
											"end": 20138,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20016,
											"end": 20138,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20016,
											"end": 20138,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20016,
											"end": 20138,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20016,
											"end": 20138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20144,
											"end": 20259,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 20144,
											"end": 20259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20216,
											"end": 20220,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20248,
											"end": 20252,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20243,
											"end": 20246,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20239,
											"end": 20253,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20231,
											"end": 20253,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20231,
											"end": 20253,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20144,
											"end": 20259,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20144,
											"end": 20259,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20144,
											"end": 20259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20144,
											"end": 20259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20295,
											"end": 20994,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 20295,
											"end": 20994,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20424,
											"end": 20427,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20447,
											"end": 20533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 20526,
											"end": 20532,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20521,
											"end": 20524,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20447,
											"end": 20533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 20447,
											"end": 20533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20447,
											"end": 20533,
											"name": "tag",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 20447,
											"end": 20533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20440,
											"end": 20533,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 20440,
											"end": 20533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20557,
											"end": 20615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "640"
										},
										{
											"begin": 20609,
											"end": 20614,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20557,
											"end": 20615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 20557,
											"end": 20615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20557,
											"end": 20615,
											"name": "tag",
											"source": 12,
											"value": "640"
										},
										{
											"begin": 20557,
											"end": 20615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20638,
											"end": 20645,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 20669,
											"end": 20670,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20654,
											"end": 20969,
											"name": "tag",
											"source": 12,
											"value": "641"
										},
										{
											"begin": 20654,
											"end": 20969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20679,
											"end": 20685,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20676,
											"end": 20677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20673,
											"end": 20686,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 20654,
											"end": 20969,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20654,
											"end": 20969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "643"
										},
										{
											"begin": 20654,
											"end": 20969,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20749,
											"end": 20791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "644"
										},
										{
											"begin": 20784,
											"end": 20790,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20775,
											"end": 20782,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20749,
											"end": 20791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 20749,
											"end": 20791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20749,
											"end": 20791,
											"name": "tag",
											"source": 12,
											"value": "644"
										},
										{
											"begin": 20749,
											"end": 20791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20811,
											"end": 20874,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 20870,
											"end": 20873,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 20855,
											"end": 20868,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20811,
											"end": 20874,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 20811,
											"end": 20874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20811,
											"end": 20874,
											"name": "tag",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 20811,
											"end": 20874,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20804,
											"end": 20874,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 20804,
											"end": 20874,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20897,
											"end": 20959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 20952,
											"end": 20958,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20897,
											"end": 20959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 20897,
											"end": 20959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20897,
											"end": 20959,
											"name": "tag",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 20897,
											"end": 20959,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20887,
											"end": 20959,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20887,
											"end": 20959,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20714,
											"end": 20969,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20701,
											"end": 20702,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 20698,
											"end": 20699,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20694,
											"end": 20703,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20689,
											"end": 20703,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20689,
											"end": 20703,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20654,
											"end": 20969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "641"
										},
										{
											"begin": 20654,
											"end": 20969,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20654,
											"end": 20969,
											"name": "tag",
											"source": 12,
											"value": "643"
										},
										{
											"begin": 20654,
											"end": 20969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20658,
											"end": 20672,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20985,
											"end": 20988,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20978,
											"end": 20988,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20978,
											"end": 20988,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20429,
											"end": 20994,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20429,
											"end": 20994,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20295,
											"end": 20994,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 20295,
											"end": 20994,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20295,
											"end": 20994,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20295,
											"end": 20994,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20295,
											"end": 20994,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20295,
											"end": 20994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21000,
											"end": 21184,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 21000,
											"end": 21184,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21099,
											"end": 21110,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21133,
											"end": 21139,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21128,
											"end": 21131,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21121,
											"end": 21140,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21173,
											"end": 21177,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21168,
											"end": 21171,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21164,
											"end": 21178,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21149,
											"end": 21178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21149,
											"end": 21178,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21000,
											"end": 21184,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21000,
											"end": 21184,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21000,
											"end": 21184,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21000,
											"end": 21184,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21000,
											"end": 21184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21190,
											"end": 21307,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 21190,
											"end": 21307,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21299,
											"end": 21300,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21296,
											"end": 21297,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 21289,
											"end": 21301,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 21313,
											"end": 21411,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 21313,
											"end": 21411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21397,
											"end": 21403,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21392,
											"end": 21395,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21387,
											"end": 21390,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21374,
											"end": 21404,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 21313,
											"end": 21411,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21313,
											"end": 21411,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21313,
											"end": 21411,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21313,
											"end": 21411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21447,
											"end": 21984,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 21447,
											"end": 21984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21575,
											"end": 21578,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21596,
											"end": 21682,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 21675,
											"end": 21681,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21670,
											"end": 21673,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21596,
											"end": 21682,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 21596,
											"end": 21682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21596,
											"end": 21682,
											"name": "tag",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 21596,
											"end": 21682,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21589,
											"end": 21682,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 21589,
											"end": 21682,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "PUSH",
											"source": 12,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21698,
											"end": 21704,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21695,
											"end": 21773,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 21692,
											"end": 21857,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 21692,
											"end": 21857,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "652"
										},
										{
											"begin": 21692,
											"end": 21857,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 21776,
											"end": 21855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "653"
										},
										{
											"begin": 21776,
											"end": 21855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 21776,
											"end": 21855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21776,
											"end": 21855,
											"name": "tag",
											"source": 12,
											"value": "653"
										},
										{
											"begin": 21776,
											"end": 21855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21692,
											"end": 21857,
											"name": "tag",
											"source": 12,
											"value": "652"
										},
										{
											"begin": 21692,
											"end": 21857,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21888,
											"end": 21892,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21880,
											"end": 21886,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21876,
											"end": 21893,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 21866,
											"end": 21893,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21866,
											"end": 21893,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21903,
											"end": 21946,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 21939,
											"end": 21945,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21934,
											"end": 21937,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21927,
											"end": 21932,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21903,
											"end": 21946,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 21903,
											"end": 21946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21903,
											"end": 21946,
											"name": "tag",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 21903,
											"end": 21946,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21971,
											"end": 21977,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21966,
											"end": 21969,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21962,
											"end": 21978,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21955,
											"end": 21978,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21955,
											"end": 21978,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21447,
											"end": 21984,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 21447,
											"end": 21984,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21447,
											"end": 21984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21447,
											"end": 21984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21447,
											"end": 21984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21447,
											"end": 21984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21990,
											"end": 22664,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 21990,
											"end": 22664,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22231,
											"end": 22235,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22269,
											"end": 22271,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 22258,
											"end": 22267,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22254,
											"end": 22272,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22246,
											"end": 22272,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22246,
											"end": 22272,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22318,
											"end": 22327,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22312,
											"end": 22316,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22308,
											"end": 22328,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22304,
											"end": 22305,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22293,
											"end": 22302,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22289,
											"end": 22306,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22282,
											"end": 22329,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22346,
											"end": 22464,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "656"
										},
										{
											"begin": 22459,
											"end": 22463,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22450,
											"end": 22456,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 22442,
											"end": 22448,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 22346,
											"end": 22464,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 22346,
											"end": 22464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22346,
											"end": 22464,
											"name": "tag",
											"source": 12,
											"value": "656"
										},
										{
											"begin": 22346,
											"end": 22464,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22338,
											"end": 22464,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22338,
											"end": 22464,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22511,
											"end": 22520,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22505,
											"end": 22509,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22501,
											"end": 22521,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22496,
											"end": 22498,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22485,
											"end": 22494,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22481,
											"end": 22499,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22474,
											"end": 22522,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22539,
											"end": 22657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 22652,
											"end": 22656,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22643,
											"end": 22649,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22635,
											"end": 22641,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 22539,
											"end": 22657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 22539,
											"end": 22657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22539,
											"end": 22657,
											"name": "tag",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 22539,
											"end": 22657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22531,
											"end": 22657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22531,
											"end": 22657,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21990,
											"end": 22664,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 21990,
											"end": 22664,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 21990,
											"end": 22664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21990,
											"end": 22664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21990,
											"end": 22664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21990,
											"end": 22664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21990,
											"end": 22664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21990,
											"end": 22664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22670,
											"end": 22843,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 22670,
											"end": 22843,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22810,
											"end": 22835,
											"name": "PUSH",
											"source": 12,
											"value": "436F6E747261637420686173206E6F2062616C616E6365000000000000000000"
										},
										{
											"begin": 22806,
											"end": 22807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22798,
											"end": 22804,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22794,
											"end": 22808,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22787,
											"end": 22836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22670,
											"end": 22843,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22670,
											"end": 22843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22849,
											"end": 23215,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 22849,
											"end": 23215,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22991,
											"end": 22994,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23012,
											"end": 23079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 23076,
											"end": 23078,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 23071,
											"end": 23074,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23012,
											"end": 23079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 23012,
											"end": 23079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23012,
											"end": 23079,
											"name": "tag",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 23012,
											"end": 23079,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23005,
											"end": 23079,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23005,
											"end": 23079,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23088,
											"end": 23181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 23177,
											"end": 23180,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23088,
											"end": 23181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 23088,
											"end": 23181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23088,
											"end": 23181,
											"name": "tag",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 23088,
											"end": 23181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23206,
											"end": 23208,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23201,
											"end": 23204,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23197,
											"end": 23209,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23190,
											"end": 23209,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23190,
											"end": 23209,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22849,
											"end": 23215,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22849,
											"end": 23215,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22849,
											"end": 23215,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22849,
											"end": 23215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23221,
											"end": 23640,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 23221,
											"end": 23640,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23387,
											"end": 23391,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23425,
											"end": 23427,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23414,
											"end": 23423,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23410,
											"end": 23428,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23402,
											"end": 23428,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23402,
											"end": 23428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23474,
											"end": 23483,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23468,
											"end": 23472,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23464,
											"end": 23484,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 23460,
											"end": 23461,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23449,
											"end": 23458,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23445,
											"end": 23462,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23438,
											"end": 23485,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23502,
											"end": 23633,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 23628,
											"end": 23632,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23502,
											"end": 23633,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 23502,
											"end": 23633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23502,
											"end": 23633,
											"name": "tag",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 23502,
											"end": 23633,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23494,
											"end": 23633,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23494,
											"end": 23633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23221,
											"end": 23640,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23221,
											"end": 23640,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23221,
											"end": 23640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23221,
											"end": 23640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23646,
											"end": 23816,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 23646,
											"end": 23816,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23786,
											"end": 23808,
											"name": "PUSH",
											"source": 12,
											"value": "436F6F6C646F776E20696E2070726F6772657373000000000000000000000000"
										},
										{
											"begin": 23782,
											"end": 23783,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23774,
											"end": 23780,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23770,
											"end": 23784,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23763,
											"end": 23809,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23646,
											"end": 23816,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23646,
											"end": 23816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23822,
											"end": 24188,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 23822,
											"end": 24188,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23964,
											"end": 23967,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23985,
											"end": 24052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 24049,
											"end": 24051,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 24044,
											"end": 24047,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23985,
											"end": 24052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 23985,
											"end": 24052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23985,
											"end": 24052,
											"name": "tag",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 23985,
											"end": 24052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23978,
											"end": 24052,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23978,
											"end": 24052,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24061,
											"end": 24154,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 24150,
											"end": 24153,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24061,
											"end": 24154,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 24061,
											"end": 24154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24061,
											"end": 24154,
											"name": "tag",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 24061,
											"end": 24154,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24179,
											"end": 24181,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24174,
											"end": 24177,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24170,
											"end": 24182,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24163,
											"end": 24182,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24163,
											"end": 24182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23822,
											"end": 24188,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23822,
											"end": 24188,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23822,
											"end": 24188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23822,
											"end": 24188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24194,
											"end": 24613,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 24194,
											"end": 24613,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24360,
											"end": 24364,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24398,
											"end": 24400,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24387,
											"end": 24396,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24383,
											"end": 24401,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24375,
											"end": 24401,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24375,
											"end": 24401,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24447,
											"end": 24456,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24441,
											"end": 24445,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24437,
											"end": 24457,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24433,
											"end": 24434,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24422,
											"end": 24431,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24418,
											"end": 24435,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24411,
											"end": 24458,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24475,
											"end": 24606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "669"
										},
										{
											"begin": 24601,
											"end": 24605,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24475,
											"end": 24606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 24475,
											"end": 24606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24475,
											"end": 24606,
											"name": "tag",
											"source": 12,
											"value": "669"
										},
										{
											"begin": 24475,
											"end": 24606,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24467,
											"end": 24606,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24467,
											"end": 24606,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24194,
											"end": 24613,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24194,
											"end": 24613,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24194,
											"end": 24613,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24194,
											"end": 24613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24619,
											"end": 24839,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 24619,
											"end": 24839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24759,
											"end": 24793,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F20756E616C6C6F636174656420746F6B656E7320746F2077697468647261"
										},
										{
											"begin": 24755,
											"end": 24756,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24747,
											"end": 24753,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24743,
											"end": 24757,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24736,
											"end": 24794,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24828,
											"end": 24831,
											"name": "PUSH",
											"source": 12,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24823,
											"end": 24825,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24815,
											"end": 24821,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24811,
											"end": 24826,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24804,
											"end": 24832,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24619,
											"end": 24839,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24619,
											"end": 24839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24845,
											"end": 25211,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 24845,
											"end": 25211,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24987,
											"end": 24990,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25008,
											"end": 25075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 25072,
											"end": 25074,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 25067,
											"end": 25070,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25008,
											"end": 25075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 25008,
											"end": 25075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25008,
											"end": 25075,
											"name": "tag",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 25008,
											"end": 25075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25001,
											"end": 25075,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25001,
											"end": 25075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25084,
											"end": 25177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "673"
										},
										{
											"begin": 25173,
											"end": 25176,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25084,
											"end": 25177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 25084,
											"end": 25177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25084,
											"end": 25177,
											"name": "tag",
											"source": 12,
											"value": "673"
										},
										{
											"begin": 25084,
											"end": 25177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25202,
											"end": 25204,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 25197,
											"end": 25200,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25193,
											"end": 25205,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25186,
											"end": 25205,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25186,
											"end": 25205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24845,
											"end": 25211,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24845,
											"end": 25211,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24845,
											"end": 25211,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24845,
											"end": 25211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25217,
											"end": 25636,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 25217,
											"end": 25636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25383,
											"end": 25387,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25421,
											"end": 25423,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 25410,
											"end": 25419,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25406,
											"end": 25424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25398,
											"end": 25424,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25398,
											"end": 25424,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25470,
											"end": 25479,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25464,
											"end": 25468,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25460,
											"end": 25480,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 25456,
											"end": 25457,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25445,
											"end": 25454,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25441,
											"end": 25458,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25434,
											"end": 25481,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25498,
											"end": 25629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "675"
										},
										{
											"begin": 25624,
											"end": 25628,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25498,
											"end": 25629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 25498,
											"end": 25629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25498,
											"end": 25629,
											"name": "tag",
											"source": 12,
											"value": "675"
										},
										{
											"begin": 25498,
											"end": 25629,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25490,
											"end": 25629,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25490,
											"end": 25629,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25217,
											"end": 25636,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25217,
											"end": 25636,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25217,
											"end": 25636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25217,
											"end": 25636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25642,
											"end": 25869,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 25642,
											"end": 25869,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25782,
											"end": 25816,
											"name": "PUSH",
											"source": 12,
											"value": "4465706F73697420616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 25778,
											"end": 25779,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25770,
											"end": 25776,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25766,
											"end": 25780,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25759,
											"end": 25817,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25851,
											"end": 25861,
											"name": "PUSH",
											"source": 12,
											"value": "68616E207A65726F000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25846,
											"end": 25848,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 25838,
											"end": 25844,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25834,
											"end": 25849,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25827,
											"end": 25862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25642,
											"end": 25869,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25642,
											"end": 25869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25875,
											"end": 26241,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 25875,
											"end": 26241,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26017,
											"end": 26020,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26038,
											"end": 26105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "678"
										},
										{
											"begin": 26102,
											"end": 26104,
											"name": "PUSH",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 26097,
											"end": 26100,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26038,
											"end": 26105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 26038,
											"end": 26105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26038,
											"end": 26105,
											"name": "tag",
											"source": 12,
											"value": "678"
										},
										{
											"begin": 26038,
											"end": 26105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26031,
											"end": 26105,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26031,
											"end": 26105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26114,
											"end": 26207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 26203,
											"end": 26206,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26114,
											"end": 26207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 26114,
											"end": 26207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26114,
											"end": 26207,
											"name": "tag",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 26114,
											"end": 26207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26232,
											"end": 26234,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 26227,
											"end": 26230,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26223,
											"end": 26235,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26216,
											"end": 26235,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26216,
											"end": 26235,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25875,
											"end": 26241,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25875,
											"end": 26241,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25875,
											"end": 26241,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25875,
											"end": 26241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26247,
											"end": 26666,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 26247,
											"end": 26666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26413,
											"end": 26417,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26451,
											"end": 26453,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26440,
											"end": 26449,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26436,
											"end": 26454,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26428,
											"end": 26454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26428,
											"end": 26454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26500,
											"end": 26509,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26494,
											"end": 26498,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26490,
											"end": 26510,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 26486,
											"end": 26487,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26475,
											"end": 26484,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26471,
											"end": 26488,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26464,
											"end": 26511,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 26528,
											"end": 26659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 26654,
											"end": 26658,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26528,
											"end": 26659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 26528,
											"end": 26659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26528,
											"end": 26659,
											"name": "tag",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 26528,
											"end": 26659,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26520,
											"end": 26659,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26520,
											"end": 26659,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26247,
											"end": 26666,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26247,
											"end": 26666,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26247,
											"end": 26666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26247,
											"end": 26666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26672,
											"end": 26842,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 26672,
											"end": 26842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26812,
											"end": 26834,
											"name": "PUSH",
											"source": 12,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 26808,
											"end": 26809,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26800,
											"end": 26806,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26796,
											"end": 26810,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26789,
											"end": 26835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 26672,
											"end": 26842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26672,
											"end": 26842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26848,
											"end": 27214,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 26848,
											"end": 27214,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26990,
											"end": 26993,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27011,
											"end": 27078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "684"
										},
										{
											"begin": 27075,
											"end": 27077,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 27070,
											"end": 27073,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27011,
											"end": 27078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 27011,
											"end": 27078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27011,
											"end": 27078,
											"name": "tag",
											"source": 12,
											"value": "684"
										},
										{
											"begin": 27011,
											"end": 27078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27004,
											"end": 27078,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27004,
											"end": 27078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27087,
											"end": 27180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "685"
										},
										{
											"begin": 27176,
											"end": 27179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27087,
											"end": 27180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 27087,
											"end": 27180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27087,
											"end": 27180,
											"name": "tag",
											"source": 12,
											"value": "685"
										},
										{
											"begin": 27087,
											"end": 27180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27205,
											"end": 27207,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27200,
											"end": 27203,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27196,
											"end": 27208,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27189,
											"end": 27208,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27189,
											"end": 27208,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26848,
											"end": 27214,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26848,
											"end": 27214,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26848,
											"end": 27214,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26848,
											"end": 27214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27220,
											"end": 27639,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 27220,
											"end": 27639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27386,
											"end": 27390,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27424,
											"end": 27426,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27413,
											"end": 27422,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27409,
											"end": 27427,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27401,
											"end": 27427,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27401,
											"end": 27427,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27473,
											"end": 27482,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27467,
											"end": 27471,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27463,
											"end": 27483,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 27459,
											"end": 27460,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27448,
											"end": 27457,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27444,
											"end": 27461,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27437,
											"end": 27484,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 27501,
											"end": 27632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "687"
										},
										{
											"begin": 27627,
											"end": 27631,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27501,
											"end": 27632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 27501,
											"end": 27632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27501,
											"end": 27632,
											"name": "tag",
											"source": 12,
											"value": "687"
										},
										{
											"begin": 27501,
											"end": 27632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27493,
											"end": 27632,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27493,
											"end": 27632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27220,
											"end": 27639,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27220,
											"end": 27639,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27220,
											"end": 27639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27220,
											"end": 27639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27645,
											"end": 27814,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 27645,
											"end": 27814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27785,
											"end": 27806,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F206665657320746F20776974686472617700000000000000000000000000"
										},
										{
											"begin": 27781,
											"end": 27782,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27773,
											"end": 27779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27769,
											"end": 27783,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27762,
											"end": 27807,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 27645,
											"end": 27814,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27645,
											"end": 27814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27820,
											"end": 28186,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 27820,
											"end": 28186,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27962,
											"end": 27965,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27983,
											"end": 28050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "690"
										},
										{
											"begin": 28047,
											"end": 28049,
											"name": "PUSH",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 28042,
											"end": 28045,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27983,
											"end": 28050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 27983,
											"end": 28050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27983,
											"end": 28050,
											"name": "tag",
											"source": 12,
											"value": "690"
										},
										{
											"begin": 27983,
											"end": 28050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27976,
											"end": 28050,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27976,
											"end": 28050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28059,
											"end": 28152,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 28148,
											"end": 28151,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28059,
											"end": 28152,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 28059,
											"end": 28152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28059,
											"end": 28152,
											"name": "tag",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 28059,
											"end": 28152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28177,
											"end": 28179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28172,
											"end": 28175,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28168,
											"end": 28180,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28161,
											"end": 28180,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28161,
											"end": 28180,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27820,
											"end": 28186,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27820,
											"end": 28186,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27820,
											"end": 28186,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27820,
											"end": 28186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28192,
											"end": 28611,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 28192,
											"end": 28611,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28358,
											"end": 28362,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28396,
											"end": 28398,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28385,
											"end": 28394,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28381,
											"end": 28399,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28373,
											"end": 28399,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28373,
											"end": 28399,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28445,
											"end": 28454,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28439,
											"end": 28443,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28435,
											"end": 28455,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 28431,
											"end": 28432,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28420,
											"end": 28429,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28416,
											"end": 28433,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28409,
											"end": 28456,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 28473,
											"end": 28604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "693"
										},
										{
											"begin": 28599,
											"end": 28603,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28473,
											"end": 28604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 28473,
											"end": 28604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28473,
											"end": 28604,
											"name": "tag",
											"source": 12,
											"value": "693"
										},
										{
											"begin": 28473,
											"end": 28604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28465,
											"end": 28604,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28465,
											"end": 28604,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28192,
											"end": 28611,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28192,
											"end": 28611,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28192,
											"end": 28611,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28192,
											"end": 28611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28617,
											"end": 28798,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 28617,
											"end": 28798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28757,
											"end": 28790,
											"name": "PUSH",
											"source": 12,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 28753,
											"end": 28754,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28745,
											"end": 28751,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28741,
											"end": 28755,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28734,
											"end": 28791,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 28617,
											"end": 28798,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28617,
											"end": 28798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28804,
											"end": 29170,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 28804,
											"end": 29170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28946,
											"end": 28949,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28967,
											"end": 29034,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "696"
										},
										{
											"begin": 29031,
											"end": 29033,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 29026,
											"end": 29029,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28967,
											"end": 29034,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 28967,
											"end": 29034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28967,
											"end": 29034,
											"name": "tag",
											"source": 12,
											"value": "696"
										},
										{
											"begin": 28967,
											"end": 29034,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28960,
											"end": 29034,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28960,
											"end": 29034,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29043,
											"end": 29136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "697"
										},
										{
											"begin": 29132,
											"end": 29135,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29043,
											"end": 29136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 29043,
											"end": 29136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29043,
											"end": 29136,
											"name": "tag",
											"source": 12,
											"value": "697"
										},
										{
											"begin": 29043,
											"end": 29136,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29161,
											"end": 29163,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 29156,
											"end": 29159,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29152,
											"end": 29164,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29145,
											"end": 29164,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29145,
											"end": 29164,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28804,
											"end": 29170,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28804,
											"end": 29170,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28804,
											"end": 29170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28804,
											"end": 29170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29176,
											"end": 29595,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 29176,
											"end": 29595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29342,
											"end": 29346,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29380,
											"end": 29382,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 29369,
											"end": 29378,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29365,
											"end": 29383,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29357,
											"end": 29383,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29357,
											"end": 29383,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29429,
											"end": 29438,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29423,
											"end": 29427,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29419,
											"end": 29439,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 29415,
											"end": 29416,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29404,
											"end": 29413,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 29400,
											"end": 29417,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29393,
											"end": 29440,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 29457,
											"end": 29588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "699"
										},
										{
											"begin": 29583,
											"end": 29587,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29457,
											"end": 29588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 29457,
											"end": 29588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29457,
											"end": 29588,
											"name": "tag",
											"source": 12,
											"value": "699"
										},
										{
											"begin": 29457,
											"end": 29588,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29449,
											"end": 29588,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29449,
											"end": 29588,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29176,
											"end": 29595,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29176,
											"end": 29595,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29176,
											"end": 29595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29176,
											"end": 29595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29601,
											"end": 29933,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 29601,
											"end": 29933,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29722,
											"end": 29726,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29760,
											"end": 29762,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 29749,
											"end": 29758,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29745,
											"end": 29763,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29737,
											"end": 29763,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29737,
											"end": 29763,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29773,
											"end": 29844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "701"
										},
										{
											"begin": 29841,
											"end": 29842,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29830,
											"end": 29839,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 29826,
											"end": 29843,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29817,
											"end": 29823,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 29773,
											"end": 29844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 29773,
											"end": 29844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29773,
											"end": 29844,
											"name": "tag",
											"source": 12,
											"value": "701"
										},
										{
											"begin": 29773,
											"end": 29844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29854,
											"end": 29926,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "702"
										},
										{
											"begin": 29922,
											"end": 29924,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 29911,
											"end": 29920,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 29907,
											"end": 29925,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29898,
											"end": 29904,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 29854,
											"end": 29926,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 29854,
											"end": 29926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29854,
											"end": 29926,
											"name": "tag",
											"source": 12,
											"value": "702"
										},
										{
											"begin": 29854,
											"end": 29926,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29601,
											"end": 29933,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 29601,
											"end": 29933,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 29601,
											"end": 29933,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29601,
											"end": 29933,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29601,
											"end": 29933,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29601,
											"end": 29933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29939,
											"end": 30381,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 29939,
											"end": 30381,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30088,
											"end": 30092,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30126,
											"end": 30128,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 30115,
											"end": 30124,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30111,
											"end": 30129,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30103,
											"end": 30129,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 30103,
											"end": 30129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30139,
											"end": 30210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "704"
										},
										{
											"begin": 30207,
											"end": 30208,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30196,
											"end": 30205,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30192,
											"end": 30209,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30183,
											"end": 30189,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 30139,
											"end": 30210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 30139,
											"end": 30210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30139,
											"end": 30210,
											"name": "tag",
											"source": 12,
											"value": "704"
										},
										{
											"begin": 30139,
											"end": 30210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30220,
											"end": 30292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "705"
										},
										{
											"begin": 30288,
											"end": 30290,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 30277,
											"end": 30286,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30273,
											"end": 30291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30264,
											"end": 30270,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 30220,
											"end": 30292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 30220,
											"end": 30292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30220,
											"end": 30292,
											"name": "tag",
											"source": 12,
											"value": "705"
										},
										{
											"begin": 30220,
											"end": 30292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30302,
											"end": 30374,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "706"
										},
										{
											"begin": 30370,
											"end": 30372,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 30359,
											"end": 30368,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30355,
											"end": 30373,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30346,
											"end": 30352,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 30302,
											"end": 30374,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 30302,
											"end": 30374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30302,
											"end": 30374,
											"name": "tag",
											"source": 12,
											"value": "706"
										},
										{
											"begin": 30302,
											"end": 30374,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29939,
											"end": 30381,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 29939,
											"end": 30381,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 29939,
											"end": 30381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29939,
											"end": 30381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29939,
											"end": 30381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29939,
											"end": 30381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29939,
											"end": 30381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"FvckClaim.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addClaimableBatch(address[],uint256[])": "d7bebac0",
							"approveClaim()": "a0470cb4",
							"approvedForClaim(address)": "94192b9f",
							"canClaim(address)": "bf3506c1",
							"claim()": "4e71d92d",
							"claimApprovalFee()": "1f322564",
							"claimBlocked(address)": "8f060da9",
							"claimEnabled()": "2866ed21",
							"contractTokenBalance()": "9e9aed62",
							"depositTokens(uint256)": "dd49756e",
							"emergencyWithdraw()": "db2e21bc",
							"emergencyWithdrawCooldown()": "28607bc6",
							"getClaimableBalance(address)": "06def802",
							"getStats()": "c59d4847",
							"getTotalClaimed(address)": "522bf1d4",
							"getUnallocatedTokens()": "4243fc4e",
							"lastEmergencyWithdraw()": "26155e53",
							"maxAllocationPerAddress()": "86e755c6",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setClaimApprovalFee(uint256)": "e1ffba62",
							"setClaimBlockedForAddress(address,bool)": "2019ddf8",
							"setClaimEnabled(bool)": "92929a09",
							"token()": "fc0c546a",
							"totalAddressesClaimed()": "2bb2ed39",
							"totalAllocated()": "45f7f249",
							"totalRegisteredAddresses()": "6104f4b5",
							"transferOwnership(address)": "f2fde38b",
							"withdrawApprovalFees()": "e1413163",
							"withdrawUnallocatedTokens()": "dc7f9e34"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"ClaimApprovalFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ClaimApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBlocked\",\"type\":\"bool\"}],\"name\":\"ClaimBlockedForAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"ClaimEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"ClaimableBatchAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NewAddressRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAllocated\",\"type\":\"uint256\"}],\"name\":\"TokensAllocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnallocatedTokensWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"addClaimableBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveClaim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedForClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"canClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimApprovalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimBlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdrawCooldown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getClaimableBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalRegistered\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalContractBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalAllocated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_claimEnabled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getTotalClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnallocatedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastEmergencyWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAllocationPerAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setClaimApprovalFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_blocked\",\"type\":\"bool\"}],\"name\":\"setClaimBlockedForAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setClaimEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAddressesClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRegisteredAddresses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawApprovalFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawUnallocatedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"addClaimableBatch(address[],uint256[])\":{\"params\":{\"_accounts\":\"List of addresses eligible for claims.\",\"_amounts\":\"Corresponding token amounts (without decimals) each address can claim.\"}},\"canClaim(address)\":{\"params\":{\"_account\":\"Address to query.\"}},\"constructor\":{\"details\":\"Constructor: sets the token to be used and configures the owner.\",\"params\":{\"_token\":\"Address of the ERC20/BEP20 token contract.\"}},\"depositTokens(uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to deposit.\"}},\"getClaimableBalance(address)\":{\"params\":{\"_account\":\"Address to query.\"}},\"getTotalClaimed(address)\":{\"params\":{\"_account\":\"Address to query.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setClaimApprovalFee(uint256)\":{\"params\":{\"_fee\":\"Fee amount in WEI.\"}},\"setClaimBlockedForAddress(address,bool)\":{\"params\":{\"_account\":\"Address to be blocked/unblocked.\",\"_blocked\":\"Boolean indicating whether the claim is blocked (true) or unblocked (false).\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"FVCKCLAIM\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addClaimableBatch(address[],uint256[])\":{\"notice\":\"Adds (or sums) claimable balances for multiple addresses in a single batch operation.\"},\"approveClaim()\":{\"notice\":\"Allows a user to pay the approval fee and enable claim eligibility.\"},\"canClaim(address)\":{\"notice\":\"Checks whether a wallet can currently claim tokens.\"},\"claim()\":{\"notice\":\"Allows a user to claim their allocated tokens. The claim can be made only once.\"},\"contractTokenBalance()\":{\"notice\":\"Returns the total token balance of the contract.\"},\"depositTokens(uint256)\":{\"notice\":\"Allows the owner to deposit tokens into the contract for distribution.\"},\"emergencyWithdraw()\":{\"notice\":\"Allows the owner to withdraw all tokens in case of an emergency.\"},\"getClaimableBalance(address)\":{\"notice\":\"Retrieves the specific claimable balance for a given address.\"},\"getStats()\":{\"notice\":\"Retrieves statistics for the frontend interface.\"},\"getTotalClaimed(address)\":{\"notice\":\"Retrieves the total tokens already claimed by a given address.\"},\"getUnallocatedTokens()\":{\"notice\":\"Retrieves the total tokens that are unallocated in the contract.\"},\"setClaimApprovalFee(uint256)\":{\"notice\":\"Allows the owner to set the claim approval fee.\"},\"setClaimBlockedForAddress(address,bool)\":{\"notice\":\"Allows the owner to block or unblock the claim functionality for a specific address.\"},\"setClaimEnabled(bool)\":{\"notice\":\"Allows the owner to enable or disable the claim functionality globally.\"},\"withdrawApprovalFees()\":{\"notice\":\"Allows the owner to withdraw all collected approval fees.\"},\"withdrawUnallocatedTokens()\":{\"notice\":\"Allows the owner to withdraw only the unallocated tokens, respecting a cooldown.\"}},\"notice\":\"Contract to lock BEP20/ERC20 tokens received externally (via transfer),         manage a mapping of wallets authorized to claim specific balances,         and allow withdrawal of these tokens only once.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"FvckClaim.sol\":\"FvckClaim\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"FvckClaim.sol\":{\"keccak256\":\"0x3632127d3f1523b4dbfe8a4ecf00e6a18dbdea0133d32ec72415f0aa646a2b90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38d7973d84a8b92f380d4985af8d31bb1cffe66130e3cc8e6331e113ce109061\",\"dweb:/ipfs/QmQubx4Rn45Ps9cmA5QaggiHGmmrzENyHCeAoTE96YVvGG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "FvckClaim.sol:FvckClaim",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "FvckClaim.sol:FvckClaim",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1133,
								"contract": "FvckClaim.sol:FvckClaim",
								"label": "claimEnabled",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 1137,
								"contract": "FvckClaim.sol:FvckClaim",
								"label": "claimableBalances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1141,
								"contract": "FvckClaim.sol:FvckClaim",
								"label": "claimedBalances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1145,
								"contract": "FvckClaim.sol:FvckClaim",
								"label": "claimBlocked",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1149,
								"contract": "FvckClaim.sol:FvckClaim",
								"label": "approvedForClaim",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1151,
								"contract": "FvckClaim.sol:FvckClaim",
								"label": "totalRegisteredAddresses",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1153,
								"contract": "FvckClaim.sol:FvckClaim",
								"label": "totalAddressesClaimed",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1155,
								"contract": "FvckClaim.sol:FvckClaim",
								"label": "totalAllocated",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1159,
								"contract": "FvckClaim.sol:FvckClaim",
								"label": "_isRegistered",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1169,
								"contract": "FvckClaim.sol:FvckClaim",
								"label": "maxAllocationPerAddress",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1171,
								"contract": "FvckClaim.sol:FvckClaim",
								"label": "lastEmergencyWithdraw",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1174,
								"contract": "FvckClaim.sol:FvckClaim",
								"label": "emergencyWithdrawCooldown",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1176,
								"contract": "FvckClaim.sol:FvckClaim",
								"label": "claimApprovalFee",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addClaimableBatch(address[],uint256[])": {
								"notice": "Adds (or sums) claimable balances for multiple addresses in a single batch operation."
							},
							"approveClaim()": {
								"notice": "Allows a user to pay the approval fee and enable claim eligibility."
							},
							"canClaim(address)": {
								"notice": "Checks whether a wallet can currently claim tokens."
							},
							"claim()": {
								"notice": "Allows a user to claim their allocated tokens. The claim can be made only once."
							},
							"contractTokenBalance()": {
								"notice": "Returns the total token balance of the contract."
							},
							"depositTokens(uint256)": {
								"notice": "Allows the owner to deposit tokens into the contract for distribution."
							},
							"emergencyWithdraw()": {
								"notice": "Allows the owner to withdraw all tokens in case of an emergency."
							},
							"getClaimableBalance(address)": {
								"notice": "Retrieves the specific claimable balance for a given address."
							},
							"getStats()": {
								"notice": "Retrieves statistics for the frontend interface."
							},
							"getTotalClaimed(address)": {
								"notice": "Retrieves the total tokens already claimed by a given address."
							},
							"getUnallocatedTokens()": {
								"notice": "Retrieves the total tokens that are unallocated in the contract."
							},
							"setClaimApprovalFee(uint256)": {
								"notice": "Allows the owner to set the claim approval fee."
							},
							"setClaimBlockedForAddress(address,bool)": {
								"notice": "Allows the owner to block or unblock the claim functionality for a specific address."
							},
							"setClaimEnabled(bool)": {
								"notice": "Allows the owner to enable or disable the claim functionality globally."
							},
							"withdrawApprovalFees()": {
								"notice": "Allows the owner to withdraw all collected approval fees."
							},
							"withdrawUnallocatedTokens()": {
								"notice": "Allows the owner to withdraw only the unallocated tokens, respecting a cooldown."
							}
						},
						"notice": "Contract to lock BEP20/ERC20 tokens received externally (via transfer),         manage a mapping of wallets authorized to claim specific balances,         and allow withdrawal of these tokens only once.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1080
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1081,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1080,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1080,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1080
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1062,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							1114
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1114,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1114,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								1114,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1114
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 1115,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1114,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 380,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 380,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 380,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 380,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 380,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 380,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1050
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							791
						]
					},
					"id": 792,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 792,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 792,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 792,
							"sourceUnit": 1051,
							"src": "238:51:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 387,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "246:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 389,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 791,
							"linearizedBaseContracts": [
								791
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 394,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "875:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:6"
									},
									"src": "844:46:6"
								},
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 403,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1011:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1028:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1054:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:6"
									},
									"src": "972:109:6"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "1343:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 415,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "1373:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 418,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "1395:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1395:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 420,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1412:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 421,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "1416:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 422,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 416,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 414,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "1353:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:6"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1293:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 405,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1293:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1293:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1307:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1319:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:6"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:6"
									},
									"scope": 791,
									"src": "1271:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "1760:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "1790:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 444,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 431,
																		"src": "1812:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1812:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 446,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1833:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 447,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1839:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 448,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 437,
																			"src": "1843:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 449,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 442,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 440,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "1770:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:6"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1696:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 430,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 429,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1696:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1696:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1710:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1724:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1736:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:6"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:6"
									},
									"scope": 791,
									"src": "1670:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "2600:139:6",
										"statements": [
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "2610:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 465,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 475,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 471,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$791",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$791",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 469,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 473,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "2664:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 467,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2633:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "2633:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 477,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2695:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 478,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "2702:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 479,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "2711:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 480,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "2726:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 476,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "2682:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:6"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "2545:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 457,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 456,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2545:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2545:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "2559:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "2576:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:6"
									},
									"scope": 791,
									"src": "2514:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "3505:370:6",
										"statements": [
											{
												"id": 526,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:6",
												"statements": [
													{
														"assignments": [
															497
														],
														"declarations": [
															{
																"constant": false,
																"id": 497,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 526,
																"src": "3539:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 496,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 506,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 502,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$791",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$791",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 500,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 504,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "3597:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 498,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3566:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "3566:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 507,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "3623:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 508,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "3642:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 517,
														"nodeType": "IfStatement",
														"src": "3619:160:6",
														"trueBody": {
															"id": 516,
															"nodeType": "Block",
															"src": "3661:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 511,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "3719:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 512,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 497,
																				"src": "3728:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 513,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 493,
																				"src": "3746:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 510,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 403,
																			"src": "3686:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 515,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 519,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3805:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 520,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "3812:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 521,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 497,
																		"src": "3821:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 522,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "3840:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 518,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "3792:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 525,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "3438:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 488,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 487,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3438:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3438:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "3452:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "3469:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:6"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:6"
									},
									"scope": 791,
									"src": "3407:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4529:303:6",
										"statements": [
											{
												"assignments": [
													540
												],
												"declarations": [
													{
														"constant": false,
														"id": 540,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4539:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 539,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 543,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "4582:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "4582:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 545,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4598:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "4607:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 547,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 541,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:6"
											},
											{
												"condition": {
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 551,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "4654:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 552,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "4661:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 550,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "4630:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 573,
												"nodeType": "IfStatement",
												"src": "4625:201:6",
												"trueBody": {
													"id": 572,
													"nodeType": "Block",
													"src": "4676:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 556,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "4710:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 559,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "4732:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 560,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "4732:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 561,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 534,
																						"src": "4748:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 562,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 563,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 557,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 555,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "4690:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 568,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "4795:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 569,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 540,
																		"src": "4802:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 567,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "4775:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 571,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4474:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 531,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 530,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4474:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4474:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4488:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4505:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:6"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:6"
									},
									"scope": 791,
									"src": "4452:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "5279:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 588,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "5293:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 602,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "5402:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 603,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "5406:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 604,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "5413:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 600,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "5380:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5380:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 615,
													"nodeType": "IfStatement",
													"src": "5375:117:6",
													"trueBody": {
														"id": 614,
														"nodeType": "Block",
														"src": "5420:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 610,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 579,
																					"src": "5474:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 608,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 607,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "5441:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 613,
																"nodeType": "RevertStatement",
																"src": "5434:47:6"
															}
														]
													}
												},
												"id": 616,
												"nodeType": "IfStatement",
												"src": "5289:203:6",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "5314:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "5341:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 595,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "5348:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "5352:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "5328:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5208:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 578,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 577,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5208:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5208:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5224:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5236:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5251:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:6"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:6"
									},
									"scope": 791,
									"src": "5176:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "6017:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 633,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "6031:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 648,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "6154:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 649,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "6160:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 650,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "6164:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 651,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "6171:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 646,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "6128:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6128:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 662,
													"nodeType": "IfStatement",
													"src": "6123:127:6",
													"trueBody": {
														"id": 661,
														"nodeType": "Block",
														"src": "6178:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 657,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 622,
																					"src": "6232:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 655,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 654,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "6199:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 660,
																"nodeType": "RevertStatement",
																"src": "6192:47:6"
															}
														]
													}
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6027:223:6",
												"trueBody": {
													"id": 645,
													"nodeType": "Block",
													"src": "6052:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 639,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "6083:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 640,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "6090:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 641,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6096:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 642,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 628,
																		"src": "6100:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 638,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "6066:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 644,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5895:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 621,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 620,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5895:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5895:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5919:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5941:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5961:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5984:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:6"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:6"
									},
									"scope": 791,
									"src": "5850:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "7023:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 678,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "7037:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 692,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "7145:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 693,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "7149:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 694,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "7156:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 690,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "7124:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7124:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 705,
													"nodeType": "IfStatement",
													"src": "7119:116:6",
													"trueBody": {
														"id": 704,
														"nodeType": "Block",
														"src": "7163:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 700,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "7217:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 699,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 698,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 697,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "7184:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 703,
																"nodeType": "RevertStatement",
																"src": "7177:47:6"
															}
														]
													}
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "7033:202:6",
												"trueBody": {
													"id": 689,
													"nodeType": "Block",
													"src": "7058:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 684,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "7085:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 685,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "7092:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 686,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 673,
																		"src": "7096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 683,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "7072:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 688,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6952:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 668,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 667,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6952:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6952:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6968:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6980:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6995:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:6"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:6"
									},
									"scope": 791,
									"src": "6921:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "7808:650:6",
										"statements": [
											{
												"assignments": [
													718
												],
												"declarations": [
													{
														"constant": false,
														"id": 718,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 748,
														"src": "7818:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 717,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 719,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:6"
											},
											{
												"assignments": [
													721
												],
												"declarations": [
													{
														"constant": false,
														"id": 721,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 748,
														"src": "7846:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 720,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 722,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7900:396:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:6"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7929:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8050:157:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8034:15:6"
															},
															"nodeType": "YulIf",
															"src": "8031:176:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8220:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8263:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8278:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 714,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:6",
														"valueSize": 1
													},
													{
														"declaration": 714,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:6",
														"valueSize": 1
													},
													{
														"declaration": 718,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:6",
														"valueSize": 1
													},
													{
														"declaration": 721,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:6",
														"valueSize": 1
													},
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 723,
												"nodeType": "InlineAssembly",
												"src": "7875:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 724,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "8310:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 735,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "8362:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 729,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 712,
																			"src": "8336:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 727,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 747,
												"nodeType": "IfStatement",
												"src": "8306:146:6",
												"trueBody": {
													"id": 746,
													"nodeType": "Block",
													"src": "8380:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 742,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 712,
																				"src": "8434:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 740,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 739,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "8401:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 745,
															"nodeType": "RevertStatement",
															"src": "8394:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "7767:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 711,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 710,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "7767:6:6"
													},
													"referencedDeclaration": 380,
													"src": "7767:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "7781:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:6"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:6"
									},
									"scope": 791,
									"src": "7738:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "9049:391:6",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "9059:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 760,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 762,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:6"
											},
											{
												"assignments": [
													764
												],
												"declarations": [
													{
														"constant": false,
														"id": 764,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "9081:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 763,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 765,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:6"
											},
											{
												"assignments": [
													767
												],
												"declarations": [
													{
														"constant": false,
														"id": 767,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "9109:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 766,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 768,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9163:174:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9177:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:6"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9188:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9261:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9275:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9304:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9319:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:6",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:6",
														"valueSize": 1
													},
													{
														"declaration": 764,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:6",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:6",
														"valueSize": 1
													},
													{
														"declaration": 761,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:6",
														"valueSize": 1
													},
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 769,
												"nodeType": "InlineAssembly",
												"src": "9138:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "9353:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 771,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "9365:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 782,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "9416:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 776,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 753,
																						"src": "9391:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 775,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 774,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 786,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 759,
												"id": 788,
												"nodeType": "Return",
												"src": "9346:87:6"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "8993:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 752,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 751,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8993:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8993:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "9007:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 754,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:6"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "9043:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 757,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:6"
									},
									"scope": 791,
									"src": "8960:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 792,
							"src": "750:8692:6",
							"usedErrors": [
								394,
								403
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1050
						],
						"Errors": [
							1102
						]
					},
					"id": 1051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 793,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 795,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1051,
							"sourceUnit": 1103,
							"src": "127:36:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 794,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1102,
										"src": "135:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 796,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1050,
							"linearizedBaseContracts": [
								1050
							],
							"name": "Address",
							"nameLocation": "241:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:7",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 801,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "358:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:7"
									},
									"src": "335:39:7"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "1361:278:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 811,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1050",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1050",
																		"typeString": "library Address"
																	}
																],
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 809,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 814,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "1399:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 828,
												"nodeType": "IfStatement",
												"src": "1371:125:7",
												"trueBody": {
													"id": 827,
													"nodeType": "Block",
													"src": "1407:89:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 821,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1050",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1050",
																						"typeString": "library Address"
																					}
																				],
																				"id": 820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 819,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 824,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "1478:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 816,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "1428:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1102_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:7",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1090,
																	"src": "1428:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 826,
															"nodeType": "RevertStatement",
															"src": "1421:64:7"
														}
													]
												}
											},
											{
												"assignments": [
													830,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 830,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "1507:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 829,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 837,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 831,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "1525:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 833,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "1547:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:7"
											},
											{
												"condition": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:7",
													"subExpression": {
														"id": 838,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "1573:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 846,
												"nodeType": "IfStatement",
												"src": "1568:65:7",
												"trueBody": {
													"id": 845,
													"nodeType": "Block",
													"src": "1582:51:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 840,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "1603:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1102_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:7",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1093,
																	"src": "1603:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 844,
															"nodeType": "RevertStatement",
															"src": "1596:26:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1309:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1336:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:7"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:7"
									},
									"scope": 1050,
									"src": "1290:349:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "2573:62:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 859,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "2612:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 860,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "2620:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 858,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "2590:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 857,
												"id": 863,
												"nodeType": "Return",
												"src": "2583:45:7"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2506:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2522:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 852,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:7"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2559:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 855,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:7"
									},
									"scope": 1050,
									"src": "2484:151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "3072:294:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 879,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1050",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1050",
																		"typeString": "library Address"
																	}
																],
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 877,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 882,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "3110:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 896,
												"nodeType": "IfStatement",
												"src": "3082:123:7",
												"trueBody": {
													"id": 895,
													"nodeType": "Block",
													"src": "3117:88:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 889,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1050",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1050",
																						"typeString": "library Address"
																					}
																				],
																				"id": 888,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 887,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 892,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "3188:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 884,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "3138:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1102_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:7",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1090,
																	"src": "3138:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 894,
															"nodeType": "RevertStatement",
															"src": "3131:63:7"
														}
													]
												}
											},
											{
												"assignments": [
													898,
													900
												],
												"declarations": [
													{
														"constant": false,
														"id": 898,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "3215:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 897,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 900,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "3229:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 899,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 907,
												"initialValue": {
													"arguments": [
														{
															"id": 905,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "3282:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 901,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 868,
																"src": "3256:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 903,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "3275:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "3331:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "3339:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 911,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "3348:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 908,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "3304:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 876,
												"id": 913,
												"nodeType": "Return",
												"src": "3297:62:7"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2990:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "3006:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 869,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "3025:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:7"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "3058:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:7"
									},
									"scope": 1050,
									"src": "2959:407:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "3605:154:7",
										"statements": [
											{
												"assignments": [
													926,
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "3616:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 925,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "3630:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 927,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 933,
												"initialValue": {
													"arguments": [
														{
															"id": 931,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "3675:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 929,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "3657:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 935,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "3724:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "3732:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 937,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "3741:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 934,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "3697:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 924,
												"id": 939,
												"nodeType": "Return",
												"src": "3690:62:7"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3533:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3549:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 919,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:7"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3591:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 922,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:7"
									},
									"scope": 1050,
									"src": "3505:254:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "3997:156:7",
										"statements": [
											{
												"assignments": [
													952,
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 966,
														"src": "4008:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 951,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 966,
														"src": "4022:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 953,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 959,
												"initialValue": {
													"arguments": [
														{
															"id": 957,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "4069:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 955,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "4049:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 961,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "4118:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "4126:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 963,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "4135:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 960,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "4091:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 950,
												"id": 965,
												"nodeType": "Return",
												"src": "4084:62:7"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3930:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3946:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 945,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:7"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3983:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 948,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:7"
									},
									"scope": 1050,
									"src": "3900:253:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "4579:424:7",
										"statements": [
											{
												"condition": {
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:7",
													"subExpression": {
														"id": 979,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "4594:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1004,
													"nodeType": "Block",
													"src": "4653:344:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 986,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 974,
																			"src": "4841:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 990,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 970,
																				"src": "4867:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1001,
															"nodeType": "IfStatement",
															"src": "4837:119:7",
															"trueBody": {
																"id": 1000,
																"nodeType": "Block",
																"src": "4892:64:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 997,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 970,
																					"src": "4934:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 996,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "4917:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 999,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1002,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "4976:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 978,
															"id": 1003,
															"nodeType": "Return",
															"src": "4969:17:7"
														}
													]
												},
												"id": 1005,
												"nodeType": "IfStatement",
												"src": "4589:408:7",
												"trueBody": {
													"id": 985,
													"nodeType": "Block",
													"src": "4603:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 982,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 974,
																		"src": "4625:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 981,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "4617:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 984,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4466:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4490:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 971,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4512:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 973,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:7"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4565:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 976,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:7"
									},
									"scope": 1050,
									"src": "4421:582:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "5307:122:7",
										"statements": [
											{
												"condition": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:7",
													"subExpression": {
														"id": 1017,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "5322:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "5381:42:7",
													"statements": [
														{
															"expression": {
																"id": 1024,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "5402:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1016,
															"id": 1025,
															"nodeType": "Return",
															"src": "5395:17:7"
														}
													]
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "5317:106:7",
												"trueBody": {
													"id": 1023,
													"nodeType": "Block",
													"src": "5331:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1020,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "5353:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1019,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "5345:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1022,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:7",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5231:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1009,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5245:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1011,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:7"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5293:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1014,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:7"
									},
									"scope": 1050,
									"src": "5205:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "5598:432:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1035,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "5674:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1046,
													"nodeType": "Block",
													"src": "5973:51:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1041,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "5994:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1102_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:7",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1093,
																	"src": "5994:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1045,
															"nodeType": "RevertStatement",
															"src": "5987:26:7"
														}
													]
												},
												"id": 1047,
												"nodeType": "IfStatement",
												"src": "5670:354:7",
												"trueBody": {
													"id": 1040,
													"nodeType": "Block",
													"src": "5697:270:7",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "5824:133:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:7"
																	}
																]
															},
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1032,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1032,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:7",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1039,
															"nodeType": "InlineAssembly",
															"src": "5799:158:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:7",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "5560:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1031,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:7"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:7"
									},
									"scope": 1050,
									"src": "5543:487:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1051,
							"src": "233:5799:7",
							"usedErrors": [
								801
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1080
						]
					},
					"id": 1081,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1052,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1053,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1080,
							"linearizedBaseContracts": [
								1080
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1058,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1057,
												"id": 1060,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1080,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1067,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1066,
												"id": 1069,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1064,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1080,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1075,
												"id": 1077,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1080,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1081,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1102
						]
					},
					"id": 1103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1082,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1083,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:9",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1102,
							"linearizedBaseContracts": [
								1102
							],
							"name": "Errors",
							"nameLocation": "419:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:9",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1090,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "557:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "574:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:9"
									},
									"src": "531:59:9"
								},
								{
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:9",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1093,
									"name": "FailedCall",
									"nameLocation": "696:10:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:9"
									},
									"src": "690:19:9"
								},
								{
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:9",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1096,
									"name": "FailedDeployment",
									"nameLocation": "772:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:9"
									},
									"src": "766:25:9"
								},
								{
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:9",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1101,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "884:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:9"
									},
									"src": "860:33:9"
								}
							],
							"scope": 1103,
							"src": "411:484:9",
							"usedErrors": [
								1090,
								1093,
								1096,
								1101
							],
							"usedEvents": []
						}
					],
					"src": "100:796:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1114
						]
					},
					"id": 1115,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1104,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1105,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1114,
							"linearizedBaseContracts": [
								1114
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1106,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1107,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1114,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1115,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"FvckClaim.sol": {
				"ast": {
					"absolutePath": "FvckClaim.sol",
					"exportedSymbols": {
						"Address": [
							1050
						],
						"Context": [
							1080
						],
						"FvckClaim": [
							1873
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							791
						]
					},
					"id": 1874,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1116,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1311:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1874,
							"sourceUnit": 148,
							"src": "1399:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1874,
							"sourceUnit": 303,
							"src": "1452:62:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1874,
							"sourceUnit": 792,
							"src": "1515:65:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1121,
										"name": "Ownable",
										"nameLocations": [
											"1852:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1852:7:11"
									},
									"id": 1122,
									"nodeType": "InheritanceSpecifier",
									"src": "1852:7:11"
								},
								{
									"baseName": {
										"id": 1123,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1861:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "1861:15:11"
									},
									"id": 1124,
									"nodeType": "InheritanceSpecifier",
									"src": "1861:15:11"
								}
							],
							"canonicalName": "FvckClaim",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1120,
								"nodeType": "StructuredDocumentation",
								"src": "1582:247:11",
								"text": " @title FVCKCLAIM\n @notice Contract to lock BEP20/ERC20 tokens received externally (via transfer),\n         manage a mapping of wallets authorized to claim specific balances,\n         and allow withdrawal of these tokens only once."
							},
							"fullyImplemented": true,
							"id": 1873,
							"linearizedBaseContracts": [
								1873,
								302,
								147,
								1080
							],
							"name": "FvckClaim",
							"nameLocation": "1839:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1128,
									"libraryName": {
										"id": 1125,
										"name": "SafeERC20",
										"nameLocations": [
											"1889:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 791,
										"src": "1889:9:11"
									},
									"nodeType": "UsingForDirective",
									"src": "1883:27:11",
									"typeName": {
										"id": 1127,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1126,
											"name": "IERC20",
											"nameLocations": [
												"1903:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "1903:6:11"
										},
										"referencedDeclaration": 380,
										"src": "1903:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1131,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "1999:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 1873,
									"src": "1975:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1130,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1129,
											"name": "IERC20",
											"nameLocations": [
												"1975:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "1975:6:11"
										},
										"referencedDeclaration": 380,
										"src": "1975:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2866ed21",
									"id": 1133,
									"mutability": "mutable",
									"name": "claimEnabled",
									"nameLocation": "2078:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 1873,
									"src": "2066:24:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1132,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2066:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1137,
									"mutability": "mutable",
									"name": "claimableBalances",
									"nameLocation": "2178:17:11",
									"nodeType": "VariableDeclaration",
									"scope": 1873,
									"src": "2150:45:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1136,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1134,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2158:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2150:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1135,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2169:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1141,
									"mutability": "mutable",
									"name": "claimedBalances",
									"nameLocation": "2285:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 1873,
									"src": "2257:43:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1140,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1138,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2265:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2257:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1139,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2276:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "8f060da9",
									"id": 1145,
									"mutability": "mutable",
									"name": "claimBlocked",
									"nameLocation": "2386:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 1873,
									"src": "2354:44:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1144,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1142,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2362:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2354:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1143,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2373:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "94192b9f",
									"id": 1149,
									"mutability": "mutable",
									"name": "approvedForClaim",
									"nameLocation": "2489:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 1873,
									"src": "2457:48:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1148,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1146,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2465:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2457:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1147,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2476:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6104f4b5",
									"id": 1151,
									"mutability": "mutable",
									"name": "totalRegisteredAddresses",
									"nameLocation": "2562:24:11",
									"nodeType": "VariableDeclaration",
									"scope": 1873,
									"src": "2547:39:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1150,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2547:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2bb2ed39",
									"id": 1153,
									"mutability": "mutable",
									"name": "totalAddressesClaimed",
									"nameLocation": "2637:21:11",
									"nodeType": "VariableDeclaration",
									"scope": 1873,
									"src": "2622:36:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1152,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2622:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "45f7f249",
									"id": 1155,
									"mutability": "mutable",
									"name": "totalAllocated",
									"nameLocation": "2711:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1873,
									"src": "2696:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2696:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1159,
									"mutability": "mutable",
									"name": "_isRegistered",
									"nameLocation": "2797:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1873,
									"src": "2764:46:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1158,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2772:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2764:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1157,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2783:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1164,
									"mutability": "constant",
									"name": "DECIMALS_MULTIPLIER",
									"nameLocation": "2895:19:11",
									"nodeType": "VariableDeclaration",
									"scope": 1873,
									"src": "2870:55:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1160,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2870:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 1163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 1161,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2917:2:11",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3138",
											"id": 1162,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2923:2:11",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "2917:8:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "86e755c6",
									"id": 1169,
									"mutability": "mutable",
									"name": "maxAllocationPerAddress",
									"nameLocation": "2976:23:11",
									"nodeType": "VariableDeclaration",
									"scope": 1873,
									"src": "2961:69:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1165,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2961:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1168,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "353030303030",
											"id": 1166,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3002:6:11",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_500000_by_1",
												"typeString": "int_const 500000"
											},
											"value": "500000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"id": 1167,
											"name": "DECIMALS_MULTIPLIER",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1164,
											"src": "3011:19:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3002:28:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "26155e53",
									"id": 1171,
									"mutability": "mutable",
									"name": "lastEmergencyWithdraw",
									"nameLocation": "3085:21:11",
									"nodeType": "VariableDeclaration",
									"scope": 1873,
									"src": "3070:36:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1170,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3070:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "28607bc6",
									"id": 1174,
									"mutability": "mutable",
									"name": "emergencyWithdrawCooldown",
									"nameLocation": "3166:25:11",
									"nodeType": "VariableDeclaration",
									"scope": 1873,
									"src": "3151:50:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1172,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3151:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1173,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3194:7:11",
										"subdenomination": "weeks",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1f322564",
									"id": 1176,
									"mutability": "mutable",
									"name": "claimApprovalFee",
									"nameLocation": "3301:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 1873,
									"src": "3286:31:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1175,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3286:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e09de4b8e45666deb3ec2bc8225f07988e54ef533eec97cb0b4610127183d79",
									"id": 1182,
									"name": "ClaimMade",
									"nameLocation": "3357:9:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "3383:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "3367:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3367:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3404:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "3396:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3396:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3366:45:11"
									},
									"src": "3351:61:11"
								},
								{
									"anonymous": false,
									"eventSelector": "f14d1c8e59d4cd079b88d0e19cf0de41c86b7a761d5032c0947977002b3ad93a",
									"id": 1190,
									"name": "ClaimableBatchAdded",
									"nameLocation": "3423:19:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"indexed": false,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "3453:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "3443:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1183,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3443:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1184,
													"nodeType": "ArrayTypeName",
													"src": "3443:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"indexed": false,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3473:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "3463:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1186,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3463:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1187,
													"nodeType": "ArrayTypeName",
													"src": "3463:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3442:39:11"
									},
									"src": "3417:65:11"
								},
								{
									"anonymous": false,
									"eventSelector": "5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695",
									"id": 1196,
									"name": "EmergencyWithdraw",
									"nameLocation": "3493:17:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3527:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "3511:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3511:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3542:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "3534:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3534:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3510:39:11"
									},
									"src": "3487:63:11"
								},
								{
									"anonymous": false,
									"eventSelector": "4f03851532cb76253fe3dddbcbe99f0a83446922731a7bdfd2cb44d35ffcb1d9",
									"id": 1202,
									"name": "UnallocatedTokensWithdrawn",
									"nameLocation": "3561:26:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3604:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "3588:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3588:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3619:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "3611:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3611:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3587:39:11"
									},
									"src": "3555:72:11"
								},
								{
									"anonymous": false,
									"eventSelector": "1edd4dc7f91a5992aba0f39c0428bcf4df13d001eebc26eb188307d057f14a07",
									"id": 1206,
									"name": "ClaimEnabled",
									"nameLocation": "3638:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"indexed": false,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "3656:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "3651:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3651:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3650:14:11"
									},
									"src": "3632:33:11"
								},
								{
									"anonymous": false,
									"eventSelector": "4885d73252b9e2c420b677d64d50e8a5798773dbb4cb99c5a2ab2824f725d9a8",
									"id": 1214,
									"name": "TokensAllocated",
									"nameLocation": "3676:15:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3708:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "3692:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3692:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3725:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "3717:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3717:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalAllocated",
												"nameLocation": "3741:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "3733:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3733:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3691:65:11"
									},
									"src": "3670:87:11"
								},
								{
									"anonymous": false,
									"eventSelector": "1837db44f707818dfce8415ef80a201e86882bc1bffabdded272512a96c0799e",
									"id": 1218,
									"name": "NewAddressRegistered",
									"nameLocation": "3768:20:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3805:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "3789:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3789:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3788:25:11"
									},
									"src": "3762:52:11"
								},
								{
									"anonymous": false,
									"eventSelector": "129e15046dd77be10c4cdac8841646b9f3b6d22a00544b93362e9b84c05e6960",
									"id": 1224,
									"name": "ClaimBlockedForAddress",
									"nameLocation": "3825:22:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3864:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "3848:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"indexed": false,
												"mutability": "mutable",
												"name": "isBlocked",
												"nameLocation": "3878:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "3873:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3873:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:41:11"
									},
									"src": "3819:70:11"
								},
								{
									"anonymous": false,
									"eventSelector": "bc7c8a4d8049a3f99a02f2a20640c206a2e4d3f2fa54fd20da9f01fda3620cda",
									"id": 1230,
									"name": "TokenDeposited",
									"nameLocation": "3900:14:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3931:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "3915:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3915:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3946:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "3938:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3938:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3914:39:11"
									},
									"src": "3894:60:11"
								},
								{
									"anonymous": false,
									"eventSelector": "b7fa0f30e1ede3196616147dfdf6c94e47523298677b4f7b0c61027a9f0ebf54",
									"id": 1234,
									"name": "ClaimApproved",
									"nameLocation": "3965:13:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3995:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "3979:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3979:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:25:11"
									},
									"src": "3959:45:11"
								},
								{
									"anonymous": false,
									"eventSelector": "046767aa5821ba6f1a985f8cf0134cb534cba0b26ff165803d3602c7ff046cd4",
									"id": 1238,
									"name": "ClaimApprovalFeeUpdated",
									"nameLocation": "4015:23:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "4047:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "4039:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4038:16:11"
									},
									"src": "4009:46:11"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "4272:126:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1252,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1242,
																		"src": "4298:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4290:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1250,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4290:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4290:15:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4317:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4309:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1254,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4309:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4309:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4290:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e",
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4321:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
																"typeString": "literal_string \"Invalid token\""
															},
															"value": "Invalid token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
																"typeString": "literal_string \"Invalid token\""
															}
														],
														"id": 1249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4282:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4282:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "4282:55:11"
											},
											{
												"expression": {
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1262,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "4347:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1263,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "4355:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "4347:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "4347:14:11"
											},
											{
												"expression": {
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1266,
														"name": "claimEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "4371:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4386:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4371:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "4371:20:11"
											}
										]
									},
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "4061:159:11",
										"text": " @dev Constructor: sets the token to be used and configures the owner.\n @param _token Address of the ERC20/BEP20 token contract."
									},
									"id": 1271,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1245,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4260:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4264:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4260:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1247,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1244,
												"name": "Ownable",
												"nameLocations": [
													"4252:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "4252:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4252:19:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "4244:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "4237:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1241,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1240,
														"name": "IERC20",
														"nameLocations": [
															"4237:6:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4237:6:11"
													},
													"referencedDeclaration": 380,
													"src": "4237:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4236:15:11"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4272:0:11"
									},
									"scope": 1873,
									"src": "4225:173:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "4583:84:11",
										"statements": [
											{
												"expression": {
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1279,
														"name": "claimApprovalFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "4593:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1280,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "4612:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4593:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "4593:23:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1284,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "4655:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1283,
														"name": "ClaimApprovalFeeUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "4631:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4631:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "EmitStatement",
												"src": "4626:34:11"
											}
										]
									},
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "4404:112:11",
										"text": " @notice Allows the owner to set the claim approval fee.\n @param _fee Fee amount in WEI."
									},
									"functionSelector": "e1ffba62",
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1277,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1276,
												"name": "onlyOwner",
												"nameLocations": [
													"4573:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4573:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4573:9:11"
										}
									],
									"name": "setClaimApprovalFee",
									"nameLocation": "4530:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "4558:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "4550:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4550:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4549:14:11"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4583:0:11"
									},
									"scope": 1873,
									"src": "4521:146:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1312,
										"nodeType": "Block",
										"src": "4813:164:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1293,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4831:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4835:5:11",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "4831:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1295,
																"name": "claimApprovalFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "4844:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4831:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f72726563742066656520616d6f756e74",
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4862:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ab3f952ba26a94d88e8cd9fe7400356e417913015cdeb4af2c4bbd982e459f1",
																"typeString": "literal_string \"Incorrect fee amount\""
															},
															"value": "Incorrect fee amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ab3f952ba26a94d88e8cd9fe7400356e417913015cdeb4af2c4bbd982e459f1",
																"typeString": "literal_string \"Incorrect fee amount\""
															}
														],
														"id": 1292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4823:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:62:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "4823:62:11"
											},
											{
												"expression": {
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1300,
															"name": "approvedForClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "4895:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1303,
														"indexExpression": {
															"expression": {
																"id": 1301,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4912:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4916:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4912:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4895:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4926:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4895:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "4895:35:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1308,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4959:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4963:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4959:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1307,
														"name": "ClaimApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "4945:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4945:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1311,
												"nodeType": "EmitStatement",
												"src": "4940:30:11"
											}
										]
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "4673:94:11",
										"text": " @notice Allows a user to pay the approval fee and enable claim eligibility."
									},
									"functionSelector": "a0470cb4",
									"id": 1313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveClaim",
									"nameLocation": "4781:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4793:2:11"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4813:0:11"
									},
									"scope": 1873,
									"src": "4772:205:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "5145:77:11",
										"statements": [
											{
												"expression": {
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1321,
														"name": "claimEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "5155:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1322,
														"name": "_enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "5170:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5155:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "5155:23:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1326,
															"name": "_enabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "5206:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1325,
														"name": "ClaimEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "5193:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5193:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1328,
												"nodeType": "EmitStatement",
												"src": "5188:27:11"
											}
										]
									},
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "4983:98:11",
										"text": " @notice Allows the owner to enable or disable the claim functionality globally."
									},
									"functionSelector": "92929a09",
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1319,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1318,
												"name": "onlyOwner",
												"nameLocations": [
													"5135:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5135:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5135:9:11"
										}
									],
									"name": "setClaimEnabled",
									"nameLocation": "5095:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "_enabled",
												"nameLocation": "5116:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5111:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5111:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5110:15:11"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5145:0:11"
									},
									"scope": 1873,
									"src": "5086:136:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1351,
										"nodeType": "Block",
										"src": "5587:107:11",
										"statements": [
											{
												"expression": {
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1340,
															"name": "claimBlocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "5597:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1342,
														"indexExpression": {
															"id": 1341,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "5610:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5597:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1343,
														"name": "_blocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "5622:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5597:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1345,
												"nodeType": "ExpressionStatement",
												"src": "5597:33:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1347,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "5668:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1348,
															"name": "_blocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "5678:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1346,
														"name": "ClaimBlockedForAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "5645:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5645:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1350,
												"nodeType": "EmitStatement",
												"src": "5640:47:11"
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "5228:267:11",
										"text": " @notice Allows the owner to block or unblock the claim functionality for a specific address.\n @param _account Address to be blocked/unblocked.\n @param _blocked Boolean indicating whether the claim is blocked (true) or unblocked (false)."
									},
									"functionSelector": "2019ddf8",
									"id": 1352,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1338,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1337,
												"name": "onlyOwner",
												"nameLocations": [
													"5577:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5577:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5577:9:11"
										}
									],
									"name": "setClaimBlockedForAddress",
									"nameLocation": "5509:25:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "5543:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "5535:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5535:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "_blocked",
												"nameLocation": "5558:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "5553:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5553:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5534:33:11"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5587:0:11"
									},
									"scope": 1873,
									"src": "5500:194:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "5912:282:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1361,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "5930:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5940:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5930:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4465706f73697420616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5943:42:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																"typeString": "literal_string \"Deposit amount must be greater than zero\""
															},
															"value": "Deposit amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																"typeString": "literal_string \"Deposit amount must be greater than zero\""
															}
														],
														"id": 1360,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5922:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5922:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "5922:64:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1370,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6020:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6024:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6020:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1368,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1131,
																		"src": "6004:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6010:9:11",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 337,
																	"src": "6004:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6004:27:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1373,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "6035:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6004:38:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6044:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5996:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5996:71:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "5996:71:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1381,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6101:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6105:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6101:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1385,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6121:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FvckClaim_$1873",
																		"typeString": "contract FvckClaim"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FvckClaim_$1873",
																		"typeString": "contract FvckClaim"
																	}
																],
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6113:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1383,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6113:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6113:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1387,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "6128:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1378,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "6078:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6084:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 454,
														"src": "6078:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6078:58:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1389,
												"nodeType": "ExpressionStatement",
												"src": "6078:58:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1391,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6167:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6171:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6167:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1393,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "6179:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1390,
														"name": "TokenDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "6152:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6152:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1395,
												"nodeType": "EmitStatement",
												"src": "6147:40:11"
											}
										]
									},
									"documentation": {
										"id": 1353,
										"nodeType": "StructuredDocumentation",
										"src": "5700:148:11",
										"text": " @notice Allows the owner to deposit tokens into the contract for distribution.\n @param _amount Amount of tokens to deposit."
									},
									"functionSelector": "dd49756e",
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1358,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1357,
												"name": "onlyOwner",
												"nameLocations": [
													"5902:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5902:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5902:9:11"
										}
									],
									"name": "depositTokens",
									"nameLocation": "5862:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5884:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "5876:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:17:11"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5912:0:11"
									},
									"scope": 1873,
									"src": "5853:341:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1525,
										"nodeType": "Block",
										"src": "6608:1221:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1410,
																	"name": "_accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "6639:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6649:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6639:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1412,
																	"name": "_amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "6659:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6668:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6659:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6639:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4172726179206c656e6774687320646f206e6f74206d61746368",
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6688:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9fda3bf08e7edf126ed19c887ac2339ed77973707baa0165c9c06cf0e4c6eb7",
																"typeString": "literal_string \"Array lengths do not match\""
															},
															"value": "Array lengths do not match"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9fda3bf08e7edf126ed19c887ac2339ed77973707baa0165c9c06cf0e4c6eb7",
																"typeString": "literal_string \"Array lengths do not match\""
															}
														],
														"id": 1409,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6618:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6618:108:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "6618:108:11"
											},
											{
												"assignments": [
													1419
												],
												"declarations": [
													{
														"constant": false,
														"id": 1419,
														"mutability": "mutable",
														"name": "newTotalToAllocate",
														"nameLocation": "6745:18:11",
														"nodeType": "VariableDeclaration",
														"scope": 1525,
														"src": "6737:26:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6737:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1421,
												"initialValue": {
													"hexValue": "30",
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6766:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6737:30:11"
											},
											{
												"body": {
													"id": 1504,
													"nodeType": "Block",
													"src": "6825:732:11",
													"statements": [
														{
															"assignments": [
																1434
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1434,
																	"mutability": "mutable",
																	"name": "account",
																	"nameLocation": "6847:7:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1504,
																	"src": "6839:15:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1433,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6839:7:11",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1438,
															"initialValue": {
																"baseExpression": {
																	"id": 1435,
																	"name": "_accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "6857:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1437,
																"indexExpression": {
																	"id": 1436,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "6867:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6857:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6839:30:11"
														},
														{
															"assignments": [
																1440
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1440,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6891:6:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1504,
																	"src": "6883:14:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1439,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6883:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1446,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1441,
																		"name": "_amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1404,
																		"src": "6900:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1443,
																	"indexExpression": {
																		"id": 1442,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1423,
																		"src": "6909:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6900:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1444,
																	"name": "DECIMALS_MULTIPLIER",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "6914:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6900:33:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6883:50:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"expression": {
																					"id": 1448,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1434,
																					"src": "6956:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 1449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6964:4:11",
																				"memberName": "code",
																				"nodeType": "MemberAccess",
																				"src": "6956:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6969:6:11",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6956:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6979:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6956:24:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "43616e6e6f74206265206120636f6e7472616374",
																		"id": 1453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6982:22:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_47cc3508f6aac3bd824d766ddbb7b6e1aaf29363a0d18fbe33bd1d4f7dad8ff4",
																			"typeString": "literal_string \"Cannot be a contract\""
																		},
																		"value": "Cannot be a contract"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_47cc3508f6aac3bd824d766ddbb7b6e1aaf29363a0d18fbe33bd1d4f7dad8ff4",
																			"typeString": "literal_string \"Cannot be a contract\""
																		}
																	],
																	"id": 1447,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6948:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6948:57:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1455,
															"nodeType": "ExpressionStatement",
															"src": "6948:57:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 1457,
																					"name": "claimableBalances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1137,
																					"src": "7044:17:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1459,
																				"indexExpression": {
																					"id": 1458,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1434,
																					"src": "7062:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7044:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1460,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1440,
																				"src": "7073:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7044:35:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1462,
																			"name": "maxAllocationPerAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1169,
																			"src": "7083:23:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7044:62:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "416c6c6f636174696f6e206578636565647320616c6c6f776564206c696d6974",
																		"id": 1464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7124:34:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_09b028424e7075cc04406e7de0a34b8a92bf5c23491cc707198b52e233f86317",
																			"typeString": "literal_string \"Allocation exceeds allowed limit\""
																		},
																		"value": "Allocation exceeds allowed limit"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_09b028424e7075cc04406e7de0a34b8a92bf5c23491cc707198b52e233f86317",
																			"typeString": "literal_string \"Allocation exceeds allowed limit\""
																		}
																	],
																	"id": 1456,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7019:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7019:153:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1466,
															"nodeType": "ExpressionStatement",
															"src": "7019:153:11"
														},
														{
															"condition": {
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "7191:23:11",
																"subExpression": {
																	"baseExpression": {
																		"id": 1467,
																		"name": "_isRegistered",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "7192:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1469,
																	"indexExpression": {
																		"id": 1468,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1434,
																		"src": "7206:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7192:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1485,
															"nodeType": "IfStatement",
															"src": "7187:187:11",
															"trueBody": {
																"id": 1484,
																"nodeType": "Block",
																"src": "7216:158:11",
																"statements": [
																	{
																		"expression": {
																			"id": 1475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1471,
																					"name": "_isRegistered",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1159,
																					"src": "7234:13:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																						"typeString": "mapping(address => bool)"
																					}
																				},
																				"id": 1473,
																				"indexExpression": {
																					"id": 1472,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1434,
																					"src": "7248:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "7234:22:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1474,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7259:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "7234:29:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1476,
																		"nodeType": "ExpressionStatement",
																		"src": "7234:29:11"
																	},
																	{
																		"expression": {
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "7281:26:11",
																			"subExpression": {
																				"id": 1477,
																				"name": "totalRegisteredAddresses",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1151,
																				"src": "7281:24:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1479,
																		"nodeType": "ExpressionStatement",
																		"src": "7281:26:11"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1481,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1434,
																					"src": "7351:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1480,
																				"name": "NewAddressRegistered",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1218,
																				"src": "7330:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																					"typeString": "function (address)"
																				}
																			},
																			"id": 1482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7330:29:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1483,
																		"nodeType": "EmitStatement",
																		"src": "7325:34:11"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1486,
																		"name": "claimableBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1137,
																		"src": "7388:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1488,
																	"indexExpression": {
																		"id": 1487,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1434,
																		"src": "7406:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7388:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1489,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1440,
																	"src": "7418:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7388:36:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1491,
															"nodeType": "ExpressionStatement",
															"src": "7388:36:11"
														},
														{
															"expression": {
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1492,
																	"name": "newTotalToAllocate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "7438:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1493,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1440,
																	"src": "7460:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7438:28:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1495,
															"nodeType": "ExpressionStatement",
															"src": "7438:28:11"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1497,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1434,
																		"src": "7502:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1498,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "7511:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1499,
																			"name": "claimableBalances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "7519:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1501,
																		"indexExpression": {
																			"id": 1500,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1434,
																			"src": "7537:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7519:26:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1496,
																	"name": "TokensAllocated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "7486:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7486:60:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1503,
															"nodeType": "EmitStatement",
															"src": "7481:65:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1426,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "6798:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1427,
															"name": "_accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "6802:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6812:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6802:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6798:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1505,
												"initializationExpression": {
													"assignments": [
														1423
													],
													"declarations": [
														{
															"constant": false,
															"id": 1423,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6791:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1505,
															"src": "6783:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1422,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6783:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1425,
													"initialValue": {
														"hexValue": "30",
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6795:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6783:13:11"
												},
												"loopExpression": {
													"expression": {
														"id": 1431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6820:3:11",
														"subExpression": {
															"id": 1430,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "6820:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1432,
													"nodeType": "ExpressionStatement",
													"src": "6820:3:11"
												},
												"nodeType": "ForStatement",
												"src": "6778:779:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1507,
																	"name": "contractTokenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1657,
																	"src": "7588:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7588:22:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1509,
																	"name": "totalAllocated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "7614:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1510,
																	"name": "newTotalToAllocate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "7631:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7614:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7588:61:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e636520666f7220616c6c6f636174696f6e",
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7663:46:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f7e30f3b25afa0381893df785dd0991eeb72d50d15b48d0285083bf32818e6eb",
																"typeString": "literal_string \"Insufficient contract balance for allocation\""
															},
															"value": "Insufficient contract balance for allocation"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f7e30f3b25afa0381893df785dd0991eeb72d50d15b48d0285083bf32818e6eb",
																"typeString": "literal_string \"Insufficient contract balance for allocation\""
															}
														],
														"id": 1506,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7567:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7567:152:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1515,
												"nodeType": "ExpressionStatement",
												"src": "7567:152:11"
											},
											{
												"expression": {
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1516,
														"name": "totalAllocated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "7730:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1517,
														"name": "newTotalToAllocate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "7748:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7730:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "7730:36:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1521,
															"name": "_accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "7802:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														{
															"id": 1522,
															"name": "_amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "7813:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 1520,
														"name": "ClaimableBatchAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "7782:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory,uint256[] memory)"
														}
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7782:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1524,
												"nodeType": "EmitStatement",
												"src": "7777:45:11"
											}
										]
									},
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "6200:276:11",
										"text": " @notice Adds (or sums) claimable balances for multiple addresses in a single batch operation.\n @param _accounts List of addresses eligible for claims.\n @param _amounts Corresponding token amounts (without decimals) each address can claim."
									},
									"functionSelector": "d7bebac0",
									"id": 1526,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1407,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1406,
												"name": "onlyOwner",
												"nameLocations": [
													"6598:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6598:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6598:9:11"
										}
									],
									"name": "addClaimableBatch",
									"nameLocation": "6490:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "_accounts",
												"nameLocation": "6536:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "6517:28:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1399,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6517:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1400,
													"nodeType": "ArrayTypeName",
													"src": "6517:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "6574:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "6555:27:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1402,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6555:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1403,
													"nodeType": "ArrayTypeName",
													"src": "6555:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6507:81:11"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6608:0:11"
									},
									"scope": 1873,
									"src": "6481:1348:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "7985:655:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1533,
															"name": "claimEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "8003:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436c61696d206e6f7420656e61626c6564",
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8017:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77cbf9fd39f60bad341ce3c780ba8384d54d093463ea9f33c9f1ea5e2cb56381",
																"typeString": "literal_string \"Claim not enabled\""
															},
															"value": "Claim not enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77cbf9fd39f60bad341ce3c780ba8384d54d093463ea9f33c9f1ea5e2cb56381",
																"typeString": "literal_string \"Claim not enabled\""
															}
														],
														"id": 1532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7995:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7995:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "7995:42:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "8055:25:11",
															"subExpression": {
																"baseExpression": {
																	"id": 1538,
																	"name": "claimBlocked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "8056:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1541,
																"indexExpression": {
																	"expression": {
																		"id": 1539,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8069:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8073:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8069:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8056:24:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436c61696d20626c6f636b656420666f7220746869732061646472657373",
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8082:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c157683f76319e17b2ecf3ad3b64a005df2e617c7482e566664acd2683cbe83f",
																"typeString": "literal_string \"Claim blocked for this address\""
															},
															"value": "Claim blocked for this address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c157683f76319e17b2ecf3ad3b64a005df2e617c7482e566664acd2683cbe83f",
																"typeString": "literal_string \"Claim blocked for this address\""
															}
														],
														"id": 1537,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8047:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8047:68:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "8047:68:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1547,
																"name": "approvedForClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "8133:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1550,
															"indexExpression": {
																"expression": {
																	"id": 1548,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8150:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8154:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8150:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8133:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "417070726f76616c20666565206e6f742070616964",
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8163:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da6ac7f3115479cdf80fe6763cd7f0188752323abfcf442f06ceefe0e8137a18",
																"typeString": "literal_string \"Approval fee not paid\""
															},
															"value": "Approval fee not paid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da6ac7f3115479cdf80fe6763cd7f0188752323abfcf442f06ceefe0e8137a18",
																"typeString": "literal_string \"Approval fee not paid\""
															}
														],
														"id": 1546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8125:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8125:62:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1553,
												"nodeType": "ExpressionStatement",
												"src": "8125:62:11"
											},
											{
												"assignments": [
													1555
												],
												"declarations": [
													{
														"constant": false,
														"id": 1555,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "8205:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1610,
														"src": "8197:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1554,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8197:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1560,
												"initialValue": {
													"baseExpression": {
														"id": 1556,
														"name": "claimableBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "8214:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1559,
													"indexExpression": {
														"expression": {
															"id": 1557,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8232:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8236:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8232:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8214:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8197:46:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1562,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1555,
																"src": "8261:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8270:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8261:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f2062616c616e636520746f20636c61696d",
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8273:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f7d0aaffc01656dfd5035f8ff7e371b4518722e7cb53e5b13bdbbf882c62dac",
																"typeString": "literal_string \"You have no balance to claim\""
															},
															"value": "You have no balance to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f7d0aaffc01656dfd5035f8ff7e371b4518722e7cb53e5b13bdbbf882c62dac",
																"typeString": "literal_string \"You have no balance to claim\""
															}
														],
														"id": 1561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8253:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8253:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1567,
												"nodeType": "ExpressionStatement",
												"src": "8253:51:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1569,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8330:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8334:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8330:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1571,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1555,
															"src": "8342:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1568,
														"name": "ClaimMade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "8320:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8320:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1573,
												"nodeType": "EmitStatement",
												"src": "8315:34:11"
											},
											{
												"expression": {
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1574,
															"name": "claimableBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "8360:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1577,
														"indexExpression": {
															"expression": {
																"id": 1575,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8378:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8382:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8378:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8360:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8392:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8360:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1580,
												"nodeType": "ExpressionStatement",
												"src": "8360:33:11"
											},
											{
												"expression": {
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1581,
														"name": "totalAllocated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "8403:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1582,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1555,
														"src": "8421:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8403:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "8403:24:11"
											},
											{
												"expression": {
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "8437:23:11",
													"subExpression": {
														"id": 1585,
														"name": "totalAddressesClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "8437:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1587,
												"nodeType": "ExpressionStatement",
												"src": "8437:23:11"
											},
											{
												"expression": {
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1588,
															"name": "claimedBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "8470:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1591,
														"indexExpression": {
															"expression": {
																"id": 1589,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8486:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8490:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8486:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8470:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1592,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1555,
														"src": "8501:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8470:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1594,
												"nodeType": "ExpressionStatement",
												"src": "8470:37:11"
											},
											{
												"expression": {
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1595,
															"name": "approvedForClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "8518:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1598,
														"indexExpression": {
															"expression": {
																"id": 1596,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8535:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8539:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8535:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8518:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8549:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "8518:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "8518:36:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1605,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8614:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8618:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8614:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1607,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1555,
															"src": "8626:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1602,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "8595:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8601:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 427,
														"src": "8595:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8595:38:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1609,
												"nodeType": "ExpressionStatement",
												"src": "8595:38:11"
											}
										]
									},
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "7835:106:11",
										"text": " @notice Allows a user to claim their allocated tokens. The claim can be made only once."
									},
									"functionSelector": "4e71d92d",
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1530,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1529,
												"name": "nonReentrant",
												"nameLocations": [
													"7972:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "7972:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "7972:12:11"
										}
									],
									"name": "claim",
									"nameLocation": "7955:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7960:2:11"
									},
									"returnParameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7985:0:11"
									},
									"scope": 1873,
									"src": "7946:694:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1641,
										"nodeType": "Block",
										"src": "8786:177:11",
										"statements": [
											{
												"assignments": [
													1618
												],
												"declarations": [
													{
														"constant": false,
														"id": 1618,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "8804:15:11",
														"nodeType": "VariableDeclaration",
														"scope": 1641,
														"src": "8796:23:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1617,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8796:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1624,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1621,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "8830:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_FvckClaim_$1873",
																	"typeString": "contract FvckClaim"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_FvckClaim_$1873",
																	"typeString": "contract FvckClaim"
																}
															],
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8822:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1619,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8822:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8822:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8836:7:11",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "8822:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8796:47:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1626,
																"name": "contractBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1618,
																"src": "8861:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8879:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8861:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206665657320746f207769746864726177",
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8882:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c",
																"typeString": "literal_string \"No fees to withdraw\""
															},
															"value": "No fees to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c",
																"typeString": "literal_string \"No fees to withdraw\""
															}
														],
														"id": 1625,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8853:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8853:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "8853:51:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1638,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "8940:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1634,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "8922:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8922:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8914:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1632,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8914:8:11",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8914:16:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8931:8:11",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8914:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8914:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1640,
												"nodeType": "ExpressionStatement",
												"src": "8914:42:11"
											}
										]
									},
									"documentation": {
										"id": 1612,
										"nodeType": "StructuredDocumentation",
										"src": "8646:84:11",
										"text": " @notice Allows the owner to withdraw all collected approval fees."
									},
									"functionSelector": "e1413163",
									"id": 1642,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1615,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1614,
												"name": "onlyOwner",
												"nameLocations": [
													"8776:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8776:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "8776:9:11"
										}
									],
									"name": "withdrawApprovalFees",
									"nameLocation": "8744:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8764:2:11"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8786:0:11"
									},
									"scope": 1873,
									"src": "8735:228:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "9111:54:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1652,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9152:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FvckClaim_$1873",
																		"typeString": "contract FvckClaim"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FvckClaim_$1873",
																		"typeString": "contract FvckClaim"
																	}
																],
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9144:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1650,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9144:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9144:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1648,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "9128:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9134:9:11",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "9128:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9128:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1647,
												"id": 1655,
												"nodeType": "Return",
												"src": "9121:37:11"
											}
										]
									},
									"documentation": {
										"id": 1643,
										"nodeType": "StructuredDocumentation",
										"src": "8969:75:11",
										"text": " @notice Returns the total token balance of the contract."
									},
									"functionSelector": "9e9aed62",
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contractTokenBalance",
									"nameLocation": "9058:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9078:2:11"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "9102:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9102:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9101:9:11"
									},
									"scope": 1873,
									"src": "9049:116:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1677,
										"nodeType": "Block",
										"src": "9327:153:11",
										"statements": [
											{
												"assignments": [
													1664
												],
												"declarations": [
													{
														"constant": false,
														"id": 1664,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "9345:15:11",
														"nodeType": "VariableDeclaration",
														"scope": 1677,
														"src": "9337:23:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1663,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9337:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1667,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1665,
														"name": "contractTokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "9363:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9363:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9337:48:11"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1668,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "9402:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1669,
															"name": "totalAllocated",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "9420:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9402:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9472:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "9402:71:11",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1671,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "9437:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1672,
															"name": "totalAllocated",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "9455:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9437:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1662,
												"id": 1676,
												"nodeType": "Return",
												"src": "9395:78:11"
											}
										]
									},
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "9171:89:11",
										"text": " @notice Retrieves the total tokens that are unallocated in the contract."
									},
									"functionSelector": "4243fc4e",
									"id": 1678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUnallocatedTokens",
									"nameLocation": "9274:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9294:2:11"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "9318:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9318:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9317:9:11"
									},
									"scope": 1873,
									"src": "9265:215:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "9643:446:11",
										"statements": [
											{
												"assignments": [
													1687
												],
												"declarations": [
													{
														"constant": false,
														"id": 1687,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "9661:15:11",
														"nodeType": "VariableDeclaration",
														"scope": 1732,
														"src": "9653:23:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1686,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9653:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1695,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1692,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9703:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FvckClaim_$1873",
																		"typeString": "contract FvckClaim"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FvckClaim_$1873",
																		"typeString": "contract FvckClaim"
																	}
																],
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9695:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1690,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9695:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9695:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1688,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "9679:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9685:9:11",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "9679:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9679:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9653:56:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1697,
																"name": "contractBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1687,
																"src": "9727:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9745:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9727:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420686173206e6f2062616c616e6365",
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9748:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a8b5978deb0070b60a19e8fdeecf8ef51086f86967d5f1f8e0dedc934d5c10bd",
																"typeString": "literal_string \"Contract has no balance\""
															},
															"value": "Contract has no balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a8b5978deb0070b60a19e8fdeecf8ef51086f86967d5f1f8e0dedc934d5c10bd",
																"typeString": "literal_string \"Contract has no balance\""
															}
														],
														"id": 1696,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9719:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9719:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "9719:55:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1704,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "9805:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9811:9:11",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "9805:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1706,
																	"name": "lastEmergencyWithdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1171,
																	"src": "9824:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1707,
																	"name": "emergencyWithdrawCooldown",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1174,
																	"src": "9848:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9824:49:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9805:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6f6c646f776e20696e2070726f6772657373",
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9887:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6297d24594bfa03e2a0a0fbc6cd2992fe82d84e656571e892bd1b398a0254eca",
																"typeString": "literal_string \"Cooldown in progress\""
															},
															"value": "Cooldown in progress"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6297d24594bfa03e2a0a0fbc6cd2992fe82d84e656571e892bd1b398a0254eca",
																"typeString": "literal_string \"Cooldown in progress\""
															}
														],
														"id": 1703,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9784:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9784:135:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1712,
												"nodeType": "ExpressionStatement",
												"src": "9784:135:11"
											},
											{
												"expression": {
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1713,
														"name": "lastEmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "9930:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1714,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9954:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9960:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9954:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9930:39:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1717,
												"nodeType": "ExpressionStatement",
												"src": "9930:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1721,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "9998:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9998:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1723,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "10007:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1718,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "9979:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9985:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 427,
														"src": "9979:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9979:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1725,
												"nodeType": "ExpressionStatement",
												"src": "9979:44:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1727,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "10057:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10057:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1729,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "10066:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1726,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "10039:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10039:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1731,
												"nodeType": "EmitStatement",
												"src": "10034:48:11"
											}
										]
									},
									"documentation": {
										"id": 1679,
										"nodeType": "StructuredDocumentation",
										"src": "9486:91:11",
										"text": " @notice Allows the owner to withdraw all tokens in case of an emergency."
									},
									"functionSelector": "db2e21bc",
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1682,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1681,
												"name": "onlyOwner",
												"nameLocations": [
													"9620:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9620:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "9620:9:11"
										},
										{
											"id": 1684,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1683,
												"name": "nonReentrant",
												"nameLocations": [
													"9630:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "9630:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "9630:12:11"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "9591:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9608:2:11"
									},
									"returnParameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9643:0:11"
									},
									"scope": 1873,
									"src": "9582:507:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "10274:465:11",
										"statements": [
											{
												"assignments": [
													1742
												],
												"declarations": [
													{
														"constant": false,
														"id": 1742,
														"mutability": "mutable",
														"name": "unallocatedTokens",
														"nameLocation": "10292:17:11",
														"nodeType": "VariableDeclaration",
														"scope": 1782,
														"src": "10284:25:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1741,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10284:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1745,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1743,
														"name": "getUnallocatedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "10312:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10312:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10284:50:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1747,
																"name": "unallocatedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1742,
																"src": "10352:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10372:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10352:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20756e616c6c6f636174656420746f6b656e7320746f207769746864726177",
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10375:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e60dd92c4aa53d7953fb339065eb9ffa879f2aff7dc3476c17258b4864fb63c2",
																"typeString": "literal_string \"No unallocated tokens to withdraw\""
															},
															"value": "No unallocated tokens to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e60dd92c4aa53d7953fb339065eb9ffa879f2aff7dc3476c17258b4864fb63c2",
																"typeString": "literal_string \"No unallocated tokens to withdraw\""
															}
														],
														"id": 1746,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10344:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10344:67:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1752,
												"nodeType": "ExpressionStatement",
												"src": "10344:67:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1754,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "10442:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10448:9:11",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "10442:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1756,
																	"name": "lastEmergencyWithdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1171,
																	"src": "10461:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1757,
																	"name": "emergencyWithdrawCooldown",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1174,
																	"src": "10485:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10461:49:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10442:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6f6c646f776e20696e2070726f6772657373",
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10524:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6297d24594bfa03e2a0a0fbc6cd2992fe82d84e656571e892bd1b398a0254eca",
																"typeString": "literal_string \"Cooldown in progress\""
															},
															"value": "Cooldown in progress"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6297d24594bfa03e2a0a0fbc6cd2992fe82d84e656571e892bd1b398a0254eca",
																"typeString": "literal_string \"Cooldown in progress\""
															}
														],
														"id": 1753,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10421:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10421:135:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1762,
												"nodeType": "ExpressionStatement",
												"src": "10421:135:11"
											},
											{
												"expression": {
													"id": 1766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1763,
														"name": "lastEmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "10567:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1764,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "10591:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10597:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "10591:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10567:39:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1767,
												"nodeType": "ExpressionStatement",
												"src": "10567:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1771,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "10635:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10635:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1773,
															"name": "unallocatedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "10644:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1768,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "10616:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10622:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 427,
														"src": "10616:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10616:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "10616:46:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1777,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "10705:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10705:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1779,
															"name": "unallocatedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "10714:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1776,
														"name": "UnallocatedTokensWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "10678:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10678:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1781,
												"nodeType": "EmitStatement",
												"src": "10673:59:11"
											}
										]
									},
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "10095:105:11",
										"text": " @notice Allows the owner to withdraw only the unallocated tokens, respecting a cooldown."
									},
									"functionSelector": "dc7f9e34",
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1737,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1736,
												"name": "onlyOwner",
												"nameLocations": [
													"10251:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "10251:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "10251:9:11"
										},
										{
											"id": 1739,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1738,
												"name": "nonReentrant",
												"nameLocations": [
													"10261:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "10261:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "10261:12:11"
										}
									],
									"name": "withdrawUnallocatedTokens",
									"nameLocation": "10214:25:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10239:2:11"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10274:0:11"
									},
									"scope": 1873,
									"src": "10205:534:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1795,
										"nodeType": "Block",
										"src": "11032:51:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1791,
														"name": "claimableBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "11049:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1793,
													"indexExpression": {
														"id": 1792,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1786,
														"src": "11067:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11049:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1790,
												"id": 1794,
												"nodeType": "Return",
												"src": "11042:34:11"
											}
										]
									},
									"documentation": {
										"id": 1784,
										"nodeType": "StructuredDocumentation",
										"src": "10819:129:11",
										"text": " @notice Retrieves the specific claimable balance for a given address.\n @param _account Address to query."
									},
									"functionSelector": "06def802",
									"id": 1796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimableBalance",
									"nameLocation": "10962:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "10990:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "10982:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10982:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10981:18:11"
									},
									"returnParameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "11023:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11023:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11022:9:11"
									},
									"scope": 1873,
									"src": "10953:130:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "11299:49:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1804,
														"name": "claimedBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "11316:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1806,
													"indexExpression": {
														"id": 1805,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "11332:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11316:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1803,
												"id": 1807,
												"nodeType": "Return",
												"src": "11309:32:11"
											}
										]
									},
									"documentation": {
										"id": 1797,
										"nodeType": "StructuredDocumentation",
										"src": "11089:130:11",
										"text": " @notice Retrieves the total tokens already claimed by a given address.\n @param _account Address to query."
									},
									"functionSelector": "522bf1d4",
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalClaimed",
									"nameLocation": "11233:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "11257:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "11249:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11249:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11248:18:11"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "11290:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11290:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11289:9:11"
									},
									"scope": 1873,
									"src": "11224:124:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1835,
										"nodeType": "Block",
										"src": "11543:130:11",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1817,
																		"name": "claimEnabled",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1133,
																		"src": "11561:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"id": 1821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "11577:23:11",
																		"subExpression": {
																			"baseExpression": {
																				"id": 1818,
																				"name": "claimBlocked",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1145,
																				"src": "11578:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 1820,
																			"indexExpression": {
																				"id": 1819,
																				"name": "_account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1812,
																				"src": "11591:8:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11578:22:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "11561:39:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1823,
																		"name": "approvedForClaim",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1149,
																		"src": "11604:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1825,
																	"indexExpression": {
																		"id": 1824,
																		"name": "_account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "11621:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11604:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "11561:69:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1827,
																		"name": "claimableBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1137,
																		"src": "11634:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1829,
																	"indexExpression": {
																		"id": 1828,
																		"name": "_account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "11652:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11634:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11664:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11634:31:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11561:104:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1833,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11560:106:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1816,
												"id": 1834,
												"nodeType": "Return",
												"src": "11553:113:11"
											}
										]
									},
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "11354:119:11",
										"text": " @notice Checks whether a wallet can currently claim tokens.\n @param _account Address to query."
									},
									"functionSelector": "bf3506c1",
									"id": 1836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canClaim",
									"nameLocation": "11487:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "11504:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "11496:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11496:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11495:18:11"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "11537:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1814,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11537:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11536:6:11"
									},
									"scope": 1873,
									"src": "11478:195:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1871,
										"nodeType": "Block",
										"src": "12025:243:11",
										"statements": [
											{
												"expression": {
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1850,
														"name": "_totalRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1840,
														"src": "12035:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1851,
														"name": "totalRegisteredAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "12054:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12035:43:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1853,
												"nodeType": "ExpressionStatement",
												"src": "12035:43:11"
											},
											{
												"expression": {
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1854,
														"name": "_totalClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1842,
														"src": "12088:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1855,
														"name": "totalAddressesClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "12104:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12088:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1857,
												"nodeType": "ExpressionStatement",
												"src": "12088:37:11"
											},
											{
												"expression": {
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1858,
														"name": "_totalContractBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1844,
														"src": "12135:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1859,
															"name": "contractTokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "12159:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12159:22:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12135:46:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1862,
												"nodeType": "ExpressionStatement",
												"src": "12135:46:11"
											},
											{
												"expression": {
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1863,
														"name": "_totalAllocated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "12191:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1864,
														"name": "totalAllocated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "12209:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12191:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1866,
												"nodeType": "ExpressionStatement",
												"src": "12191:32:11"
											},
											{
												"expression": {
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1867,
														"name": "_claimEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1848,
														"src": "12233:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1868,
														"name": "claimEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "12249:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12233:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1870,
												"nodeType": "ExpressionStatement",
												"src": "12233:28:11"
											}
										]
									},
									"documentation": {
										"id": 1837,
										"nodeType": "StructuredDocumentation",
										"src": "11679:75:11",
										"text": " @notice Retrieves statistics for the frontend interface."
									},
									"functionSelector": "c59d4847",
									"id": 1872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStats",
									"nameLocation": "11768:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11776:2:11"
									},
									"returnParameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "_totalRegistered",
												"nameLocation": "11847:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "11839:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11839:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "_totalClaimed",
												"nameLocation": "11885:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "11877:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11877:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "_totalContractBalance",
												"nameLocation": "11920:21:11",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "11912:29:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11912:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "_totalAllocated",
												"nameLocation": "11963:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "11955:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11955:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "_claimEnabled",
												"nameLocation": "11997:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "11992:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1847,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11992:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11825:195:11"
									},
									"scope": 1873,
									"src": "11759:509:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1874,
							"src": "1830:10440:11",
							"usedErrors": [
								13,
								18,
								394
							],
							"usedEvents": [
								24,
								1182,
								1190,
								1196,
								1202,
								1206,
								1214,
								1218,
								1224,
								1230,
								1234,
								1238
							]
						}
					],
					"src": "1311:10960:11"
				},
				"id": 11
			}
		}
	}
}